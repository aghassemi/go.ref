// Copyright 2015 The Vanadium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// This file was auto-generated by the vanadium vdl tool.
// Package: nativedep

package nativedep

import (
	"fmt"
	"time"
	"v.io/v23/vdl"
	"v.io/v23/vdl/testdata/nativetest"
	nativetest_2 "v.io/x/ref/lib/vdl/testdata/nativetest"
)

type All struct {
	A string
	B map[string]int
	C time.Time
	D nativetest.NativeSamePkg
	E map[nativetest.NativeSamePkg]time.Time
}

func (All) __VDLReflect(struct {
	Name string `vdl:"v.io/x/ref/lib/vdl/testdata/nativedep.All"`
}) {
}

func (m *All) FillVDLTarget(t vdl.Target, tt *vdl.Type) error {
	__VDLEnsureNativeBuilt()
	fieldsTarget1, err := t.StartFields(tt)
	if err != nil {
		return err
	}

	var wireValue2 nativetest_2.WireString
	if err := nativetest_2.WireStringFromNative(&wireValue2, m.A); err != nil {
		return err
	}

	keyTarget3, fieldTarget4, err := fieldsTarget1.StartField("A")
	if err != vdl.ErrFieldNoExist && err != nil {
		return err
	}
	if err != vdl.ErrFieldNoExist {

		if err := wireValue2.FillVDLTarget(fieldTarget4, __VDLType_v_io_x_ref_lib_vdl_testdata_nativetest_WireString); err != nil {
			return err
		}
		if err := fieldsTarget1.FinishField(keyTarget3, fieldTarget4); err != nil {
			return err
		}
	}
	var wireValue5 nativetest_2.WireMapStringInt
	if err := nativetest_2.WireMapStringIntFromNative(&wireValue5, m.B); err != nil {
		return err
	}

	keyTarget6, fieldTarget7, err := fieldsTarget1.StartField("B")
	if err != vdl.ErrFieldNoExist && err != nil {
		return err
	}
	if err != vdl.ErrFieldNoExist {

		if err := wireValue5.FillVDLTarget(fieldTarget7, __VDLType_v_io_x_ref_lib_vdl_testdata_nativetest_WireMapStringInt); err != nil {
			return err
		}
		if err := fieldsTarget1.FinishField(keyTarget6, fieldTarget7); err != nil {
			return err
		}
	}
	var wireValue8 nativetest_2.WireTime
	if err := nativetest_2.WireTimeFromNative(&wireValue8, m.C); err != nil {
		return err
	}

	keyTarget9, fieldTarget10, err := fieldsTarget1.StartField("C")
	if err != vdl.ErrFieldNoExist && err != nil {
		return err
	}
	if err != vdl.ErrFieldNoExist {

		if err := wireValue8.FillVDLTarget(fieldTarget10, __VDLType_v_io_x_ref_lib_vdl_testdata_nativetest_WireTime); err != nil {
			return err
		}
		if err := fieldsTarget1.FinishField(keyTarget9, fieldTarget10); err != nil {
			return err
		}
	}
	var wireValue11 nativetest_2.WireSamePkg
	if err := nativetest_2.WireSamePkgFromNative(&wireValue11, m.D); err != nil {
		return err
	}

	keyTarget12, fieldTarget13, err := fieldsTarget1.StartField("D")
	if err != vdl.ErrFieldNoExist && err != nil {
		return err
	}
	if err != vdl.ErrFieldNoExist {

		if err := wireValue11.FillVDLTarget(fieldTarget13, __VDLType_v_io_x_ref_lib_vdl_testdata_nativetest_WireSamePkg); err != nil {
			return err
		}
		if err := fieldsTarget1.FinishField(keyTarget12, fieldTarget13); err != nil {
			return err
		}
	}
	var wireValue14 nativetest_2.WireMultiImport
	if err := nativetest_2.WireMultiImportFromNative(&wireValue14, m.E); err != nil {
		return err
	}

	keyTarget15, fieldTarget16, err := fieldsTarget1.StartField("E")
	if err != vdl.ErrFieldNoExist && err != nil {
		return err
	}
	if err != vdl.ErrFieldNoExist {

		if err := wireValue14.FillVDLTarget(fieldTarget16, __VDLType_v_io_x_ref_lib_vdl_testdata_nativetest_WireMultiImport); err != nil {
			return err
		}
		if err := fieldsTarget1.FinishField(keyTarget15, fieldTarget16); err != nil {
			return err
		}
	}
	if err := t.FinishFields(fieldsTarget1); err != nil {
		return err
	}
	return nil
}

func (m *All) MakeVDLTarget() vdl.Target {
	return &AllTarget{Value: m}
}

type AllTarget struct {
	Value   *All
	aTarget nativetest_2.WireStringTarget
	bTarget nativetest_2.WireMapStringIntTarget
	cTarget nativetest_2.WireTimeTarget
	dTarget nativetest_2.WireSamePkgTarget
	eTarget nativetest_2.WireMultiImportTarget
	vdl.TargetBase
	vdl.FieldsTargetBase
}

func (t *AllTarget) StartFields(tt *vdl.Type) (vdl.FieldsTarget, error) {
	if !vdl.Compatible(tt, __VDLType_v_io_x_ref_lib_vdl_testdata_nativedep_All) {
		return nil, fmt.Errorf("type %v incompatible with %v", tt, __VDLType_v_io_x_ref_lib_vdl_testdata_nativedep_All)
	}
	return t, nil
}
func (t *AllTarget) StartField(name string) (key, field vdl.Target, _ error) {
	switch name {
	case "A":
		t.aTarget.Value = &t.Value.A
		target, err := &t.aTarget, error(nil)
		return nil, target, err
	case "B":
		t.bTarget.Value = &t.Value.B
		target, err := &t.bTarget, error(nil)
		return nil, target, err
	case "C":
		t.cTarget.Value = &t.Value.C
		target, err := &t.cTarget, error(nil)
		return nil, target, err
	case "D":
		t.dTarget.Value = &t.Value.D
		target, err := &t.dTarget, error(nil)
		return nil, target, err
	case "E":
		t.eTarget.Value = &t.Value.E
		target, err := &t.eTarget, error(nil)
		return nil, target, err
	default:
		return nil, nil, fmt.Errorf("field %s not in struct %v", name, __VDLType_v_io_x_ref_lib_vdl_testdata_nativedep_All)
	}
}
func (t *AllTarget) FinishField(_, _ vdl.Target) error {
	return nil
}
func (t *AllTarget) FinishFields(_ vdl.FieldsTarget) error {

	return nil
}

func init() {
	vdl.Register((*All)(nil))
}

var __VDLType0 *vdl.Type

func __VDLType0_gen() *vdl.Type {
	__VDLType0Builder := vdl.TypeBuilder{}

	__VDLType01 := __VDLType0Builder.Optional()
	__VDLType02 := __VDLType0Builder.Struct()
	__VDLType03 := __VDLType0Builder.Named("v.io/x/ref/lib/vdl/testdata/nativedep.All").AssignBase(__VDLType02)
	__VDLType04 := vdl.Int32Type
	__VDLType05 := __VDLType0Builder.Named("v.io/x/ref/lib/vdl/testdata/nativetest.WireString").AssignBase(__VDLType04)
	__VDLType02.AppendField("A", __VDLType05)
	__VDLType06 := vdl.Int32Type
	__VDLType07 := __VDLType0Builder.Named("v.io/x/ref/lib/vdl/testdata/nativetest.WireMapStringInt").AssignBase(__VDLType06)
	__VDLType02.AppendField("B", __VDLType07)
	__VDLType08 := vdl.Int32Type
	__VDLType09 := __VDLType0Builder.Named("v.io/x/ref/lib/vdl/testdata/nativetest.WireTime").AssignBase(__VDLType08)
	__VDLType02.AppendField("C", __VDLType09)
	__VDLType010 := vdl.Int32Type
	__VDLType011 := __VDLType0Builder.Named("v.io/x/ref/lib/vdl/testdata/nativetest.WireSamePkg").AssignBase(__VDLType010)
	__VDLType02.AppendField("D", __VDLType011)
	__VDLType012 := vdl.Int32Type
	__VDLType013 := __VDLType0Builder.Named("v.io/x/ref/lib/vdl/testdata/nativetest.WireMultiImport").AssignBase(__VDLType012)
	__VDLType02.AppendField("E", __VDLType013)
	__VDLType01.AssignElem(__VDLType03)
	__VDLType0Builder.Build()
	__VDLType0v, err := __VDLType01.Built()
	if err != nil {
		panic(err)
	}
	return __VDLType0v
}
func init() {
	__VDLType0 = __VDLType0_gen()
}

var __VDLType_v_io_x_ref_lib_vdl_testdata_nativedep_All *vdl.Type

func __VDLType_v_io_x_ref_lib_vdl_testdata_nativedep_All_gen() *vdl.Type {
	__VDLType_v_io_x_ref_lib_vdl_testdata_nativedep_AllBuilder := vdl.TypeBuilder{}

	__VDLType_v_io_x_ref_lib_vdl_testdata_nativedep_All1 := __VDLType_v_io_x_ref_lib_vdl_testdata_nativedep_AllBuilder.Struct()
	__VDLType_v_io_x_ref_lib_vdl_testdata_nativedep_All2 := __VDLType_v_io_x_ref_lib_vdl_testdata_nativedep_AllBuilder.Named("v.io/x/ref/lib/vdl/testdata/nativedep.All").AssignBase(__VDLType_v_io_x_ref_lib_vdl_testdata_nativedep_All1)
	__VDLType_v_io_x_ref_lib_vdl_testdata_nativedep_All3 := vdl.Int32Type
	__VDLType_v_io_x_ref_lib_vdl_testdata_nativedep_All4 := __VDLType_v_io_x_ref_lib_vdl_testdata_nativedep_AllBuilder.Named("v.io/x/ref/lib/vdl/testdata/nativetest.WireString").AssignBase(__VDLType_v_io_x_ref_lib_vdl_testdata_nativedep_All3)
	__VDLType_v_io_x_ref_lib_vdl_testdata_nativedep_All1.AppendField("A", __VDLType_v_io_x_ref_lib_vdl_testdata_nativedep_All4)
	__VDLType_v_io_x_ref_lib_vdl_testdata_nativedep_All5 := vdl.Int32Type
	__VDLType_v_io_x_ref_lib_vdl_testdata_nativedep_All6 := __VDLType_v_io_x_ref_lib_vdl_testdata_nativedep_AllBuilder.Named("v.io/x/ref/lib/vdl/testdata/nativetest.WireMapStringInt").AssignBase(__VDLType_v_io_x_ref_lib_vdl_testdata_nativedep_All5)
	__VDLType_v_io_x_ref_lib_vdl_testdata_nativedep_All1.AppendField("B", __VDLType_v_io_x_ref_lib_vdl_testdata_nativedep_All6)
	__VDLType_v_io_x_ref_lib_vdl_testdata_nativedep_All7 := vdl.Int32Type
	__VDLType_v_io_x_ref_lib_vdl_testdata_nativedep_All8 := __VDLType_v_io_x_ref_lib_vdl_testdata_nativedep_AllBuilder.Named("v.io/x/ref/lib/vdl/testdata/nativetest.WireTime").AssignBase(__VDLType_v_io_x_ref_lib_vdl_testdata_nativedep_All7)
	__VDLType_v_io_x_ref_lib_vdl_testdata_nativedep_All1.AppendField("C", __VDLType_v_io_x_ref_lib_vdl_testdata_nativedep_All8)
	__VDLType_v_io_x_ref_lib_vdl_testdata_nativedep_All9 := vdl.Int32Type
	__VDLType_v_io_x_ref_lib_vdl_testdata_nativedep_All10 := __VDLType_v_io_x_ref_lib_vdl_testdata_nativedep_AllBuilder.Named("v.io/x/ref/lib/vdl/testdata/nativetest.WireSamePkg").AssignBase(__VDLType_v_io_x_ref_lib_vdl_testdata_nativedep_All9)
	__VDLType_v_io_x_ref_lib_vdl_testdata_nativedep_All1.AppendField("D", __VDLType_v_io_x_ref_lib_vdl_testdata_nativedep_All10)
	__VDLType_v_io_x_ref_lib_vdl_testdata_nativedep_All11 := vdl.Int32Type
	__VDLType_v_io_x_ref_lib_vdl_testdata_nativedep_All12 := __VDLType_v_io_x_ref_lib_vdl_testdata_nativedep_AllBuilder.Named("v.io/x/ref/lib/vdl/testdata/nativetest.WireMultiImport").AssignBase(__VDLType_v_io_x_ref_lib_vdl_testdata_nativedep_All11)
	__VDLType_v_io_x_ref_lib_vdl_testdata_nativedep_All1.AppendField("E", __VDLType_v_io_x_ref_lib_vdl_testdata_nativedep_All12)
	__VDLType_v_io_x_ref_lib_vdl_testdata_nativedep_AllBuilder.Build()
	__VDLType_v_io_x_ref_lib_vdl_testdata_nativedep_Allv, err := __VDLType_v_io_x_ref_lib_vdl_testdata_nativedep_All2.Built()
	if err != nil {
		panic(err)
	}
	return __VDLType_v_io_x_ref_lib_vdl_testdata_nativedep_Allv
}
func init() {
	__VDLType_v_io_x_ref_lib_vdl_testdata_nativedep_All = __VDLType_v_io_x_ref_lib_vdl_testdata_nativedep_All_gen()
}

var __VDLType_v_io_x_ref_lib_vdl_testdata_nativetest_WireMapStringInt *vdl.Type

func __VDLType_v_io_x_ref_lib_vdl_testdata_nativetest_WireMapStringInt_gen() *vdl.Type {
	__VDLType_v_io_x_ref_lib_vdl_testdata_nativetest_WireMapStringIntBuilder := vdl.TypeBuilder{}

	__VDLType_v_io_x_ref_lib_vdl_testdata_nativetest_WireMapStringInt1 := vdl.Int32Type
	__VDLType_v_io_x_ref_lib_vdl_testdata_nativetest_WireMapStringInt2 := __VDLType_v_io_x_ref_lib_vdl_testdata_nativetest_WireMapStringIntBuilder.Named("v.io/x/ref/lib/vdl/testdata/nativetest.WireMapStringInt").AssignBase(__VDLType_v_io_x_ref_lib_vdl_testdata_nativetest_WireMapStringInt1)
	__VDLType_v_io_x_ref_lib_vdl_testdata_nativetest_WireMapStringIntBuilder.Build()
	__VDLType_v_io_x_ref_lib_vdl_testdata_nativetest_WireMapStringIntv, err := __VDLType_v_io_x_ref_lib_vdl_testdata_nativetest_WireMapStringInt2.Built()
	if err != nil {
		panic(err)
	}
	return __VDLType_v_io_x_ref_lib_vdl_testdata_nativetest_WireMapStringIntv
}
func init() {
	__VDLType_v_io_x_ref_lib_vdl_testdata_nativetest_WireMapStringInt = __VDLType_v_io_x_ref_lib_vdl_testdata_nativetest_WireMapStringInt_gen()
}

var __VDLType_v_io_x_ref_lib_vdl_testdata_nativetest_WireMultiImport *vdl.Type

func __VDLType_v_io_x_ref_lib_vdl_testdata_nativetest_WireMultiImport_gen() *vdl.Type {
	__VDLType_v_io_x_ref_lib_vdl_testdata_nativetest_WireMultiImportBuilder := vdl.TypeBuilder{}

	__VDLType_v_io_x_ref_lib_vdl_testdata_nativetest_WireMultiImport1 := vdl.Int32Type
	__VDLType_v_io_x_ref_lib_vdl_testdata_nativetest_WireMultiImport2 := __VDLType_v_io_x_ref_lib_vdl_testdata_nativetest_WireMultiImportBuilder.Named("v.io/x/ref/lib/vdl/testdata/nativetest.WireMultiImport").AssignBase(__VDLType_v_io_x_ref_lib_vdl_testdata_nativetest_WireMultiImport1)
	__VDLType_v_io_x_ref_lib_vdl_testdata_nativetest_WireMultiImportBuilder.Build()
	__VDLType_v_io_x_ref_lib_vdl_testdata_nativetest_WireMultiImportv, err := __VDLType_v_io_x_ref_lib_vdl_testdata_nativetest_WireMultiImport2.Built()
	if err != nil {
		panic(err)
	}
	return __VDLType_v_io_x_ref_lib_vdl_testdata_nativetest_WireMultiImportv
}
func init() {
	__VDLType_v_io_x_ref_lib_vdl_testdata_nativetest_WireMultiImport = __VDLType_v_io_x_ref_lib_vdl_testdata_nativetest_WireMultiImport_gen()
}

var __VDLType_v_io_x_ref_lib_vdl_testdata_nativetest_WireSamePkg *vdl.Type

func __VDLType_v_io_x_ref_lib_vdl_testdata_nativetest_WireSamePkg_gen() *vdl.Type {
	__VDLType_v_io_x_ref_lib_vdl_testdata_nativetest_WireSamePkgBuilder := vdl.TypeBuilder{}

	__VDLType_v_io_x_ref_lib_vdl_testdata_nativetest_WireSamePkg1 := vdl.Int32Type
	__VDLType_v_io_x_ref_lib_vdl_testdata_nativetest_WireSamePkg2 := __VDLType_v_io_x_ref_lib_vdl_testdata_nativetest_WireSamePkgBuilder.Named("v.io/x/ref/lib/vdl/testdata/nativetest.WireSamePkg").AssignBase(__VDLType_v_io_x_ref_lib_vdl_testdata_nativetest_WireSamePkg1)
	__VDLType_v_io_x_ref_lib_vdl_testdata_nativetest_WireSamePkgBuilder.Build()
	__VDLType_v_io_x_ref_lib_vdl_testdata_nativetest_WireSamePkgv, err := __VDLType_v_io_x_ref_lib_vdl_testdata_nativetest_WireSamePkg2.Built()
	if err != nil {
		panic(err)
	}
	return __VDLType_v_io_x_ref_lib_vdl_testdata_nativetest_WireSamePkgv
}
func init() {
	__VDLType_v_io_x_ref_lib_vdl_testdata_nativetest_WireSamePkg = __VDLType_v_io_x_ref_lib_vdl_testdata_nativetest_WireSamePkg_gen()
}

var __VDLType_v_io_x_ref_lib_vdl_testdata_nativetest_WireString *vdl.Type

func __VDLType_v_io_x_ref_lib_vdl_testdata_nativetest_WireString_gen() *vdl.Type {
	__VDLType_v_io_x_ref_lib_vdl_testdata_nativetest_WireStringBuilder := vdl.TypeBuilder{}

	__VDLType_v_io_x_ref_lib_vdl_testdata_nativetest_WireString1 := vdl.Int32Type
	__VDLType_v_io_x_ref_lib_vdl_testdata_nativetest_WireString2 := __VDLType_v_io_x_ref_lib_vdl_testdata_nativetest_WireStringBuilder.Named("v.io/x/ref/lib/vdl/testdata/nativetest.WireString").AssignBase(__VDLType_v_io_x_ref_lib_vdl_testdata_nativetest_WireString1)
	__VDLType_v_io_x_ref_lib_vdl_testdata_nativetest_WireStringBuilder.Build()
	__VDLType_v_io_x_ref_lib_vdl_testdata_nativetest_WireStringv, err := __VDLType_v_io_x_ref_lib_vdl_testdata_nativetest_WireString2.Built()
	if err != nil {
		panic(err)
	}
	return __VDLType_v_io_x_ref_lib_vdl_testdata_nativetest_WireStringv
}
func init() {
	__VDLType_v_io_x_ref_lib_vdl_testdata_nativetest_WireString = __VDLType_v_io_x_ref_lib_vdl_testdata_nativetest_WireString_gen()
}

var __VDLType_v_io_x_ref_lib_vdl_testdata_nativetest_WireTime *vdl.Type

func __VDLType_v_io_x_ref_lib_vdl_testdata_nativetest_WireTime_gen() *vdl.Type {
	__VDLType_v_io_x_ref_lib_vdl_testdata_nativetest_WireTimeBuilder := vdl.TypeBuilder{}

	__VDLType_v_io_x_ref_lib_vdl_testdata_nativetest_WireTime1 := vdl.Int32Type
	__VDLType_v_io_x_ref_lib_vdl_testdata_nativetest_WireTime2 := __VDLType_v_io_x_ref_lib_vdl_testdata_nativetest_WireTimeBuilder.Named("v.io/x/ref/lib/vdl/testdata/nativetest.WireTime").AssignBase(__VDLType_v_io_x_ref_lib_vdl_testdata_nativetest_WireTime1)
	__VDLType_v_io_x_ref_lib_vdl_testdata_nativetest_WireTimeBuilder.Build()
	__VDLType_v_io_x_ref_lib_vdl_testdata_nativetest_WireTimev, err := __VDLType_v_io_x_ref_lib_vdl_testdata_nativetest_WireTime2.Built()
	if err != nil {
		panic(err)
	}
	return __VDLType_v_io_x_ref_lib_vdl_testdata_nativetest_WireTimev
}
func init() {
	__VDLType_v_io_x_ref_lib_vdl_testdata_nativetest_WireTime = __VDLType_v_io_x_ref_lib_vdl_testdata_nativetest_WireTime_gen()
}
func __VDLEnsureNativeBuilt() {
	if __VDLType0 == nil {
		__VDLType0 = __VDLType0_gen()
	}
	if __VDLType_v_io_x_ref_lib_vdl_testdata_nativedep_All == nil {
		__VDLType_v_io_x_ref_lib_vdl_testdata_nativedep_All = __VDLType_v_io_x_ref_lib_vdl_testdata_nativedep_All_gen()
	}
	if __VDLType_v_io_x_ref_lib_vdl_testdata_nativetest_WireMapStringInt == nil {
		__VDLType_v_io_x_ref_lib_vdl_testdata_nativetest_WireMapStringInt = __VDLType_v_io_x_ref_lib_vdl_testdata_nativetest_WireMapStringInt_gen()
	}
	if __VDLType_v_io_x_ref_lib_vdl_testdata_nativetest_WireMultiImport == nil {
		__VDLType_v_io_x_ref_lib_vdl_testdata_nativetest_WireMultiImport = __VDLType_v_io_x_ref_lib_vdl_testdata_nativetest_WireMultiImport_gen()
	}
	if __VDLType_v_io_x_ref_lib_vdl_testdata_nativetest_WireSamePkg == nil {
		__VDLType_v_io_x_ref_lib_vdl_testdata_nativetest_WireSamePkg = __VDLType_v_io_x_ref_lib_vdl_testdata_nativetest_WireSamePkg_gen()
	}
	if __VDLType_v_io_x_ref_lib_vdl_testdata_nativetest_WireString == nil {
		__VDLType_v_io_x_ref_lib_vdl_testdata_nativetest_WireString = __VDLType_v_io_x_ref_lib_vdl_testdata_nativetest_WireString_gen()
	}
	if __VDLType_v_io_x_ref_lib_vdl_testdata_nativetest_WireTime == nil {
		__VDLType_v_io_x_ref_lib_vdl_testdata_nativetest_WireTime = __VDLType_v_io_x_ref_lib_vdl_testdata_nativetest_WireTime_gen()
	}
}
