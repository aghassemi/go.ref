// Copyright 2016 The Vanadium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// Code generated by go-bindata.
// sources:
// v.io/v23/vdlroot/math/math.vdl
// v.io/v23/vdlroot/math/vdl.config
// v.io/v23/vdlroot/signature/signature.vdl
// v.io/v23/vdlroot/time/time.vdl
// v.io/v23/vdlroot/time/vdl.config
// v.io/v23/vdlroot/vdltool/config.vdl
// DO NOT EDIT!

package builtin_vdlroot

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _mathMathVdl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x74\xce\xc1\x4a\x03\x31\x10\xc6\xf1\x7b\x9e\xe2\x7b\x01\xb7\x76\x2d\x8b\xd7\x5a\x7b\x28\x88\x07\xab\xde\xa7\xc9\xec\x26\x98\x4d\x96\x64\x52\x5c\xa4\xef\x6e\xdc\x83\xa0\xd0\xb9\xcd\x9f\xf9\xc1\xac\x56\xd8\xc5\x69\x4e\x6e\xb0\x82\xf6\x76\xdd\xe1\xd5\x32\xde\x29\x90\x71\x65\xc4\xb6\x88\x8d\x29\x37\xd8\x7a\x8f\xe5\x28\x23\x71\xe6\x74\x66\xd3\xa8\x8a\xdf\x32\x23\xf6\x10\xeb\x32\x72\x2c\x49\x33\x74\x34\x8c\xba\x0e\xf1\xcc\x29\xb0\xc1\x69\x06\xe1\xe1\xf8\x78\x93\x65\xf6\xfc\xa3\xbc\xd3\x1c\xaa\x14\x4b\x02\x4d\x01\x27\x46\x1f\x4b\x30\x70\xa1\x46\xc6\xd3\x61\xb7\x7f\x3e\xee\xd1\x3b\xcf\x8d\x52\x13\xe9\x0f\x1a\x18\x23\x89\x55\x4a\xe6\x89\xeb\xd7\xe3\xe4\xf9\xb3\xdb\x20\x4b\x2a\x5a\xf0\xa5\x50\xe7\x85\xc9\xa3\xf7\x91\xe4\xae\x5d\xc2\x61\xa4\xe1\x37\x5c\xfe\xe2\x75\x7b\x7f\x4d\x77\x9b\x7f\xba\x86\xcb\x77\x00\x00\x00\xff\xff\x17\xc2\xba\xec\x2d\x01\x00\x00")

func mathMathVdlBytes() ([]byte, error) {
	return bindataRead(
		_mathMathVdl,
		"math/math.vdl",
	)
}

func mathMathVdl() (*asset, error) {
	bytes, err := mathMathVdlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "math/math.vdl", size: 0, mode: os.FileMode(420), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mathVdlConfig = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\x8d\xcd\x6a\xc3\x30\x10\x84\xcf\xf6\x53\x0c\x3e\x07\x87\x96\x52\x4a\xa0\xa7\x1c\x4a\x2f\x3d\x19\x7a\x16\xd2\xda\x11\x95\xb5\x42\xd9\x84\x96\x92\x77\xef\x4a\x4e\xe9\x8f\x17\xb4\x82\x99\xd9\x6f\xb6\x5b\x0c\x07\xc2\xd9\x85\xde\x72\x1c\xfd\x84\xd1\x07\xc2\xc8\x19\xa2\xfa\x51\x4c\x74\x26\x3b\x88\x9f\x09\xc9\xd8\x37\x33\x11\x96\xe4\x29\xd3\x11\xde\x79\x9e\x8d\x78\x8b\xa8\xfb\x4c\xad\x02\xe5\x23\x15\x27\x82\x8c\x3d\x60\xa2\x48\xd9\x08\x39\x04\x13\xa7\x93\xde\xf7\xed\xb5\xea\xb1\xf4\x0a\x73\xe8\xf7\x55\xf8\x6c\x9b\x27\xde\x41\xbf\xe6\xd5\x67\x1a\xf8\xa5\x32\x87\xc2\x5b\xe4\xa6\xdb\xf3\x9c\x02\xbd\xdf\xdc\x3e\x74\x57\xa9\x29\xfe\x0e\x3a\x9d\xfd\x31\x37\xd5\x7a\x9e\x13\x67\x29\xc7\x97\x2a\x2c\xfb\x1b\x72\x7f\x57\x19\xf8\x37\x2b\x9e\xe6\x36\xab\xd4\x1f\xf4\x6f\xa3\x76\x94\xa5\xef\xd2\x7e\x05\x00\x00\xff\xff\x3b\xea\x99\x41\x61\x01\x00\x00")

func mathVdlConfigBytes() ([]byte, error) {
	return bindataRead(
		_mathVdlConfig,
		"math/vdl.config",
	)
}

func mathVdlConfig() (*asset, error) {
	bytes, err := mathVdlConfigBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "math/vdl.config", size: 0, mode: os.FileMode(420), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _signatureSignatureVdl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x53\x41\x8f\xd3\x3c\x14\x3c\xd7\xbf\x62\x8e\xdf\x77\x20\x0b\x48\x9c\x51\xd9\xed\xa1\x12\x74\x2b\xb5\x70\x59\xed\xc1\x89\x5f\x12\xb3\x89\x1d\xd9\xce\x4a\x11\xda\xff\xce\xb3\x63\xd2\xd2\xa2\x15\xa2\x27\xfb\x79\x66\xde\xcc\xb4\xbd\xb9\xc1\xad\x1d\x26\xa7\x9b\x36\xe0\xfd\xdb\x77\x1f\x70\x6c\x09\xdf\xa4\x91\x4a\x8f\x3d\xd6\x63\x68\xad\xf3\x05\xd6\x5d\x87\x04\xf2\x70\xe4\xc9\x3d\x93\x2a\x04\x93\xbf\x7a\x82\xad\x11\x5a\xed\xe1\xed\xe8\x2a\x42\x65\x15\x81\xaf\x8d\x7d\x26\x67\x48\xa1\x9c\x20\xf1\xe9\x70\xf7\xc6\x87\xa9\xa3\xc8\xea\x74\x45\x86\x99\xa1\x95\x01\x95\x34\x28\x09\xb5\x1d\x8d\x82\x36\x3c\x24\x7c\xde\xde\x6e\x76\x87\x0d\x6a\xdd\x51\x21\x22\x65\x2f\xab\x27\xd9\x10\xbc\x6e\x8c\x0c\xa3\x23\x28\xaa\xb5\x21\x8f\x30\x0d\x14\x5d\x0d\xd1\x98\x09\xda\x34\xac\x12\xc8\xd5\x92\xcd\x48\xd6\xec\x89\x43\xa8\x13\xd3\x17\x62\xb8\x54\x4b\x3b\xb6\x0b\x4d\x91\xaf\x9c\x2e\xa3\x7a\x7b\xbe\x93\xa3\xb2\xdb\x45\xbe\x10\x71\xf9\x19\xcf\x07\x37\x56\x01\x3f\xc4\x6a\x27\x7b\x02\x7f\x78\xc2\x8e\xc4\x6a\xff\xd4\xec\x65\x68\x97\xfb\x9d\xad\x70\xfe\xbe\xe9\x4b\x52\x1e\x78\x78\x4c\x27\x80\xfd\xec\x2c\xfc\x40\x95\x96\x1d\xac\x53\x14\x81\x85\x58\x7d\x49\x71\x3c\x23\xe7\x53\x44\xde\xc7\xe7\xb9\xea\x9c\xd6\xf0\xfe\x42\xbc\xa4\x5c\xb3\xe2\xeb\x99\x28\x62\x14\xa9\xab\x70\x33\xf9\x9f\x83\xcd\x0e\xb2\xd3\xbf\xac\x35\x67\xc8\x06\x32\xf7\xda\x01\xae\x76\x9e\x26\x5b\xb3\x76\x8d\x8f\x93\x87\x47\x3e\x21\x7d\xbb\xc3\x18\x20\x5d\x33\xf6\xfc\x33\xf1\x62\x75\x3f\x86\x0c\x5a\x30\x3c\xba\x00\x6d\xcd\x21\x38\x92\x3d\xf0\x31\x62\x4e\x42\x7e\x1e\xff\x67\x87\xa0\xad\x91\xdd\xff\x49\x30\x83\x17\x6c\x16\xfc\x03\xf8\x28\x67\x7f\x71\xbb\x34\x13\x4e\x2d\x05\x7e\xc9\xbd\x45\x99\xd7\x4a\xe3\xab\x69\x3a\x5a\x0c\xe7\xca\x22\xed\xa2\xaf\xdf\xaa\xfa\x75\x39\x46\x70\x64\xd8\xf2\x3b\x31\x98\x37\xa6\x51\xfa\x47\x9f\xab\xbe\x88\x9f\x01\x00\x00\xff\xff\x7a\xf5\x7c\x0e\x29\x04\x00\x00")

func signatureSignatureVdlBytes() ([]byte, error) {
	return bindataRead(
		_signatureSignatureVdl,
		"signature/signature.vdl",
	)
}

func signatureSignatureVdl() (*asset, error) {
	bytes, err := signatureSignatureVdlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "signature/signature.vdl", size: 0, mode: os.FileMode(420), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _timeTimeVdl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x58\x4d\x73\x1b\xb9\x11\x3d\x4b\xbf\x02\xa5\x1c\xd6\xae\xd0\x24\xa5\x6c\x36\x91\xf7\xe4\xc8\x1f\x71\xca\xb1\x5d\x91\x9c\x54\xe5\xc2\x02\x67\x40\x0e\x4a\x18\x60\x02\x60\x48\xd1\xa9\xfc\xf7\xbc\x6e\x00\x33\x43\x5a\x76\x14\x97\xf6\x40\x12\xdd\xe8\x8f\xf7\x5e\x37\x76\xb1\x10\x37\xae\x3b\x78\xbd\x6d\xa2\xb8\x5a\x5e\xfe\x5e\xdc\x35\x4a\xfc\x5d\x5a\x59\xeb\xbe\x15\xaf\xfa\xd8\x38\x1f\xe6\xe2\x95\x31\x82\x0f\x05\xe1\x55\x50\x7e\xa7\xea\xf9\x39\x8c\xbf\x04\x25\xdc\x46\xc4\x46\x07\x11\x5c\xef\x2b\x25\x2a\x57\x2b\x81\x8f\x5b\xb7\x53\xde\xaa\x5a\xac\x0f\x42\x8a\x3f\xdd\xbe\x7e\x11\xe2\xc1\x28\xb2\x32\xba\x52\x16\x96\xb1\x91\x51\x54\xd2\x8a\xb5\x12\x1b\xd7\xdb\x5a\x68\x8b\x2f\x95\xf8\xf0\xfe\xe6\xcd\xc7\xdb\x37\x62\xa3\x8d\x9a\x9f\x93\xc9\x67\x59\xdd\xcb\x2d\x4c\x74\xab\x44\xad\x36\xda\x2a\xdc\x18\xa5\xad\xa5\xaf\x11\x53\x47\x61\xd9\x28\xa3\x76\x36\x50\x48\x72\x1d\x9c\xe9\xa3\x12\x38\x82\xdf\x0d\x7e\xd9\x25\xf3\x40\x91\x93\x4f\x4a\xf5\xd4\xb2\x56\xa1\xf2\x7a\x4d\x61\x2b\xe3\xf6\x42\x7a\x3a\xf3\xaf\x5e\x7b\x7c\x15\x9d\xe8\xbc\xdb\x69\x24\xb8\xc7\x17\xe4\xa3\x72\x6d\x07\xd3\xb5\x36\x3a\x1e\x60\x13\xf7\x4a\x59\x51\xeb\xcd\x46\x79\x78\xa5\xf3\x5b\x2f\xdb\x56\xdb\xad\x50\x76\xa7\xbd\xb3\x2d\xbe\x47\x49\xc5\x3b\x65\x95\x97\x11\x7e\xb9\x64\x1b\xe7\xc9\xe1\x68\x3a\x3d\x2e\xe2\xa1\xd3\x95\x34\xe6\x30\x44\x20\xfb\xe8\x5a\x5c\x5d\xc1\xdc\xa2\xd4\x81\xe3\xd7\x16\x41\x5a\x4e\x96\xbc\x9d\xa4\x37\xa3\x5b\x44\xd0\x6d\x67\x94\x17\xba\xd6\xd9\x43\x1f\x50\xdb\xf9\x79\x37\x29\x32\x57\xfd\x6f\xc5\x9c\xc2\xaf\x11\x6b\xe0\x72\x72\x15\xa9\xc7\x92\xf3\x47\x3b\x39\x8d\xe8\x10\x23\x12\xbb\x75\x6d\x46\x05\x01\x21\xf4\x2a\xbc\x24\x67\x97\xcf\xb9\xe2\x4a\xfa\xd8\xfc\x04\x1c\xc1\x86\x4e\x79\x97\x82\x23\x7f\xd6\x45\x84\xbc\xed\x8d\xf4\x0c\x2f\xfc\x6b\x62\xec\x5e\x2e\x16\xca\xce\xf7\xfa\x5e\x77\xaa\xd6\x72\xee\xfc\x76\x41\x9f\x16\x1f\x94\xec\x56\x41\xa1\x00\xf5\x53\x8e\xdf\x38\xe7\x6b\x6d\x29\xd8\xd5\x17\xab\xa9\x68\xd2\xac\xee\x28\xdb\x27\x58\xbf\xb7\x11\x80\xe6\x58\x61\xf5\x0a\xd5\xd7\xd5\x60\x7c\xc5\xc9\x01\x2c\x04\x98\xb1\x87\x05\xa1\x81\x0b\xcf\xb8\xa5\x52\xa2\x93\x8a\xbe\x0f\x4f\xca\x72\xb9\x7a\x76\x40\xd5\x9e\x3f\xe5\xec\x5f\x7a\xa3\xa5\x5d\x95\x0b\x9e\x62\xf2\x0e\x15\x77\xfe\xff\xb5\xfa\xec\x9d\x51\x1d\xc0\xb3\x7a\xd4\xbe\xf0\xab\x75\x21\x0a\xe0\xcd\x79\x54\x02\x64\x6f\x1c\xb8\x4f\xad\xde\x37\x0a\xf8\xf0\xc4\xa9\x01\xa4\x89\xdd\x32\xe1\xaa\xc7\x67\x02\x91\xae\xee\x03\x79\x0b\xda\x56\xc4\x66\xa1\x3a\x57\x35\xe2\x19\xfd\xc0\x06\xcf\x67\x02\xb5\x65\x2b\x82\xe8\x82\x9d\x50\xb9\xa5\xe8\x80\x35\x5d\x11\x9c\xc4\x34\xb7\x67\xe5\x43\xb2\x07\x64\xef\x8a\x33\xd1\xca\x2e\x10\x81\x7a\xcf\x6c\x43\x78\x0d\xfa\xb7\xa7\xb6\x56\xc6\x21\x96\x19\x45\x5f\x35\x40\x1e\x7e\x3c\xe2\xd8\x8c\xc9\x01\x33\xb7\x0f\xa0\x14\x35\x3a\x51\x4d\x84\x7e\x1d\xbd\xac\x18\xe6\x14\x19\xb1\xa6\x4f\xa4\xc2\x3d\x4c\x4d\x46\xc2\xcd\x34\x2e\xba\x67\xa4\x7d\xeb\x10\x41\x50\x2d\xaa\x58\xbe\x51\x92\xc0\xb4\xe9\x0d\x12\xb8\x99\x68\x40\x56\x21\x72\x38\x14\x89\x43\x3b\x4a\x9b\x91\x3a\xa5\x2f\x74\x9a\x18\x2b\xd7\x10\xee\xcc\xdb\xa2\x94\x3f\xe6\xc5\xed\xa7\xd5\x1f\x7f\x59\x5e\xfe\xcf\x83\xb7\x87\x10\x55\xbb\x1a\xd4\x85\xb8\x33\x56\x8f\xa4\x65\x54\xed\xce\x41\xc9\x78\x1c\xd0\xa1\xbd\x8e\x8d\xe8\xa9\xe0\x68\x8d\x75\x89\xf1\x50\x42\x55\x69\x4a\x79\x10\xf4\x5c\xb5\xc1\x27\xb2\x02\x2e\x28\xab\x52\x67\x14\x67\x43\x95\x24\x78\x6c\xc0\x67\x80\x64\xa3\x1f\x70\x8e\x51\x45\x48\xc0\xe1\xaf\xca\xbb\xc7\x02\x24\x47\x09\x7d\xcb\xe5\xf2\xf2\x05\xff\xdd\x2d\x97\x2f\xf9\x6f\xbe\x2c\xff\xfe\xc9\x6e\x34\x61\x40\xb1\x11\xf9\xea\x0a\x5f\xc4\xc0\x97\xa1\x1f\xbf\xb2\xe7\xa1\x3b\xbe\xa7\x11\x66\x19\xeb\x0f\x40\x8d\xf8\x79\xb9\x14\xa4\x00\xa2\x3a\x54\x34\x10\xe1\x8e\x94\x4f\xa4\x3a\x04\xee\xe4\x45\x00\x1e\x30\xa4\x2e\x66\x18\x1c\xa1\xf7\x04\x2e\x9e\xaf\xd6\x09\x33\x1e\x16\x51\xae\x0d\x17\xc9\xaa\x4a\x85\x20\xfd\x81\xdc\x11\x28\x35\xe9\x1b\x72\x4d\x72\x3c\x0e\x49\xcd\x52\x0f\x24\x6b\xe2\x11\x5a\xf0\xce\x71\x57\xe6\x54\x9e\x99\x58\xf7\x11\x98\xdf\xcb\x43\x28\xd3\xfb\xcb\xdd\x8d\x00\x55\x06\x37\x05\x15\x5b\x67\xa4\xdd\x32\x1e\xba\xfb\x2d\xf3\x74\xf1\x9b\x2c\xa0\xdf\xb9\x8a\x47\x9b\x4d\x92\x2b\x2e\x7a\xab\x1f\xf8\xea\x8b\x74\x2d\xc3\x62\x6c\x4a\x5a\x0b\xd0\xf2\x48\xde\xb8\x60\x97\x34\x66\x58\x66\x1a\x54\x33\x7d\x75\xfd\x87\x65\x69\x50\xe6\x6a\xcc\x3d\x4f\x0d\xc7\xb5\xd8\x47\xd0\x3b\x06\x8f\x24\x5f\x59\x0f\x04\xc1\xc0\x1f\x66\x59\x8b\x34\x00\x1a\xec\x4f\x48\x5f\xec\xa4\xd1\x69\x2e\x72\x29\xc1\x52\x1a\xd4\xc4\x78\x74\x55\xc8\x2e\x91\x6c\xe0\xf9\x0f\x69\x82\xc9\xf4\x90\x48\x02\xf6\xab\x14\xd3\xeb\x0c\x5f\xe6\x4d\xf9\xf0\x0d\x34\x0d\xb4\x0b\x51\x4f\xb0\x9e\xd6\x91\xb8\x77\x89\x50\xa1\x30\x6a\xc6\xb5\x23\x67\x3f\x62\x15\xdf\x3f\xdc\x16\xa2\xef\x01\xc6\x7f\x9f\x9f\xc1\xec\x36\x43\xef\x24\x84\x82\xc8\x8c\x84\x12\x49\xe6\x95\x47\xfb\x13\x41\x5d\xbf\x6d\xcc\x81\x3d\xfd\x76\xf1\xe2\xea\x7a\x29\xb0\x41\x19\xba\x85\x7a\x04\x8d\x45\xff\xb7\xa5\x6d\x9c\x5b\x40\xd8\x2c\x53\xb4\xa0\xe4\xe5\xa2\x4f\x33\x1c\x8c\x38\xbb\x1d\x2e\x8e\xbf\xfc\xcc\x7e\x3f\x52\x4a\xa7\xf1\x6d\xb2\x0a\xa7\x15\xb1\x70\x82\x58\x32\x16\x00\xe7\x49\x83\x52\xd8\x7f\xed\x43\x64\x77\x80\x44\x4e\x0a\xbd\x37\x50\xf7\x5d\xc9\xa7\x54\x19\x89\x5c\x5f\x5f\xcf\xf2\x7f\x73\xb2\x62\xcb\xf7\x16\x1c\xf4\x2d\x10\xf2\x15\xe1\x03\x1e\xed\x6c\x94\x7d\x70\x33\x84\x94\xa6\xb3\x6a\x08\xc8\xab\x23\x11\x63\xa0\x2f\x8f\x0a\x4f\x7a\x8e\x1b\x39\x4b\xc4\xf9\x96\xd6\x8b\xc1\xe9\xc4\x15\xa1\x11\x82\x37\x4b\xed\xd1\x5b\x4b\x99\xb3\x15\xbb\x6b\x91\x1f\xe0\x1a\x41\x9f\xec\x99\xa7\x29\xb2\x5d\x22\x83\x54\x43\xd4\xf4\x77\x57\xe7\xff\x61\xec\xfd\x03\x7b\xef\x6b\x25\x6b\x03\xa6\x9d\x16\xb7\x2e\xdf\xf3\xf0\xc5\x45\x9d\x4a\x01\xcd\x68\xda\x7b\xc5\x87\x86\x2f\x81\x03\x72\xa8\x1e\x3a\x55\xa5\xed\x51\xd0\x76\x14\x9a\x22\xd1\x53\x97\x19\x40\x24\x51\xb6\xc6\x61\x5e\x58\x09\x49\x69\xce\x57\x46\x23\x0a\x1e\x78\x0e\x89\x13\x23\x87\x60\x92\x90\x4e\x62\x09\xf2\xc0\x05\xc2\x4e\x4e\x93\x66\xe3\x5d\x2b\x2e\xac\xdb\x5f\xa4\xf9\x8d\x7c\xea\x22\xda\x83\x13\xb8\x25\xb4\xe0\xdd\xe3\x73\x28\xe9\x03\x85\xf0\x48\x06\xc7\x89\xa6\x7c\x38\xba\x69\x4a\x59\xf5\x3e\x59\x72\x0d\xb9\x36\xf4\xdb\x0e\xeb\xd1\x2c\x29\x4b\x5e\x1e\xd0\x9f\xa3\x1d\x69\x92\x9a\x3c\x9a\x99\x69\xde\xb7\xea\x57\xaa\x76\x82\x2a\x0b\x12\x52\x83\xb9\xc4\xca\x72\xdc\xa6\xd9\x71\xd3\x1a\xc9\xa9\xd0\x43\x87\x35\xea\xcf\x6e\xaf\x28\x43\x76\x46\x45\xa1\x89\x32\xb9\x7c\x78\xeb\x70\xcc\x21\x61\xb4\x73\x91\xe4\x1a\x9a\xc7\xcb\x92\x08\xf7\x6a\x4f\xe9\x90\x43\x4d\xa4\xc3\xcf\x69\x95\xf1\x6e\xdd\x9f\xa6\x76\x14\x4f\x5a\xe8\x8a\xf8\x8c\x5d\x4a\xf5\xe7\x8d\x90\xb0\x50\x96\x29\x75\x32\xe7\xd9\x40\x47\x7e\x53\xd0\x67\xa0\x3e\x37\x79\xdf\xe0\x55\xc9\x87\xa1\x74\x8a\x14\xa4\x3c\xe4\x06\x2f\xc3\x1a\x32\x42\xba\xb8\x73\x7b\x7b\xea\xf2\x68\x54\x1e\xbf\xb8\x44\xed\x54\x1a\x11\x55\xda\x68\x09\xaf\x58\x05\x3a\xb9\xcd\xbf\x43\xb4\x0f\x69\x9a\xd1\xd1\x34\xbb\x33\x56\xe4\x49\x45\x78\x24\xe5\x2d\xad\x84\x9e\x5e\x4d\xf4\xa8\x02\x05\x26\x7a\x59\x8c\xb8\xf0\x85\x35\xd9\x36\xb1\x05\x75\x84\x32\xf1\xa4\x42\xee\x2d\x09\x3c\x5e\xe5\xd2\x6b\x97\x6a\xf0\x4d\x94\x99\xb0\x01\x4a\x66\xd2\xbb\x37\xbf\x89\xf9\xf4\xa3\x8d\x6f\xe5\x7d\xda\x43\xf8\xad\x98\x97\x61\xe4\xca\xc4\xc7\x1b\xa9\xe2\x47\x39\xc6\xa3\x77\xc0\x67\xa9\xe3\x91\xc6\x8c\x1b\x70\xc3\x88\x48\x6f\xdb\xd3\x32\xd3\x09\x04\x33\x5a\x51\xf1\xe8\x52\xde\x82\x87\x76\xa6\x8d\x05\x00\x80\xdc\x0d\xef\xe7\xf4\xaa\x56\x9e\x94\xb9\x4c\x31\x06\x56\xfa\x3f\x07\x53\x88\x8c\x3b\xf6\x04\x8f\x69\x4c\x1e\x05\x7d\x34\x2a\xdf\xe2\xe8\x47\xe6\xe0\xe3\x6a\xf9\x5d\xa0\x9f\x9f\x15\xd3\x61\xfc\xf3\x60\x73\xc3\x3d\x1a\xac\xac\x64\x46\xad\x57\x19\x0c\xc5\x73\x5a\x2b\x25\x56\x27\xb7\x75\x7d\xc8\xdb\x0b\x43\x90\xf4\xed\x2c\x2d\x36\x54\xcd\xd1\xe1\xc9\x32\x44\x33\x60\xbc\x6e\xed\x9c\xc1\x1c\xf8\x6f\x00\x00\x00\xff\xff\xfb\x99\xa5\xf7\x35\x12\x00\x00")

func timeTimeVdlBytes() ([]byte, error) {
	return bindataRead(
		_timeTimeVdl,
		"time/time.vdl",
	)
}

func timeTimeVdl() (*asset, error) {
	bytes, err := timeTimeVdlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "time/time.vdl", size: 0, mode: os.FileMode(420), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _timeVdlConfig = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x53\xc1\x6a\xac\x30\x14\x5d\xeb\x57\x5c\x5c\xbd\x07\x43\x84\xf7\x76\xc2\x5b\x3c\x2a\x0c\x2d\x65\xa6\x0b\x69\xd7\xc1\xdc\x71\xd2\x6a\xae\xc4\x68\x29\xc3\xfc\x7b\x73\xa3\x0e\x33\xed\xd8\x6e\x2a\x18\x4d\xee\xc9\x39\x27\x27\x49\x9a\x42\xb1\x47\x18\x54\x2d\x4a\x32\x3b\x5d\xc1\x4e\xd7\x08\x3b\xb2\xe0\xfc\x78\xe7\xa4\x51\xd2\x2a\x70\xba\x41\x68\x65\xf9\x22\x2b\x84\x11\xd9\x5b\xec\x40\x2b\x4d\x8d\x74\xba\x04\xe3\xdb\x01\x63\x4f\xe8\xde\x5a\xae\x18\x40\x59\xee\xa1\x42\x83\x56\x3a\x54\x50\x4b\x53\xf5\x7e\xbe\x88\x27\xa9\x7f\xac\xeb\x88\x6a\x71\x13\x06\x0e\x71\xb4\xa6\x0c\xfc\x27\x7a\xd2\x16\x0b\xda\x04\xce\x82\xf9\xc6\xe1\xc8\xd3\x3f\xe6\xf7\x41\x22\x78\x12\x79\xef\xc9\x35\x19\xd0\x1d\x58\x6c\xbd\x27\x34\x2c\x26\x3b\x58\xd3\x25\x44\x30\x41\x32\xf7\x92\x89\x31\x62\xfa\x0c\xfc\x93\x5c\xa0\x93\x55\xa8\xde\x36\x2d\x59\xc7\xf2\x87\x07\xe9\xf6\xd9\x88\x4a\x56\xb0\x91\x0d\xce\xbd\xe3\x31\x80\xc7\xf6\x93\xc5\x82\xb3\x5b\xb6\xc7\xe5\xd1\x1a\xff\x2d\xd9\x0a\xb5\x1f\xb3\xc4\xf1\xe6\x28\x55\xad\xcd\x35\x6b\x0c\x1e\xf7\x73\x4a\x70\x82\x8e\x36\xcf\x27\x2f\xa6\x38\xd7\x97\x2c\x0f\x42\x53\x3a\xfc\xf9\x9b\xfa\x23\x60\x89\x5c\xfa\xcd\x1a\xb8\xe1\xf7\x4e\x0e\xf2\xeb\x23\x72\xbe\xc3\x09\xd9\x4a\x3c\x93\x92\xe2\xca\xde\xce\x79\x7f\x04\xf9\xc3\x7a\x4a\x7b\x96\xe5\x7b\xb2\xcd\xb7\xbf\x1c\x29\xf5\xfa\x3b\x83\xff\x4a\x9d\x12\xe2\x54\xbb\xbe\xe5\x15\x86\x8b\xc3\x16\xbb\xd2\xea\xd6\x89\xf8\x18\xbf\x07\x00\x00\xff\xff\xaa\x9d\x6f\x24\x62\x03\x00\x00")

func timeVdlConfigBytes() ([]byte, error) {
	return bindataRead(
		_timeVdlConfig,
		"time/vdl.config",
	)
}

func timeVdlConfig() (*asset, error) {
	bytes, err := timeVdlConfigBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "time/vdl.config", size: 0, mode: os.FileMode(420), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _vdltoolConfigVdl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xe4\x58\xcf\x6f\x14\xb9\x12\x3e\x67\xfe\x0a\x8b\xcb\x03\x34\xcc\xbc\xf7\xa4\xbd\xec\x9e\xb2\x04\xa2\xac\x22\x84\x20\xcb\x1e\x10\x07\x4f\x77\xf5\x8c\x49\xb7\x3d\xd8\xee\x24\xa3\x15\xff\xfb\x7e\x55\xb6\xfb\xc7\x24\x80\xf6\xc7\x89\xe5\x10\xf5\xb8\xed\xaa\xaf\xbe\xfa\xaa\x5c\xcd\x7a\xad\x9e\xbb\xfd\xc1\x9b\xed\x2e\xaa\xff\xff\xf7\x7f\x3f\xa8\xab\x1d\xa9\x77\xda\xea\xda\xf4\x9d\x3a\xed\xe3\xce\xf9\xb0\x52\xa7\x6d\xab\x64\x53\x50\x9e\x02\xf9\x1b\xaa\x57\x0b\x1c\xfe\x35\x90\x72\x8d\x8a\x3b\x13\x54\x70\xbd\xaf\x48\x55\xae\x26\x85\x9f\x5b\x77\x43\xde\x52\xad\x36\x07\xa5\xd5\xcf\x6f\xcf\x9e\x85\x78\x68\x89\x4f\xb5\xa6\x22\x8b\x93\x71\xa7\xa3\xaa\xb4\x55\x1b\x52\x8d\xeb\x6d\xad\x8c\xc5\x22\xa9\xcb\x8b\xe7\x2f\x5e\xbd\x7d\xa1\x1a\xd3\xd2\x6a\xc1\x47\x5e\xeb\xea\x5a\x6f\x49\xdd\xd4\x6d\x74\xae\x55\x35\x35\xc6\x52\x50\xf1\xb0\xc7\xdf\x3e\x24\x3f\x7c\x16\x3b\x94\x6c\x31\x31\x50\xdb\x2c\x61\xb3\x6a\xfb\xda\xd8\x2d\xbf\x66\x5b\x8d\xf3\x1d\x1c\x03\x37\xf6\xae\x2a\x67\x1b\xb3\x15\x57\x61\xb5\xd8\xcf\xfd\x88\xef\xe7\x69\x47\xd8\x53\x65\x1a\xc3\x4e\x77\x1c\x26\x2f\xf6\x5e\x47\xe3\x2c\x9b\x9c\x39\x5f\x29\x10\x09\x12\x8c\x20\x34\x95\x6e\xdb\x03\x9b\xf2\xb4\x67\xfe\x6c\x24\x89\xd5\xed\xf9\xb4\x6e\xd5\xa3\x11\xc9\xa3\x04\x85\x5f\x93\xae\x76\x62\x32\x53\x9b\xc1\xc1\xf8\x0b\xbc\x61\x7b\x47\x01\x28\xd3\xed\x41\xae\x89\xed\x81\x1f\x9d\x8f\x21\xe5\x66\x72\x72\xb5\x5d\xa9\x83\xeb\x55\xa7\x0f\x80\xd3\x10\x80\xbb\x6c\x4a\x90\xe7\x68\x73\x26\xee\x01\x53\xb7\x06\x9a\xe8\xa3\xa2\xbb\x23\x57\xcc\x70\x31\xb2\xe0\xbc\x0c\xc4\x45\xdf\x57\x51\xfd\xbe\x38\x81\x9b\x73\xb2\x97\xda\x6e\x7b\xa0\x11\x2d\x45\x6f\xaa\x98\x28\x0d\x24\x49\x11\x01\x6d\xc9\x52\xe6\xb6\x2d\xdb\x81\xfe\xa2\x19\x76\x9a\x20\xf6\xa8\xdb\xc7\xc3\x52\x81\x60\x15\xfa\x3d\xe3\x00\xb5\xc3\x11\xa5\x3d\xf1\x3b\x77\x8b\xd5\xe8\x58\x68\xd9\x32\x0b\xf8\x64\x06\x06\x46\xdf\x4f\x16\x3e\x2c\xc4\x7e\xf9\xf9\x2c\xa7\xbf\x9a\x67\x3e\xb0\x15\xa7\xca\xbf\x73\x97\x62\x5e\x9c\xfc\xa2\x6f\x74\x5e\xe4\xc7\xe9\x72\xa8\xbc\xd9\x47\x35\x3e\xe6\x97\x9f\x45\x6d\x13\x08\x8a\x6c\xdf\x09\xd8\x44\xd0\xb5\x75\xb7\xf6\x2b\xfc\x24\xd6\x8f\x0d\x30\xf1\xe7\x2e\xb9\x9e\x02\x28\xfe\xdc\x3d\x7d\x6f\x9d\x7a\x38\xda\xe2\xc1\x3d\x94\xd9\xdf\x8c\xa7\x2b\xf7\x0a\x1b\x6f\xe8\x4a\xca\x72\x5e\x31\x9d\xde\xef\x59\x23\x8d\x77\x1d\x3a\xc2\xbb\xb3\x4b\x68\x09\xe9\x11\x93\xc8\x0d\xea\x55\x31\x4e\x98\xb2\x62\x24\xbd\x19\x4a\x26\x21\x18\x0b\xcb\x23\xb7\x10\x9f\xd4\xbe\x46\xef\x20\x1d\x0e\x6c\xa7\x20\x26\x31\x85\xea\x77\xde\x53\x05\x9d\xfe\x84\xbd\x4c\x0a\xce\x56\x3d\xd6\x2c\x6b\xb7\x48\x30\xe9\x23\xd7\x49\x48\xad\x89\xc5\x33\xca\x5c\xcc\xdd\xee\x4c\xa4\xd6\x84\xa4\x9f\xf5\xfa\x0b\x91\xf3\xc9\x8e\xb4\x8d\xd2\x19\x02\xda\x9d\xf6\xc6\x05\x1c\x27\x8e\x58\xfe\x02\x06\x5a\x9f\xa9\x8d\x43\x37\x02\xd3\x39\x76\x09\x5a\x82\x42\x09\xa2\x50\xbd\x24\x7c\xa9\x36\xa8\x39\xae\x5b\x4b\x1c\x2f\xa8\x47\xcc\xda\xd7\xc2\xe3\x9c\x23\xf1\xc9\xd4\x8a\xbd\xca\x75\x7b\x2c\x6f\x4c\x6b\xe2\xa1\x34\x00\xce\x07\x1f\x8c\xa6\x1b\xda\xca\xd0\x53\xcf\x4a\x57\x63\x56\xaf\x78\x07\x0c\xa6\xe8\x39\x5f\x33\x83\x09\xd7\x2d\xda\x02\x07\xcb\x66\x87\xfa\x4a\x42\x05\xa9\xbd\xb4\x7a\x1a\x21\x97\x48\x27\xce\x47\x32\xf9\x02\xba\xa6\x43\xba\x56\x44\x35\xd2\x45\xf1\x68\x75\x47\x65\x59\xc0\x33\x53\x8f\xf5\xb5\x4e\x09\xc0\xaf\x27\x4b\x4e\x10\x9a\x66\xd7\x87\x28\xd6\x36\x25\xac\xe1\x6e\xe1\x7e\x5a\x22\xd6\x21\xb8\xca\x08\x58\x6e\x6b\xe5\xfd\xb4\xa5\xce\x81\x4d\x6b\x0f\x24\xe3\x3c\x0a\x34\xa1\xa3\x3b\x56\x85\xad\x04\xa2\x86\x0b\xe3\x53\x37\xb3\xb8\x07\x83\xa4\xa5\xb7\x95\xf4\x8c\x9c\x17\x7e\x21\x5d\x73\x43\xf1\x96\x28\xc1\x13\x8a\x99\xf8\x49\x0d\x84\xa5\xac\xdc\x1a\x34\x39\xdd\xc7\xa4\x17\xbe\x52\x14\xff\x15\x6b\x8c\xfa\x0d\x6d\x19\x82\x4f\x42\x1c\x22\x02\xfb\xc5\xb3\x50\x18\xc6\x90\x4e\x19\x7f\xbe\x19\x67\xf4\x16\x42\x99\xfa\x97\xce\xfd\x28\xbb\x95\xd8\x81\x18\x5c\x11\xfb\xe3\x3b\x7e\xbb\x54\x56\x3d\x4d\x0b\x4f\x14\x79\x9f\xc5\x32\x6e\x7f\x89\x8a\x1f\x0e\x3c\xcd\x27\x8e\x0e\xdc\xaf\x21\x64\xfe\x3d\xd7\xa6\xdd\x7e\x38\x77\xbc\x34\x34\x2c\x41\x56\x13\xb7\xb1\x4d\x66\x1f\x3d\x58\xe4\x60\x6c\xba\xdd\x45\xbe\x47\xd9\xd5\x83\x6a\x64\x76\x79\x4b\x48\xf6\xca\xb8\xf5\xdd\x1a\xf7\xe0\xba\x35\x9b\x35\x58\x5c\xa3\xd9\xc6\x5a\x47\xbd\xce\x09\xe0\x62\xa2\x3b\x8d\x8b\x75\xec\xb0\x09\xc1\xac\xfb\x15\xb6\xa6\x60\xb2\xf6\x21\xbc\x79\x51\xf0\x4c\x82\x44\xe9\xfa\x58\xcd\x72\xc3\xa5\xda\x98\x98\xf1\xf4\xa9\x07\x3b\x68\x17\x75\x6d\xf2\xc0\x90\x6f\xf7\x65\xee\xb1\x69\xf4\xc9\xad\xa3\x8c\x3a\x6c\x67\xa8\xb9\xd6\x41\x2b\x83\xf0\x25\xd7\xdc\x85\x92\xb2\x74\x1b\xdc\xcc\x52\x32\x3f\x6c\x37\x56\x8c\x5d\x24\xa7\xd0\x4f\x89\x1f\xae\xa6\x6f\xa4\xef\x65\xe8\xc3\xfc\xf1\x45\x12\x72\x5c\xc3\xe4\x76\x25\x99\x39\x29\xb6\xde\x23\xed\xe9\x79\x48\x7c\xfa\x39\x49\xfd\xe0\x67\x9a\xf8\x21\x4b\x79\xfb\x2c\x4f\xaf\x35\x94\x90\xf3\x54\xc2\xdb\x6b\xa9\x14\x74\xfc\xde\x9a\x4f\x3d\xdf\x2a\xa6\x46\x37\x1d\xef\xae\xe4\x04\x50\xc7\x76\x25\x86\x26\x14\xbc\x62\x4a\x1f\xe8\x54\x03\x87\xc5\xa2\xc4\xcb\xa7\x91\xed\xb3\x5e\x54\x72\xee\x52\x3b\xb0\xd2\x1e\x96\xe9\xe2\x8a\xb3\xe9\x51\x7d\x44\x4b\x13\x83\x1b\x8d\x4e\x9f\x1d\xb0\x99\xd4\x82\x79\x9c\xdb\xa4\xc9\x08\x06\x83\xeb\x08\x83\x5f\x86\x56\x9b\x06\x73\x1e\xac\x2b\xd3\x3c\x18\x8e\xaa\x1d\x05\xfb\x1f\xbe\xad\x78\x56\x3a\xc2\x83\x60\x25\xb8\x1c\x6c\x4a\xc6\x38\xd4\x4c\xae\xf9\x8f\x3c\xf4\x7c\x75\x74\x98\x1e\xfb\xa7\x87\x87\x34\xe0\xfc\x5b\xc7\x87\x21\xfa\xef\x77\x80\x70\x7e\xbb\xfa\xe8\x6a\xbd\x62\xaf\x62\xef\x3b\x99\x1e\x74\x2c\xdf\x94\xf7\x66\x85\x74\xeb\x6f\x58\xc8\xe9\x76\xa7\x3a\x0b\x33\x55\xdb\x04\xd0\xea\x1b\xb7\x68\xae\xdf\x51\x73\xd8\xf0\x46\x5a\xc9\x9f\xaa\x36\x21\x32\x95\x9c\x98\x92\x2f\x9d\x69\xc9\xf1\x86\x23\x75\x4f\x3c\x7d\x53\xdb\xa3\x3b\x3e\x50\x66\xa5\xa6\x95\xef\x44\x84\xcd\xbd\x0d\x6a\x39\x8c\xa4\x4f\x11\x88\x93\xa5\x22\x88\x74\x99\xa1\x5f\xe0\x73\x7b\x4b\x7e\x2c\x8e\xca\xf5\x6d\xcd\x9c\xf2\x66\x14\x40\xde\x20\x80\xaa\x16\x70\xa0\xf3\x11\xff\x8e\xf8\x9b\xab\xdb\x88\x0c\xc4\xe7\x3d\x96\x97\xe9\x2b\xbb\x21\x1d\xfb\xf2\xc1\xc9\xff\x2b\xc1\x34\xe9\x18\xf9\x63\x9d\x4d\x8d\x49\xc5\x7a\xd1\x20\x7f\xd6\xbe\x1c\x67\x8c\x25\xd7\x42\xfa\x36\x17\xa2\x4f\xab\x8a\x42\xb8\x44\xea\x87\x13\x39\xff\xb0\xc1\x40\x26\x1b\xb8\xdc\x22\xc3\x65\xd9\x1f\xbd\xc3\x6e\x6e\x05\xc7\xc9\x4a\x63\xe0\xb8\x2d\x15\x40\x29\xe4\x11\xb0\xb3\x43\x6a\x78\x38\xfa\x2b\x05\x37\x28\x68\x5a\x66\xc8\x42\xba\xa2\xfe\x6e\x99\x1d\xcb\xec\xbe\xee\xc7\x7b\x6b\xfa\xd5\x7d\x74\x7b\xe5\x6f\xf3\x6f\xde\x61\x73\x13\xe5\x26\xfb\xbc\xf8\x23\x00\x00\xff\xff\xb3\x86\x67\x23\x51\x13\x00\x00")

func vdltoolConfigVdlBytes() ([]byte, error) {
	return bindataRead(
		_vdltoolConfigVdl,
		"vdltool/config.vdl",
	)
}

func vdltoolConfigVdl() (*asset, error) {
	bytes, err := vdltoolConfigVdlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "vdltool/config.vdl", size: 0, mode: os.FileMode(420), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"math/math.vdl":           mathMathVdl,
	"math/vdl.config":         mathVdlConfig,
	"signature/signature.vdl": signatureSignatureVdl,
	"time/time.vdl":           timeTimeVdl,
	"time/vdl.config":         timeVdlConfig,
	"vdltool/config.vdl":      vdltoolConfigVdl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"math": &bintree{nil, map[string]*bintree{
		"math.vdl":   &bintree{mathMathVdl, map[string]*bintree{}},
		"vdl.config": &bintree{mathVdlConfig, map[string]*bintree{}},
	}},
	"signature": &bintree{nil, map[string]*bintree{
		"signature.vdl": &bintree{signatureSignatureVdl, map[string]*bintree{}},
	}},
	"time": &bintree{nil, map[string]*bintree{
		"time.vdl":   &bintree{timeTimeVdl, map[string]*bintree{}},
		"vdl.config": &bintree{timeVdlConfig, map[string]*bintree{}},
	}},
	"vdltool": &bintree{nil, map[string]*bintree{
		"config.vdl": &bintree{vdltoolConfigVdl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
