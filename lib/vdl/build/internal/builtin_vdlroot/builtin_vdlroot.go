// Copyright 2016 The Vanadium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// Code generated by go-bindata.
// sources:
// v.io/v23/vdlroot/math/math.vdl
// v.io/v23/vdlroot/math/vdl.config
// v.io/v23/vdlroot/signature/signature.vdl
// v.io/v23/vdlroot/time/time.vdl
// v.io/v23/vdlroot/time/vdl.config
// v.io/v23/vdlroot/vdltool/config.vdl
// DO NOT EDIT!

package builtin_vdlroot

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _mathMathVdl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x8e\xb1\x4e\xc3\x30\x14\x45\xe7\xfa\x2b\xee\x0f\x34\xa5\x69\x15\xb1\x96\xd2\xa1\x12\x62\xa0\xc0\xfe\x92\xbc\x24\x16\x8e\x1d\xd9\xcf\x15\x11\xea\xbf\xe3\x64\x40\x19\x90\x10\xe3\xb1\x7c\xde\x3d\x9b\x0d\x8e\x6e\x18\xbd\x6e\x3b\x41\x7e\xb7\x2d\xf0\xda\x31\xde\xc9\x52\xad\x63\x8f\x43\x94\xce\xf9\x90\xe1\x60\x0c\xe6\x4f\x01\x9e\x03\xfb\x2b\xd7\x99\x4a\xf2\x5b\x60\xb8\x06\xd2\xe9\x80\xe0\xa2\xaf\x18\x95\xab\x19\x09\x5b\x77\x65\x6f\xb9\x46\x39\x82\xf0\x70\x79\x5c\x07\x19\x0d\x4f\x96\xd1\x15\xdb\x64\x4a\x47\x82\x8a\x2c\x4a\x46\xe3\xa2\xad\xa1\x6d\x7a\x64\x3c\x9d\x8f\xa7\xe7\xcb\x09\x8d\x36\x9c\x29\x35\x50\xf5\x41\x2d\xa3\x27\xe9\x94\x9a\x9b\xfb\xc1\xf0\x67\xb1\x9f\x86\x28\x4d\xce\x08\x1b\xfb\x92\xfd\x8c\x2e\xa4\xe5\x54\xb6\xcb\xd7\xa5\x96\x14\x4d\x06\x34\x0d\xf4\xd4\x6a\x4b\x7e\xc4\x40\x5e\x42\xa6\x64\x1c\x78\x71\x2f\x88\x8f\x95\xe0\x4b\xad\x5e\x26\xa5\x31\x8e\x64\x97\xab\xd5\x39\x79\x3f\x74\x5b\x46\x6c\xf3\xfb\x3f\x2b\x8a\xfd\x3f\x2a\xa6\x83\xbf\x65\x14\xfb\x65\x46\xa2\x9b\xfa\x0e\x00\x00\xff\xff\xce\xca\xd1\x3a\xbf\x01\x00\x00")

func mathMathVdlBytes() ([]byte, error) {
	return bindataRead(
		_mathMathVdl,
		"math/math.vdl",
	)
}

func mathMathVdl() (*asset, error) {
	bytes, err := mathMathVdlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "math/math.vdl", size: 0, mode: os.FileMode(420), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mathVdlConfig = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x8d\x41\x4b\xc4\x30\x10\x85\xcf\xed\xaf\x78\xf4\x2c\x5d\x14\x11\x09\x78\xda\x83\x07\x71\x4f\x15\xc1\x5b\x4c\xa6\xed\x60\x9a\xa9\xd9\x74\x51\x64\xff\xbb\x49\xa3\x7b\xee\x21\x13\xf8\xde\x9b\x6f\x76\x3b\x74\x23\xe1\x64\x5d\x6b\xc4\xf7\x3c\xa0\x67\x47\xe8\x25\x20\x26\x3e\xe9\x38\x62\xd6\xe6\x43\x0f\x84\x52\x58\x02\x1d\xc1\x96\x25\x65\x6c\xe0\xd3\x3c\x11\xe2\xf7\x4c\xc7\x3a\xd9\xd8\x83\xb4\x19\x31\x90\xa7\xa0\x23\x59\x38\xed\x87\x25\xed\xb7\xf5\xdf\x85\x87\x7c\x2e\x8a\xb8\x76\xbf\x82\x9f\xba\x7a\x14\x85\xf4\x55\xaf\x1c\xa8\x93\xc3\xea\xec\xb2\xb2\xe0\xaa\xd9\xcb\x34\x3b\xfa\xba\xbb\x6d\x14\x0a\xaa\x9e\xd8\x5b\x85\xc3\x32\xbd\x53\xb8\x5a\x49\xde\x50\x68\xcc\xa5\x5b\xf0\x1b\x85\xac\x7f\x16\x9b\xd2\x17\xcf\x9f\x0b\x9d\xd7\xa4\xcc\x7f\xf7\xf5\xcd\x7d\xa3\x36\xba\x73\x77\x8b\x3c\x8f\xf4\xce\xf5\x6f\x00\x00\x00\xff\xff\x03\xf0\x4f\xb5\x68\x01\x00\x00")

func mathVdlConfigBytes() ([]byte, error) {
	return bindataRead(
		_mathVdlConfig,
		"math/vdl.config",
	)
}

func mathVdlConfig() (*asset, error) {
	bytes, err := mathVdlConfigBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "math/vdl.config", size: 0, mode: os.FileMode(420), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _signatureSignatureVdl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x53\x41\x8f\xd3\x3c\x14\x3c\xd7\xbf\x62\x8e\xdf\x77\x20\x0b\x48\x9c\x51\xd9\xed\xa1\x12\x74\x2b\xb5\x70\x59\xed\xc1\x89\x5f\x12\xb3\x89\x1d\xd9\xce\x4a\x11\xda\xff\xce\xb3\x63\xd2\xd2\xa2\x15\xa2\x27\xfb\x79\x66\xde\xcc\xb4\xbd\xb9\xc1\xad\x1d\x26\xa7\x9b\x36\xe0\xfd\xdb\x77\x1f\x70\x6c\x09\xdf\xa4\x91\x4a\x8f\x3d\xd6\x63\x68\xad\xf3\x05\xd6\x5d\x87\x04\xf2\x70\xe4\xc9\x3d\x93\x2a\x04\x93\xbf\x7a\x82\xad\x11\x5a\xed\xe1\xed\xe8\x2a\x42\x65\x15\x81\xaf\x8d\x7d\x26\x67\x48\xa1\x9c\x20\xf1\xe9\x70\xf7\xc6\x87\xa9\xa3\xc8\xea\x74\x45\x86\x99\xa1\x95\x01\x95\x34\x28\x09\xb5\x1d\x8d\x82\x36\x3c\x24\x7c\xde\xde\x6e\x76\x87\x0d\x6a\xdd\x51\x21\x22\x65\x2f\xab\x27\xd9\x10\xbc\x6e\x8c\x0c\xa3\x23\x28\xaa\xb5\x21\x8f\x30\x0d\x14\x5d\x0d\xd1\x98\x09\xda\x34\xac\x12\xc8\xd5\x92\xcd\x48\xd6\xec\x89\x43\xa8\x13\xd3\x17\x62\xb8\x54\x4b\x3b\xb6\x0b\x4d\x91\xaf\x9c\x2e\xa3\x7a\x7b\xbe\x93\xa3\xb2\xdb\x45\xbe\x10\x71\xf9\x19\xcf\x07\x37\x56\x01\x3f\xc4\x6a\x27\x7b\x02\x7f\x78\xc2\x8e\xc4\x6a\xff\xd4\xec\x65\x68\x97\xfb\x9d\xad\x70\xfe\xbe\xe9\x4b\x52\x1e\x78\x78\x4c\x27\x80\xfd\xec\x2c\xfc\x40\x95\x96\x1d\xac\x53\x14\x81\x85\x58\x7d\x49\x71\x3c\x23\xe7\x53\x44\xde\xc7\xe7\xb9\xea\x9c\xd6\xf0\xfe\x42\xbc\xa4\x5c\xb3\xe2\xeb\x99\x28\x62\x14\xa9\xab\x70\x33\xf9\x9f\x83\xcd\x0e\xb2\xd3\xbf\xac\x35\x67\xc8\x06\x32\xf7\xda\x01\xae\x76\x9e\x26\x5b\xb3\x76\x8d\x8f\x93\x87\x47\x3e\x21\x7d\xbb\xc3\x18\x20\x5d\x33\xf6\xfc\x33\xf1\x62\x75\x3f\x86\x0c\x5a\x30\x3c\xba\x00\x6d\xcd\x21\x38\x92\x3d\xf0\x31\x62\x4e\x42\x7e\x1e\xff\x67\x87\xa0\xad\x91\xdd\xff\x49\x30\x83\x17\x6c\x16\xfc\x03\xf8\x28\x67\x7f\x71\xbb\x34\x13\x4e\x2d\x05\x7e\xc9\xbd\x45\x99\xd7\x4a\xe3\xab\x69\x3a\x5a\x0c\xe7\xca\x22\xed\xa2\xaf\xdf\xaa\xfa\x75\x39\x46\x70\x64\xd8\xf2\x3b\x31\x98\x37\xa6\x51\xfa\x47\x9f\xab\xbe\x88\x9f\x01\x00\x00\xff\xff\x7a\xf5\x7c\x0e\x29\x04\x00\x00")

func signatureSignatureVdlBytes() ([]byte, error) {
	return bindataRead(
		_signatureSignatureVdl,
		"signature/signature.vdl",
	)
}

func signatureSignatureVdl() (*asset, error) {
	bytes, err := signatureSignatureVdlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "signature/signature.vdl", size: 0, mode: os.FileMode(420), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _timeTimeVdl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x58\x5d\x73\xdb\xba\x11\x7d\xb6\x7f\x05\xc6\x7d\xb8\xc9\x54\x96\x68\xf7\x36\xad\x93\x27\xd7\xf9\x68\x3a\x69\x92\xa9\x9d\x76\xa6\x2f\x1a\x88\x84\x44\x8c\x49\x80\x05\x40\xc9\x4a\x27\xff\xbd\x67\x17\x00\x49\x29\xae\xeb\x66\x7c\x1f\x24\x61\x17\xfb\x71\xce\xd9\xc5\x5d\x2c\xc4\x8d\xed\xf6\x4e\x6f\xea\x20\x2e\x8b\x8b\xdf\x8b\xbb\x5a\x89\xbf\x4b\x23\x2b\xdd\xb7\xe2\xba\x0f\xb5\x75\x7e\x2e\xae\x9b\x46\xf0\x21\x2f\x9c\xf2\xca\x6d\x55\x35\x3f\x85\xf1\x37\xaf\x84\x5d\x8b\x50\x6b\x2f\xbc\xed\x5d\xa9\x44\x69\x2b\x25\xf0\x71\x63\xb7\xca\x19\x55\x89\xd5\x5e\x48\xf1\xa7\xdb\xb7\xe7\x3e\xec\x1b\x45\x56\x8d\x2e\x95\x81\x65\xa8\x65\x10\xa5\x34\x62\xa5\xc4\xda\xf6\xa6\x12\xda\xe0\x4b\x25\x3e\x7d\xbc\x79\xf7\xf9\xf6\x9d\x58\xeb\x46\xcd\x4f\xc9\xe4\xab\x2c\xef\xe5\x06\x26\xba\x55\xa2\x52\x6b\x6d\x14\x6e\x0c\xd2\x54\xd2\x55\x88\xa9\xa3\xb0\x4c\x90\x41\x5b\xe3\x29\x24\xb9\xf2\xb6\xe9\x83\x12\x38\x82\xdf\x1b\xfc\xb2\x8d\xe6\x9e\x22\x27\x9f\x94\xea\xb1\x65\xa5\x7c\xe9\xf4\x8a\xc2\x56\x8d\xdd\x09\xe9\xe8\xcc\xbf\x7a\xed\xf0\x55\xb0\xa2\x73\x76\xab\x91\xe0\x0e\x5f\x90\x8f\xd2\xb6\x1d\x4c\x57\xba\xd1\x61\x0f\x9b\xb0\x53\xca\x88\x4a\xaf\xd7\xca\xc1\x2b\x9d\xdf\x38\xd9\xb6\xda\x6c\x84\x32\x5b\xed\xac\x69\xf1\x3d\x4a\x2a\x3e\x28\xa3\x9c\x0c\xf0\xcb\x25\x5b\x5b\x47\x0e\x47\xd3\xe9\x71\x11\xf6\x9d\x2e\x65\xd3\xec\x87\x08\x64\x1f\x6c\x8b\xab\x4b\x98\x1b\x94\xda\x73\xfc\xda\x20\x48\xc3\xc9\x92\xb7\xa3\xf4\x66\x74\x8b\xf0\xba\xed\x1a\xe5\x84\xae\x74\xf2\xd0\x7b\xd4\x76\x7e\xda\x4d\x8a\xcc\x55\xff\x5b\x36\xa7\xf0\x2b\xc4\xea\xb9\x9c\x5c\x45\xea\xb1\xe4\xfc\xd1\x4e\x4e\x23\x58\xc4\x88\xc4\x6e\x6d\x9b\x50\x41\x40\xf0\xbd\xf2\xaf\xc9\xd9\xc5\x4b\xae\xb8\x92\x2e\xd4\xbf\x00\x47\xb0\xa1\x53\xce\xc6\xe0\xc8\x9f\xb1\x01\x21\x6f\xfa\x46\x3a\x86\x17\xfe\xd5\x21\x74\xaf\x17\x0b\x65\xe6\x3b\x7d\xaf\x3b\x55\x69\x39\xb7\x6e\xb3\xa0\x4f\x8b\x4f\x4a\x76\x4b\xaf\x50\x80\xea\x39\xc7\x6f\xac\x75\x95\x36\x14\xec\xf2\x9b\xd1\x54\x34\xd9\x2c\xef\x28\xdb\x67\x58\x7f\x34\x01\x80\xe6\x58\x61\x75\x8d\xea\xeb\x72\x30\xbe\xe4\xe4\x00\x16\x02\xcc\xd8\xc3\x8c\x50\xcf\x85\x67\xdc\x52\x29\xd1\x49\x45\xdf\xfb\x67\x65\x59\x2c\x5f\xec\x51\xb5\x97\xcf\x39\xfb\x97\xbe\xd1\xd2\x2c\xf3\x05\xcf\x31\xf9\x80\x8a\x5b\xf7\xff\x5a\x7d\x75\xb6\x51\x1d\xc0\xb3\x7c\xd4\x3e\xf3\xab\xb5\x3e\x08\xe0\xcd\x3a\x54\x02\x64\xaf\x2d\xb8\x4f\xad\xde\xd5\x0a\xf8\x70\xc4\xa9\x01\xa4\x91\xdd\x32\xe2\xaa\xc7\x67\x02\x91\x2e\xef\x3d\x79\xf3\xda\x94\xc4\x66\xa1\x3a\x5b\xd6\xe2\x05\xfd\xc0\x06\x2f\x67\x02\xb5\x65\x2b\x82\xe8\x82\x9d\x50\xb9\xa5\xe8\x80\x35\x5d\x12\x9c\xc4\x34\xb7\x17\xf9\x43\xb4\x07\x64\xef\xb2\x33\xd1\xca\xce\x13\x81\x7a\xc7\x6c\x43\x78\x35\xfa\xb7\xa3\xb6\x96\x8d\x45\x2c\x33\x8a\xbe\xac\x81\x3c\xfc\x78\xc0\xb1\x19\x93\x03\x66\x76\xe7\x41\x29\x6a\x74\xa4\x9a\xf0\xfd\x2a\x38\x59\x32\xcc\x29\x32\x62\x4d\x1f\x49\x85\x7b\x98\x9a\x8c\x84\x9b\x69\x5c\x74\xcf\x48\xfb\xd6\x22\x02\xaf\x5a\x54\x31\x7f\xa3\x24\x81\x69\xdd\x37\x48\xe0\x66\xa2\x01\x49\x85\xc8\xe1\x50\x24\x0e\xed\x20\x6d\x46\xea\x94\xbe\xd0\x69\x62\xac\x5c\x41\xb8\x13\x6f\xb3\x52\x3e\xcd\x8b\xdb\x2f\xcb\x3f\xbe\x2a\x2e\xfe\xe7\xc1\xdb\xbd\x0f\xaa\x5d\x0e\xea\x42\xdc\x19\xab\x47\xd2\x32\xaa\x76\x67\xa1\x64\x3c\x0e\xe8\xd0\x4e\x87\x5a\xf4\x54\x70\xb4\xc6\xd8\xc8\x78\x28\xa1\x2a\x35\xa5\x3c\x08\x7a\xaa\xda\xe0\x13\x59\x01\x17\x94\x55\xae\x33\x8a\xb3\xa6\x4a\x12\x3c\xd6\xe0\x33\x40\xb2\xd6\x0f\x38\xc7\xa8\x22\x24\xe0\xf0\x77\xe5\xec\x63\x01\x92\xa3\x88\xbe\xa2\x28\x2e\xce\xf9\xef\xae\x28\x5e\xf3\xdf\xbc\xc8\xff\xfe\xc9\x6e\x34\x61\x40\xb1\x11\xf9\xea\x32\x5f\xc4\xc0\x97\xa1\x1f\x6f\xd8\xf3\xd0\x1d\xd7\xd3\x08\x33\x8c\xf5\x07\xa0\x46\xfc\x5a\x14\x82\x14\x40\x94\xfb\x92\x06\x22\xdc\x91\xf2\x89\x58\x07\xcf\x9d\x3c\xf3\xc0\x03\x86\xd4\xd9\x0c\x83\xc3\xf7\x8e\xc0\xc5\xf3\xd5\x58\xd1\x8c\x87\x45\x90\xab\x86\x8b\x64\x54\xa9\xbc\x97\x6e\x4f\xee\x08\x94\x9a\xf4\x0d\xb9\x46\x39\x1e\x87\xa4\x66\xa9\x07\x92\x35\xf1\x08\x2d\xf8\x60\xb9\x2b\x73\x2a\xcf\x4c\xac\xfa\x00\xcc\xef\xe4\xde\xe7\xe9\xfd\xed\xee\x46\x80\x2a\x83\x9b\x8c\x8a\x8d\x6d\xa4\xd9\x30\x1e\xba\xfb\x0d\xf3\x74\xf1\x9b\x24\xa0\xff\xe5\x2a\x1e\x6d\x26\x4a\xae\x38\xeb\x8d\x7e\xe0\xab\xcf\xe2\xb5\x0c\x8b\xb1\x29\x71\x2d\x40\xcb\x03\x79\xe3\x82\x5d\xd0\x98\x61\x99\xa9\x51\xcd\xf8\xd5\xd5\x1f\x8a\xdc\xa0\xc4\xd5\x90\x7a\x1e\x1b\x8e\x6b\xb1\x8f\xa0\x77\x0c\x1e\x49\xbe\x92\x1e\x08\x82\x81\xdb\xcf\x92\x16\x69\x00\xd4\x9b\x5f\x90\xbe\xd8\xca\x46\xc7\xb9\xc8\xa5\x04\x4b\x69\x50\x13\xe3\xd1\x55\x21\xbb\x48\xb2\x81\xe7\x4f\xd2\x04\x93\xe9\x21\x92\x04\xec\x57\x31\xa6\xb7\x09\xbe\xcc\x9b\xfc\xe1\x27\x68\x36\xd0\x2e\x44\x3d\xc1\x7a\x5c\x47\xc2\xce\x46\x42\xf9\xcc\xa8\x19\xd7\x8e\x9c\x3d\xc5\x2a\xbe\x7f\xb8\xcd\x07\xd7\x03\x8c\xff\x3e\x3d\x81\xd9\x6d\x82\xde\x51\x08\x19\x91\x09\x09\x39\x92\xc4\x2b\x87\xf6\x47\x82\xda\x7e\x53\x37\x7b\xf6\xf4\xdb\xc5\xf9\xe5\x55\x21\xb0\x41\x35\x74\x0b\xf5\x08\x1a\x8b\xfe\x6f\x72\xdb\x38\x37\x8f\xb0\x59\xa6\x68\x41\x49\xcb\x45\x1f\x67\x38\x18\x71\x72\x3b\x5c\x1c\x5e\xfd\xca\x7e\x3f\x53\x4a\xc7\xf1\xad\x93\x0a\xc7\x15\x31\x73\x82\x58\x32\x16\x00\xe7\x49\x83\x62\xd8\x7f\xed\x7d\x60\x77\x80\x44\x4a\x0a\xbd\x6f\xa0\xee\xdb\x9c\x4f\xae\x32\x12\xb9\xba\xba\x9a\xa5\xff\xe6\x64\xc5\x96\x1f\x0d\x38\xe8\x5a\x20\xe4\x3b\xc2\x07\x3c\xda\xd9\x28\xfb\xe0\xa6\xf7\x31\x4d\x6b\xd4\x10\x90\x53\x07\x22\xc6\x40\x2f\x0e\x0a\x4f\x7a\x8e\x1b\x39\x4b\xc4\xf9\x9e\xd6\x8b\xc1\xe9\xc4\x15\xa1\x11\x82\x37\x8b\xed\xd1\x1b\x43\x99\xb3\x15\xbb\x6b\x91\x1f\xe0\x1a\x40\x9f\xe4\x99\xa7\x29\xb2\x2d\x90\x41\xac\x21\x6a\xfa\xbb\xcb\xd3\x1f\x8c\xbd\x7f\x60\xef\x7d\xab\x64\xd5\x80\x69\xc7\xc5\xad\xf2\xf7\x3c\x7c\x71\x51\xa7\x62\x40\x33\x9a\xf6\x4e\xf1\xa1\xe1\x4b\xe0\x80\x1c\xaa\x87\x4e\x95\x71\x7b\x14\xb4\x1d\xf9\x3a\x4b\xf4\xd4\x65\x02\x10\x49\x94\xa9\x70\x98\x17\x56\x42\x52\x9c\xf3\x65\xa3\x11\x05\x0f\x3c\x8b\xc4\x89\x91\x43\x30\x51\x48\x27\xb1\x78\xb9\xe7\x02\x61\x27\xa7\x49\xb3\x76\xb6\x15\x67\xc6\xee\xce\xe2\xfc\x46\x3e\x55\x16\xed\xc1\x09\xdc\x12\x5a\xf0\xee\x71\x29\x94\xf8\x81\x42\x78\x24\x83\xc3\x44\x63\x3e\x1c\xdd\x34\xa5\xa4\x7a\x5f\x0c\xb9\x86\x5c\x37\xf4\xdb\x16\xeb\xd1\x2c\x2a\x4b\x5a\x1e\xd0\x9f\x83\x1d\x69\x92\x9a\x3c\x98\x99\x71\xde\xb7\xea\x0d\x55\x3b\x42\x95\x05\x09\xa9\xc1\x5c\x62\x65\x39\x6c\xd3\xec\xb0\x69\xb5\xe4\x54\xe8\xa1\xc3\x1a\xf5\x67\xbb\x53\x94\x21\x3b\xa3\xa2\xd0\x44\x99\x5c\x3e\xbc\x75\x38\x66\x1f\x31\xda\xd9\x40\x72\x0d\xcd\xe3\x65\x49\xf8\x7b\xb5\xa3\x74\xc8\xa1\x26\xd2\xe1\xe7\xb8\xca\x38\xbb\xea\x8f\x53\x3b\x88\x27\x2e\x74\x59\x7c\xc6\x2e\xc5\xfa\xf3\x46\x48\x58\xc8\xcb\x94\x3a\x9a\xf3\x6c\xa0\x03\xbf\x29\xe8\x33\x50\x9f\x9a\xbc\xab\xf1\xaa\xe4\xc3\x50\x3a\x45\x0a\x92\x1f\x72\x83\x97\x61\x0d\x19\x21\x9d\xdd\xd9\x9d\x39\x76\x79\x30\x2a\x0f\x5f\x5c\xa2\xb2\x2a\x8e\x88\x32\x6e\xb4\x84\x57\xac\x02\x9d\xdc\xa4\xdf\x21\xda\xfb\x38\xcd\xe8\x68\x9c\xdd\x09\x2b\xf2\xa8\x22\x3c\x92\xd2\x96\x96\x43\x8f\xaf\x26\x7a\x54\x81\x02\x13\xbd\xcc\x46\x5c\xf8\xcc\x9a\x64\x1b\xd9\x82\x3a\x42\x99\x78\x52\x21\xf7\x96\x04\x1e\xaf\x72\xe9\xb4\x8d\x35\xf8\x29\xca\x44\x58\x0f\x25\x6b\xe2\xbb\x37\xbd\x89\xf9\xf4\xa3\x8d\x6f\xe5\x7d\xdc\x43\xf8\xad\x98\x96\x61\xe4\xca\xc4\xc7\x1b\xa9\xe4\x47\x39\xc6\xa3\xb3\xc0\x67\xae\xe3\x81\xc6\x8c\x1b\x70\xcd\x88\x88\x6f\xdb\xe3\x32\xd3\x09\x04\x33\x5a\x51\xf1\xe8\x52\xde\x82\x87\x76\xc6\x8d\x05\x00\x80\xdc\x0d\xef\xe7\xf8\xaa\x56\x8e\x94\x39\x4f\x31\x06\x56\xfc\x3f\x07\x53\x88\x8c\x3b\xf6\x04\x8f\x71\x4c\x1e\x04\x7d\x30\x2a\xdf\xe3\xe8\x67\xe6\xe0\xe3\x6a\xf9\x04\xd0\xaf\x69\xff\x20\x1f\x1e\x12\x83\xe2\x9e\x97\xd2\x27\xde\x16\xa3\x89\x06\x37\x4b\x19\xb1\x1b\x31\xe3\x54\xc2\x45\xbe\xe4\x8d\xd0\x73\x88\x28\xc9\xda\xc9\x54\xd7\x70\xea\x4c\x1b\x52\xad\xa0\x90\xc9\x49\x8e\x75\xd8\x37\x7e\x9c\xfe\x27\x00\x00\xff\xff\xec\x04\xfd\xa5\x23\x12\x00\x00")

func timeTimeVdlBytes() ([]byte, error) {
	return bindataRead(
		_timeTimeVdl,
		"time/time.vdl",
	)
}

func timeTimeVdl() (*asset, error) {
	bytes, err := timeTimeVdlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "time/time.vdl", size: 0, mode: os.FileMode(420), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _timeVdlConfig = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x54\x4d\x8b\xdb\x30\x10\x3d\xc7\xbf\x62\xf0\x69\x17\x82\x0c\xed\x2d\xd0\x43\xd9\xc0\x92\x7e\x78\x0b\x49\x5b\xe8\x6d\x6a\x4d\x1c\xb5\xb6\xc6\x95\x65\x2f\x25\xe4\xbf\x57\x23\x25\x21\xd9\x26\x85\xa5\x1b\x88\x62\xcf\xc7\x7b\xf3\x66\x26\x2a\x0a\x58\x6d\x08\x46\xdd\xa8\x8a\xed\xda\xd4\xb0\x36\x0d\xc1\x9a\x1d\xf8\x60\xef\x3d\x5a\x8d\x4e\x83\x37\x2d\x41\x87\xd5\x4f\xac\x09\x52\xe4\xe0\xa8\x07\xa3\x0d\xb7\xe8\x4d\x05\x36\x9c\x23\x65\x01\xd0\xff\xee\xc4\x63\x81\xb0\xda\x40\x4d\x96\x1c\x7a\xd2\xd0\xa0\xad\x87\x90\xaf\xb2\x3d\xd5\x1b\xe1\xf5\xcc\x8d\xba\x8b\x86\x6d\x36\xb9\xe7\x19\x84\x9f\xc9\x57\xe3\x68\xc5\x65\xc4\x5c\x09\x5e\x32\x4f\x02\xfc\x97\xf9\x87\x58\x8e\x9a\x0f\x01\xd7\xb0\x05\xd3\x83\xa3\x2e\x94\x43\x56\x78\xb0\x87\x7b\x3e\x0f\x51\x92\x9b\x1f\xde\xf2\x3d\xd8\xe4\xbd\xb1\x7a\x06\xe1\x53\x0e\xed\x77\x72\xd3\x68\x14\xba\x68\xcc\xcf\x20\xf2\xe4\x5d\xb4\x1d\x3b\x2f\xe5\x6c\x3f\xa1\xdf\xcc\x52\x54\x3e\x85\x12\x5b\x3a\xbc\xed\x76\x29\xf8\x1b\x39\x8e\x50\xdb\x8f\xac\x83\xf7\xb3\x35\xbf\x06\x4a\xce\x74\x9e\xea\x59\x49\x8f\xaf\x6b\x11\x77\xd2\x21\x4f\x7f\x6b\x58\x7a\x37\x54\xfe\xa2\x86\x98\xf0\x02\xf5\xdf\xa1\x65\x6b\x2a\x6c\xa6\xb0\xe8\x93\x33\x57\xe9\xe9\xe6\x36\xbf\xa6\x4b\x66\x39\x27\xd4\x8d\xb1\x97\xf4\x49\x5c\x5a\x9e\xfd\xcc\xf6\xa1\x49\xeb\x69\xf2\xb3\x34\x1f\x93\xae\xe9\x1e\x95\xe1\x62\x7c\xf5\xba\x08\x4b\xe8\x98\x7d\xf1\xbf\x8d\x88\x03\xba\xd4\x0d\x39\xe4\xfb\x0e\x47\xfc\xf7\x7a\x9f\xae\x68\xce\xae\x56\x3f\x58\xa3\xba\xb0\x87\x87\x1d\x78\x1a\x14\xfe\x68\xc7\x61\x1f\x68\x97\x8f\x66\xed\x9f\xc1\x5b\x2e\x05\x62\x11\xe6\xe3\x46\x6c\x9e\xf0\x95\x4b\xe1\x38\xc3\x97\x3b\xe4\x61\xfe\x70\xe3\x59\xeb\xc7\xdb\x19\xbc\xd5\xfa\x38\xd0\xc0\x01\xfd\xd0\x49\xef\xe3\xa5\x22\x2d\xe8\x2b\x67\x3a\xaf\xb2\x5d\xf6\x27\x00\x00\xff\xff\x46\x95\x86\x66\x7e\x04\x00\x00")

func timeVdlConfigBytes() ([]byte, error) {
	return bindataRead(
		_timeVdlConfig,
		"time/vdl.config",
	)
}

func timeVdlConfig() (*asset, error) {
	bytes, err := timeVdlConfigBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "time/vdl.config", size: 0, mode: os.FileMode(420), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _vdltoolConfigVdl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xe4\x5a\x4b\x73\x1b\x37\x12\x3e\x8b\xbf\x02\xa5\xda\xaa\x95\x53\x0c\xb9\x9b\x7d\x1c\xb4\x95\x83\x22\x29\x2a\x65\x1d\xd9\x6b\x4a\x89\x6b\x53\x39\x60\x66\x40\x12\xd6\x10\x60\x00\x0c\x25\xc6\xe5\xff\xbe\xfd\x00\x30\x18\x8a\x92\xe2\x6c\x4e\xb6\x0f\x32\x39\x03\x34\xfa\xf1\xf5\xd7\x0d\x80\xd3\xa9\x38\xb5\xeb\xad\xd3\x8b\x65\x10\x5f\xfd\xe5\xaf\xff\x10\xd7\x4b\x25\x7e\x90\x46\x36\xba\x5b\x89\x93\x2e\x2c\xad\xf3\x13\x71\xd2\xb6\x82\x06\x79\xe1\x94\x57\x6e\xa3\x9a\xc9\x08\x26\xdf\x78\x25\xec\x5c\x84\xa5\xf6\xc2\xdb\xce\xd5\x4a\xd4\xb6\x51\x02\xbe\x2e\xec\x46\x39\xa3\x1a\x51\x6d\x85\x14\xdf\xcc\xce\xbe\xf4\x61\xdb\x2a\x9c\xd5\xea\x5a\x19\x98\x19\x96\x32\x88\x5a\x1a\x51\x29\x31\xb7\x9d\x69\x84\x36\xf0\x50\x89\x97\x97\xa7\xe7\x57\xb3\x73\x31\xd7\xad\x9a\x8c\x70\xca\x6b\x59\xdf\xca\x85\x12\x9b\xa6\x0d\xd6\xb6\xa2\x51\x73\x6d\x94\x17\x61\xbb\x86\xbf\x9d\xe7\x75\x70\x2e\x8c\x10\x34\x44\x07\xaf\xda\xf9\x18\x64\xd6\x6d\xd7\x68\xb3\xc0\xd7\x28\x6b\x6e\xdd\x0a\x16\x06\xbd\x61\xec\xa4\xb6\x66\xae\x17\xb4\x94\x9f\x8c\xd6\xc3\x75\x68\xed\x53\x1e\xe1\xd7\xaa\xd6\x73\x8d\x8b\x2e\xd1\x4c\x7c\xd8\x39\x19\xb4\x35\x28\x72\xb0\xf8\x44\x80\x23\xc1\x09\x9a\x34\xd4\xb5\x6c\xdb\x2d\x8a\x72\x6a\x8d\xfe\x33\x41\x91\xad\x76\x8d\xb3\x65\x2b\x0e\x7b\x4d\x0e\x59\x15\x7c\xad\x64\xbd\x24\x91\xd1\xb5\x51\x39\x10\x7e\x0e\x6f\x50\xde\x8e\x01\x42\xaf\xd6\xe0\x5c\x1d\xda\x2d\x7e\xb4\x2e\x78\x8e\x4d\x31\x73\xb2\x98\x88\xad\xed\xc4\x4a\x6e\x41\x9d\xb9\x02\xc5\x6d\x14\x45\x9a\x47\x6b\x63\x24\x1e\x28\x26\xee\x34\x60\xa2\x0b\x42\xdd\xef\x2c\x85\x1e\x4e\x42\x46\x18\x97\xec\xb8\xe0\xba\x3a\x88\xf7\xa3\x03\x58\xe6\x42\x99\x97\xd2\x2c\x3a\xd0\x86\xb0\x14\x9c\xae\x03\xbb\xd4\x2b\x0a\x0a\x01\x68\xa1\x8c\x8a\xbe\x6d\xd3\x70\xd0\xfe\x72\x9e\x47\x6a\x4f\xf2\xd4\x6a\x1d\xb6\x63\x01\x0e\x16\xbe\x5b\xa3\x1e\xe0\xda\x3c\x45\x48\xa7\xf0\x9d\xbd\x83\xa7\xc1\x22\xd0\xa2\x64\x04\xf0\xc1\x40\x19\x10\xfa\x53\xf1\xe0\xe7\x11\xc9\x4f\x5f\xbf\x8c\xe1\xaf\x87\x91\xf7\x28\xc5\x8a\xf4\xef\xc2\xb2\xcd\xa3\x83\xef\xe4\x46\xc6\x87\xf8\xb1\x7c\xec\x6b\xa7\xd7\x41\xf4\x1f\xd3\xcb\xd9\x9d\x9e\x07\x9e\x43\x1f\xe3\xf3\x0f\x84\xc2\x42\x35\xa1\x4c\xb7\x22\x23\xd8\x71\xb7\xc6\xde\x99\x27\xfc\xc6\xd1\xd8\x15\x80\x01\xb9\xb0\xac\x52\xa9\x58\xd4\x23\x2d\x6b\x1f\xc0\x7f\x61\xc5\x7e\x67\xa4\x85\xec\xbe\xc0\xff\xa8\x9d\xba\xb6\x57\x30\x70\xa3\xae\x29\x6b\x87\x09\xb5\x92\xeb\x35\x42\x68\xee\xec\x0a\x08\xe3\x87\xb3\x97\x00\x35\x88\x1e\x89\x84\xd0\x41\x3a\x0b\x54\x17\x44\x19\x12\xc2\x6f\x72\x46\xb1\x06\x7d\xde\x39\x08\x3d\x60\x93\xa8\x41\x02\xb5\x28\xe9\xb7\x28\x27\x69\xac\x48\x14\x90\x83\x75\x4e\xd5\x00\xe3\x7f\xc1\x58\xf4\x0d\xcc\xad\x3b\x78\x66\x10\xda\x09\xa1\x0c\x9f\x98\x46\x9e\x99\x0b\xb1\xd5\x67\x01\x89\xbb\x5b\xea\xa0\x5a\xed\x19\x5e\xd3\xe9\x23\x96\xe3\xcc\x95\x92\x26\x10\x71\x78\x60\x43\xe9\xb4\xf5\x30\x5d\xa1\xc5\xf4\x17\xd4\x00\x66\xd4\x8d\xb6\x40\x56\xe0\xe9\x68\x3b\x19\x4d\x46\x41\x86\x42\x1e\x3b\x8a\xfb\x58\x54\x90\x92\x98\xd6\x46\xa1\xbd\xe0\x7a\xb0\x59\xba\x86\xfc\x38\xf4\x11\xad\x89\xae\x25\x79\xb5\x5d\xad\xe1\x71\xa5\x5b\x1d\xb6\x89\x1f\x30\x1e\x38\x31\xe8\x55\x66\x9d\x4c\xb9\x67\x89\xf4\xd0\xab\xd7\x38\x02\x04\xb2\xf5\x18\xaf\x81\x40\xd6\xeb\x0e\x58\x03\x8d\x45\xb1\x39\xfd\x18\xaf\xe0\xd4\x8e\x2a\x81\xea\x55\x4e\x96\x16\x8b\xf7\xce\xc4\xfa\x74\xab\xb6\x5c\x75\x08\x35\x44\xb2\xf0\xd1\xc8\x95\x4a\x8f\x49\x79\xf4\xd4\x91\xbc\x95\x1c\x00\xf8\xf6\x62\x8c\x01\x02\x4e\x5d\x75\x3e\x90\xb4\x2a\x99\x95\x4b\x0f\xd2\x6d\xb2\x58\x7a\x6f\x6b\x4d\xca\x22\xeb\xa5\xf7\x25\xe3\x0e\x15\x2b\x53\x10\x9c\x0c\xf3\x21\x4f\x59\x3b\x75\x8f\xa8\x30\x35\xa9\x28\x61\x09\xed\x98\xec\x0c\x94\x49\x4f\x61\xe9\x4c\x4d\x94\x12\xe3\x82\x2f\x88\x54\x2b\x15\xee\x94\x62\xf5\xc8\xc5\xe8\xf8\x22\x07\xfc\x98\x9e\xdc\x69\xe0\x40\xd9\x05\xc6\x0b\x56\x1c\x81\x7f\x49\x1a\x6a\xfd\x46\x2d\x50\x05\xc7\x40\xcc\x16\x81\xf7\xd3\xca\xe4\x42\xdf\x9b\x74\x82\xfa\xc7\xc2\x39\x70\x6f\x72\x28\xba\xfe\x5b\x6b\x8f\x69\xb4\x20\x39\x00\x06\x9b\xc0\x7e\x74\x8f\x6f\xc7\xc2\x88\x2f\xf8\xc1\x0b\xa1\x9c\x8b\x60\xe9\x87\x7f\x0b\x19\x9f\x27\x7c\x11\x67\xec\x4c\x78\x98\x43\x10\xf9\x9f\x30\x37\xcd\xe2\xe7\x0b\x8b\x8f\x32\x61\x91\x66\x8d\x42\x36\xab\xa2\xf7\x81\xa2\x09\x0e\xda\x70\xf1\x27\xf8\xee\x44\x57\x66\xd4\x50\x6b\x33\x53\x10\xec\x89\xb6\xd3\xfb\x29\x94\xc9\x69\xab\xab\x29\x78\x71\x0a\x9c\x1b\x1a\x19\xe4\x34\x06\x00\x93\x49\xdd\x4b\xa8\xbb\x3d\xd1\xb2\x06\x03\xf6\xfb\xb7\xc6\xee\x26\xd2\x35\x7e\x06\x4f\x5e\xd3\x52\x07\xf4\xea\xc2\xe2\x7f\x0c\xa4\xe8\xd8\x52\xef\x98\x26\x80\xd1\x61\xfe\x60\x77\x03\x31\x95\xcd\x2e\xf0\xfb\x20\xc6\x92\x99\x24\x39\xf5\x4b\x07\xbe\x04\x72\x69\x1a\x1d\xbb\x8f\xd8\x2a\x8c\x23\x23\x73\x1f\x15\x89\x26\xf5\x4d\x28\x2a\x67\x68\x6b\x01\x59\x39\x4d\x08\x19\xc8\x59\x8c\x43\xd9\x7a\x3b\x90\xc4\xe2\xf3\x70\x6d\x58\x2f\x5e\x34\x53\xce\x70\x4e\x49\xf1\x48\x04\x93\xc4\x3a\x09\x6b\xe8\xae\x63\xac\x94\x57\xdd\xaa\x52\x09\x52\xe8\x3b\x7a\x7a\x38\x98\x74\x38\x8e\xef\xe3\xa2\xc7\xe2\xfd\xfb\xd7\x32\x2c\x8f\x79\xdc\xe1\x18\xe0\xb6\x52\xe9\xdb\x87\x0f\x69\xf8\x7f\x95\xb3\x24\xee\xfd\xf7\xe0\xec\x63\x71\x63\xf4\x2f\x9d\xfa\x30\x3a\x48\x01\x06\xef\x70\xcc\x22\x34\xc9\x01\x3d\x9e\x05\xf6\xc0\x4e\x37\x4c\x70\xc0\x34\xb2\x6b\x03\xfb\x2b\x75\x8c\xd1\xd0\x9e\x07\x48\x5e\xce\xc8\x88\xcc\x1a\x08\x0b\xca\x62\x7a\x3c\xe1\xd6\x07\xfd\x76\xb8\xa1\x0c\x99\x9c\xe3\xdf\xa4\xc6\x21\x68\x98\x34\x4a\x5a\x16\x5a\x15\x8a\x47\x87\x50\x45\x8a\x30\x49\x8d\x63\x44\x4a\x6e\xac\xd1\xe6\x71\x2e\x3d\x43\x1c\x82\x42\x49\xd2\x4f\x90\x8e\xfc\x99\x16\x40\x17\x16\x95\x9e\x3e\x01\x76\x2a\xb5\x94\x1b\x0d\x3e\x40\x3f\xfc\x8a\x63\x36\xb2\xed\xa8\xb3\x23\xce\x43\x3f\xd6\x4b\x55\x43\xae\x2c\x40\x38\x49\xb9\xb0\xf8\x5f\x4e\x73\xca\x9b\x61\x9a\xa7\xcc\x8a\x60\xcf\xf9\x48\x43\x53\xcf\x33\xa3\xbc\x1c\x1d\x7c\x83\xfd\xfd\x41\x82\xcf\x2c\xfa\xe4\xc4\x39\x09\xb5\x7c\x86\x7b\x94\xd1\xc1\xf7\x72\x3d\x3a\x78\x6d\x35\x34\xec\x30\xe6\x72\x2e\xeb\x9e\x66\xd8\xc8\x42\x83\xec\xbb\x92\x66\xb2\x0e\x71\xf8\x80\x15\x10\x83\x29\xd5\x53\x7a\xac\x25\xf1\x32\xf4\x17\x1d\xa1\x0d\xfb\xeb\x06\x6a\x77\xdf\x29\xf1\x22\xe0\xf9\xbe\x38\x92\xa0\x22\xac\x08\xe7\x7d\x75\x31\xe7\x60\x92\x48\xd1\xc5\xd9\x90\x87\x67\x1d\x11\xcd\x85\x65\x34\x1a\x2a\x46\x9c\x0a\x3a\x0c\xb6\x32\xe2\x1d\xe0\x91\x04\x56\x12\xfa\x8a\xb8\x00\x8a\xe1\x82\x8f\x7b\x8b\x8a\xdb\x74\xcc\x6b\xbb\x52\xb0\x0b\x89\xaa\x35\x7a\x0e\x9b\x0e\x90\x2e\xf4\x7c\xaf\x39\xa2\xb1\xca\x9b\x3f\x63\x6f\x84\x8d\xfb\x8e\x3e\x60\x2c\x19\x17\x8d\x4d\xc1\x20\x80\x0c\x42\x51\x80\x2a\x81\x0d\x79\x1d\x87\xbf\x39\xff\xcf\xcd\xe5\x9b\xf3\xb3\x63\x71\xae\xb1\xd9\x12\x98\xdd\xe2\xeb\xaf\x63\x7e\x0b\x80\xe4\xa5\x27\x89\x9a\xb6\x05\xe0\x9b\x1f\x15\xd7\x57\x63\x81\xc8\x94\xc3\xf0\x8e\x72\x27\x3a\x8d\x8d\x4f\x4a\x61\x4f\x7d\x26\xa2\xb7\xd0\xa2\xaf\x0e\x9c\x12\x19\x07\xb4\x38\x3f\xc5\x8f\x9c\x96\x7e\x27\x6f\x24\x74\x1b\xaa\x6d\xc6\x02\x5d\x69\x1b\x54\x31\x73\x04\x81\xc5\xa9\xd0\x39\x5c\xd9\x81\x01\xe0\xe2\x4c\xda\x91\x60\xd8\x13\xb9\x13\xf4\xb9\x5a\xf4\x1a\x0e\x6a\x46\xd2\x20\x48\x4c\xea\x48\x43\x0d\x58\x7f\x34\x81\x36\x8a\xf1\xc0\xfd\x4d\xda\x58\x45\x15\x51\x35\x56\x72\x92\xfb\x22\x7e\x41\xe6\xe7\xb7\x51\x63\x7e\x8a\x0d\x19\xca\xa8\x78\xef\x7c\x31\x6c\x12\xd1\xf3\x24\x0b\xb6\x08\x2d\x93\x51\x56\xcf\xd1\xb6\x53\xb9\x0a\xcc\x5c\xa1\x26\xd0\x91\x83\x89\x1c\x86\x88\xfa\xa2\x98\xec\xb3\x31\xe1\x8d\x6c\x2d\x4c\x7d\xca\xd2\xcc\xcf\x4b\xeb\xd9\xcf\x1f\x67\x0e\xb5\x66\xa4\xdc\x0e\xd5\x47\x4b\x6d\xcd\x7b\x90\x5a\x91\x15\x6f\xdf\xbe\xc5\xd8\xb5\xc0\x3f\xa9\x5b\x31\x85\xa5\x4f\x1a\x7a\xfd\xea\xec\xd5\x51\xb0\x4d\x73\xf7\xe2\x98\xa3\x91\x56\x44\x14\xe3\xd4\x0c\x76\xf4\x02\x1e\x21\xa8\x15\x1d\x51\x14\xf5\x1c\xb7\x15\xdc\x98\x4a\x48\x01\xcc\x99\x18\x53\x2b\x96\x30\xa8\x4d\x69\xec\x53\x7d\x8e\x42\xf7\x55\x85\x41\xec\x1e\xaa\x78\xd2\xe0\x06\x66\xa6\x02\x8d\x8a\xb0\xe7\xbe\x1d\x22\xd1\xea\xdb\x14\x7d\xe6\x9a\x04\x7c\xc9\x95\xb3\x70\x0a\xe5\x05\xa4\x2f\x63\xbd\xc0\x39\x28\x17\x0a\xb3\x60\xb5\x5e\xbd\x6c\x17\x49\x1b\xda\x36\x19\xd0\x0d\xe5\xed\xb0\xfe\xc0\x8e\x93\x4f\x05\x96\x7a\x3d\x68\xdb\x87\x7c\x34\x88\xd6\x28\x6e\xea\xd8\xd9\xfb\xb2\xb2\xa0\x0d\x5a\x33\x15\x32\x3c\x7f\x33\xbc\xf7\x2f\xb7\xd2\x32\xec\x59\x12\x31\x4e\xe4\x95\x19\x60\xb0\x14\x6f\x12\xa2\x73\xf2\xc9\x55\xdf\xb3\x14\x69\x63\xf8\x44\x69\x45\x48\xee\xf7\x73\xc2\x23\x57\xa7\x3d\x5d\xa4\xc8\x47\xf9\x31\xed\x18\x53\xb9\x2f\x69\x12\x14\xd8\xc3\x9e\xb8\x56\xec\x48\x7a\x1b\x19\x07\xdc\x31\x3d\x4a\x8f\x91\xc3\x47\x07\xd1\x59\x34\xfc\x14\x60\x6c\xb0\x98\x3d\xef\xba\x87\xb9\x15\x9d\xc3\xfb\xb4\x2c\x68\x67\x97\x5d\x34\xe4\xbd\x30\x86\xac\xe6\x50\xe0\x6b\x6b\x80\xd0\x86\x11\x78\x78\xa4\x91\xf7\xe4\x43\xad\x92\x46\xd8\xe9\xd2\x3e\xfc\x37\xaa\xf5\x6b\xce\x1d\xce\xf8\x81\x1e\x02\x3a\xfe\x9a\x57\xf2\x94\x23\x31\xab\x60\xeb\x48\xbd\x5a\x5f\xbe\x71\x13\x90\x4a\xf2\x73\xe0\x98\x4b\x98\x4e\xe0\xa0\x03\x8f\xe7\xa3\xde\xbb\xe3\xa9\xc8\xff\x96\xa8\xe7\x48\xc7\x84\xa1\x0a\xff\xfb\x83\x4e\x9e\x8a\x84\xff\x7c\xbc\x1f\x0f\xde\x60\x7f\x42\xf2\x8e\x98\xe3\x96\xd2\x53\x57\x95\x36\xac\xe1\x9f\x7f\x7f\x51\xae\xfd\x48\x40\x3f\x3a\x08\x95\xc5\x96\x71\x4f\xbb\xbd\xeb\x7f\xca\x1c\xf4\x5a\x64\xbf\xfe\x38\xb3\x70\xe3\x3b\x3c\xee\x7c\xf2\x54\xb0\x9c\xf6\x47\x9f\x0b\xf2\x11\xe6\xe7\x7a\x32\x98\xad\xff\x74\xcf\x06\xad\x5b\x4c\xde\xd9\x46\x4e\x70\x55\x92\xf7\x89\x1c\x0c\x46\xf2\xd9\x77\x0c\xc8\x7d\x62\x85\x40\xe6\x83\x3b\xd5\x44\x60\x72\xb6\x15\x0a\x4d\x9e\x39\x20\x8b\xad\x56\x8f\x39\x18\xf0\x86\xf6\x6d\x1f\x95\x6d\xe4\x48\x4e\x39\x12\x45\x77\x1c\x65\xca\xe1\x80\x1d\x74\x17\x2b\x3d\x8b\xed\x7e\x39\x9c\x90\x8e\x41\xe7\x2d\xdd\x10\x81\xd9\xb8\x91\x04\xb4\x6c\x7b\xa7\x97\x1a\xd0\x22\x63\x3a\x15\x19\x47\xd5\x2f\xa1\x8b\x5d\xc4\xc3\x21\x52\xb0\xb6\x1d\x34\x77\x15\x0f\x86\x04\x88\x03\x48\xa1\xba\x05\x75\x00\xe7\xbd\xfe\x4b\x85\xb7\x2a\xab\x8a\x60\x40\x6b\x3e\xf0\xf2\x98\xb9\x76\xae\x24\x74\xa1\xf1\xaa\x09\xef\x23\xd1\x4d\x32\x04\xbc\xa6\x2b\xcf\x73\xe8\x79\xc2\x20\x16\xbd\x6f\xfb\xe3\xc3\x31\xe6\x02\xdf\xca\x91\xa3\x4f\x6a\x68\xfe\xfd\x4b\x2c\xbc\x69\x46\x8c\x3f\xc8\x40\x45\x8a\x01\xb1\x75\x34\x04\xfb\x9d\x77\x30\x1a\xa9\x60\x37\x58\x7c\xc2\xdb\x0f\xe3\x04\x48\x89\xdc\x2b\x6c\x4d\x0e\x0d\x9e\x7b\xfe\x9e\x84\xcb\x08\x2a\xd3\x0c\xa2\xc0\xe7\x01\xff\x6f\x9a\xed\xc2\xec\x21\xee\xfb\xba\x55\xde\xb7\xed\x54\xaf\x78\x2b\xf7\x6c\x0d\x1b\x8a\x48\x95\x8c\x97\x28\x6e\xed\xca\x33\x2f\xba\xd6\xdb\x2f\x38\x9e\x03\x16\x57\xb4\x28\xe7\xca\x86\xd8\xeb\xc0\xfe\x62\xad\x03\x67\x47\x29\x9d\x6f\x8e\xa9\x91\x06\xac\x2f\x20\xa8\x26\xbb\x2d\x36\x12\x7e\x19\xc1\x4e\xb7\xbb\xca\x6d\xa9\xf0\xa1\x9f\xd7\x4e\x42\x70\x6b\xa2\x3d\x3c\x49\xa1\x83\x0d\xc5\x85\x0c\x5b\xe4\x07\x41\x64\x0b\xa0\xa1\xe8\xf8\x02\x3f\xf2\x56\xaf\x35\xef\x7c\x14\xc1\x1b\xab\xa1\xb3\xb0\x03\xc0\x1a\x6b\x1a\xa0\x35\xac\x37\xe9\x68\xac\xc2\x7b\x7e\x48\x34\x18\x1b\x37\x48\x28\x10\x26\xbc\x83\x52\xeb\xa7\x73\x07\xcb\xde\x59\x77\xeb\xa7\xbc\x9c\x4f\x87\x36\x3f\xe2\x26\x86\x17\xad\xb6\x8c\x1a\xea\x5c\xf8\x56\x1a\xb7\xd3\x60\xc0\x21\x69\xca\x33\x0f\xe3\xef\x0b\x2c\xd4\x36\x0d\xae\xfa\xee\x66\x76\x9d\x7e\x02\x50\x1a\x37\x2b\x8c\x13\x91\x8f\x9d\xb5\x74\x17\x4d\x45\x14\x21\x9c\xea\xfb\x64\x90\xb1\x28\x4a\xd3\x28\x68\xdb\x36\x3d\x87\xf1\x0d\x3e\xc6\x86\x04\xbc\x25\xfa\x8f\x36\x4e\x83\x74\x0b\x15\x92\xc6\x37\x95\x72\x20\xf2\x54\x02\xa7\xe2\xee\x3a\x88\xe9\x8d\x07\x9f\x4d\xa5\x74\xd6\x4c\xbb\x8a\x76\x52\xd0\x69\x7b\xbc\x7e\x18\x73\x96\xd7\x0e\xf8\x86\x0c\x79\x6a\xf0\x14\xb8\x6b\x52\x3e\x2b\x9c\x43\x8c\x41\x3a\xeb\xc0\xa7\x79\xd1\x4f\x28\xf4\xb0\x50\xea\x70\x82\x9e\xa7\x55\xa9\x1e\x05\x5c\x1a\x66\x6f\x0b\x43\xe3\xd4\x94\xc4\x08\x5b\x8d\x9d\x93\x05\xcc\xc1\x3a\x64\x17\x4c\xf0\x5d\x95\x9e\xd3\x91\x16\xa2\xc7\x85\x14\x86\x62\xcd\x41\x48\xc6\x02\xf6\x9f\x1a\x3a\x1d\xec\xd9\x5a\xee\x57\x19\x83\xdc\x4f\x80\x06\xee\xb1\xfb\x2f\x02\x8c\xe2\x5f\xae\x08\x3a\x82\xc4\x70\xd1\xf9\x85\x4f\x80\xa4\x08\x95\xc9\x77\xc9\x01\x6d\x2c\xee\x8d\x12\xe4\xc8\x01\xc6\x56\xb6\xd9\xe6\xba\x2c\xab\x96\xcb\x61\x21\x28\x73\x3b\xba\x82\xcc\x18\xb3\xf9\x0d\xff\xe8\x82\x34\x51\xf0\xad\x5b\x33\xa7\xa9\xfb\xe0\x24\xec\xa5\x40\x35\x28\x40\xde\x4f\xd7\xb7\x0b\x2e\x65\xe2\xe8\xd4\xae\x8a\xf0\xcd\x94\xdb\x40\xd2\xfa\xd7\xce\xce\x75\x20\xe8\xf5\x77\x3f\xc3\x97\x04\xbd\x3f\x81\x2e\x6f\x5e\xbd\xba\x7e\x08\x83\x38\x76\xba\xa6\xc1\x2f\x52\x86\x45\xc3\x91\x24\x08\x60\xe8\xae\x15\x3a\x1f\xa0\x3e\x08\xc9\x90\x76\xd2\x3a\xec\x23\xc2\x12\x1d\x54\xa1\xc8\x12\x71\x8c\x95\x98\x60\xad\x5d\xd0\xee\xb4\xa7\x83\x98\x59\x7d\x29\x4c\xae\xc7\xb5\xe8\x22\x6e\xf3\xd5\xdf\x28\xf0\x74\x06\x07\xed\x35\x9f\x1a\x07\x8e\x71\xfa\xcd\xd2\xa9\x05\xf5\x33\x8b\x70\x8f\xa9\x90\xfd\x38\xfc\x44\x48\x59\x5c\x76\x05\xff\x2a\x69\xc3\x61\x2b\xc5\x25\xbf\xf6\x22\x63\x29\x18\x50\xfd\x1f\xbd\x9f\xe1\x1f\x60\x7c\xb6\x1b\x9a\xde\xfc\x4f\x73\x47\x73\x35\x3b\xc3\xfd\x38\x28\x76\x35\x43\x91\xd8\x85\xba\x0d\x9f\x50\x7c\x76\x7b\x19\x26\x96\x8f\xdf\xcc\x7c\x18\xfd\x2f\x00\x00\xff\xff\x2b\xb0\xc0\x1e\xbd\x28\x00\x00")

func vdltoolConfigVdlBytes() ([]byte, error) {
	return bindataRead(
		_vdltoolConfigVdl,
		"vdltool/config.vdl",
	)
}

func vdltoolConfigVdl() (*asset, error) {
	bytes, err := vdltoolConfigVdlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "vdltool/config.vdl", size: 0, mode: os.FileMode(420), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"math/math.vdl":           mathMathVdl,
	"math/vdl.config":         mathVdlConfig,
	"signature/signature.vdl": signatureSignatureVdl,
	"time/time.vdl":           timeTimeVdl,
	"time/vdl.config":         timeVdlConfig,
	"vdltool/config.vdl":      vdltoolConfigVdl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"math": &bintree{nil, map[string]*bintree{
		"math.vdl":   &bintree{mathMathVdl, map[string]*bintree{}},
		"vdl.config": &bintree{mathVdlConfig, map[string]*bintree{}},
	}},
	"signature": &bintree{nil, map[string]*bintree{
		"signature.vdl": &bintree{signatureSignatureVdl, map[string]*bintree{}},
	}},
	"time": &bintree{nil, map[string]*bintree{
		"time.vdl":   &bintree{timeTimeVdl, map[string]*bintree{}},
		"vdl.config": &bintree{timeVdlConfig, map[string]*bintree{}},
	}},
	"vdltool": &bintree{nil, map[string]*bintree{
		"config.vdl": &bintree{vdltoolConfigVdl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
