// Copyright 2016 The Vanadium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// Code generated by go-bindata.
// sources:
// v.io/v23/vdlroot/math/math.vdl
// v.io/v23/vdlroot/math/vdl.config
// v.io/v23/vdlroot/signature/signature.vdl
// v.io/v23/vdlroot/time/time.vdl
// v.io/v23/vdlroot/time/vdl.config
// v.io/v23/vdlroot/vdltool/config.vdl
// DO NOT EDIT!

package builtin_vdlroot

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _mathMathVdl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x8e\xb1\x4e\xc3\x30\x14\x45\xe7\xfa\x2b\xee\x0f\x34\xa5\x69\x15\xb1\x96\xd2\xa1\x12\x62\xa0\xc0\xfe\x92\xbc\x24\x16\x8e\x1d\xd9\xcf\x15\x11\xea\xbf\xe3\x64\x40\x19\x90\x10\xe3\xb1\x7c\xde\x3d\x9b\x0d\x8e\x6e\x18\xbd\x6e\x3b\x41\x7e\xb7\x2d\xf0\xda\x31\xde\xc9\x52\xad\x63\x8f\x43\x94\xce\xf9\x90\xe1\x60\x0c\xe6\x4f\x01\x9e\x03\xfb\x2b\xd7\x99\x4a\xf2\x5b\x60\xb8\x06\xd2\xe9\x80\xe0\xa2\xaf\x18\x95\xab\x19\x09\x5b\x77\x65\x6f\xb9\x46\x39\x82\xf0\x70\x79\x5c\x07\x19\x0d\x4f\x96\xd1\x15\xdb\x64\x4a\x47\x82\x8a\x2c\x4a\x46\xe3\xa2\xad\xa1\x6d\x7a\x64\x3c\x9d\x8f\xa7\xe7\xcb\x09\x8d\x36\x9c\x29\x35\x50\xf5\x41\x2d\xa3\x27\xe9\x94\x9a\x9b\xfb\xc1\xf0\x67\xb1\x9f\x86\x28\x4d\xce\x08\x1b\xfb\x92\xfd\x8c\x2e\xa4\xe5\x54\xb6\xcb\xd7\xa5\x96\x14\x4d\x06\x34\x0d\xf4\xd4\x6a\x4b\x7e\xc4\x40\x5e\x42\xa6\x64\x1c\x78\x71\x2f\x88\x8f\x95\xe0\x4b\xad\x5e\x26\xa5\x31\x8e\x64\x97\xab\xd5\x39\x79\x3f\x74\x5b\x46\x6c\xf3\xfb\x3f\x2b\x8a\xfd\x3f\x2a\xa6\x83\xbf\x65\x14\xfb\x65\x46\xa2\x9b\xfa\x0e\x00\x00\xff\xff\xce\xca\xd1\x3a\xbf\x01\x00\x00")

func mathMathVdlBytes() ([]byte, error) {
	return bindataRead(
		_mathMathVdl,
		"math/math.vdl",
	)
}

func mathMathVdl() (*asset, error) {
	bytes, err := mathMathVdlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "math/math.vdl", size: 0, mode: os.FileMode(420), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mathVdlConfig = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x8d\xc1\x6a\x85\x30\x10\x45\xd7\xe6\x2b\x2e\xae\x8b\xd2\x52\x4a\x11\xba\x72\xd1\x5d\x57\x42\xd7\x21\x8e\x31\x34\x66\x24\x46\x69\x11\xff\xbd\x13\x2d\xe5\xf1\x16\x99\xc0\x99\x33\xf7\xd6\x35\xba\x91\xb0\xf5\xbe\x32\x1c\x06\x67\x31\x38\x4f\x18\x38\x22\x09\x9f\x74\x1a\x31\x6b\xf3\xa5\x2d\xe1\x12\xd6\x48\x0b\x5c\xef\x58\x76\xce\x20\xc8\xdc\x08\xe9\x67\xa6\x45\x49\x9a\x0b\x20\x6d\x46\x58\x0a\x14\x75\xa2\x1e\x5e\x07\xbb\xca\x7d\xa5\xfe\x1a\xde\x72\x5d\x62\xf6\x55\x7b\x82\x5d\x15\xef\xdc\x40\xbe\xe2\xd3\x45\xea\xf8\xe3\xcc\xec\x72\xe4\x85\x8b\xb2\xe5\x69\xf6\xf4\xfd\xf2\x5c\x36\xc0\x9e\x57\x0d\x4a\xf3\x0f\x8f\x87\x5b\xeb\xf1\xe9\x55\xb4\x3b\x2b\xc3\x53\xcb\x43\xde\xa1\x7e\x03\x00\x00\xff\xff\x5f\x2c\xdb\x37\xfc\x00\x00\x00")

func mathVdlConfigBytes() ([]byte, error) {
	return bindataRead(
		_mathVdlConfig,
		"math/vdl.config",
	)
}

func mathVdlConfig() (*asset, error) {
	bytes, err := mathVdlConfigBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "math/vdl.config", size: 0, mode: os.FileMode(420), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _signatureSignatureVdl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x53\x41\x8f\xd3\x3c\x14\x3c\xd7\xbf\x62\x8e\xdf\x77\x20\x0b\x48\x9c\x51\xd9\xed\xa1\x12\x74\x2b\xb5\x70\x59\xed\xc1\x89\x5f\x12\xb3\x89\x1d\xd9\xce\x4a\x11\xda\xff\xce\xb3\x63\xd2\xd2\xa2\x15\xa2\x27\xfb\x79\x66\xde\xcc\xb4\xbd\xb9\xc1\xad\x1d\x26\xa7\x9b\x36\xe0\xfd\xdb\x77\x1f\x70\x6c\x09\xdf\xa4\x91\x4a\x8f\x3d\xd6\x63\x68\xad\xf3\x05\xd6\x5d\x87\x04\xf2\x70\xe4\xc9\x3d\x93\x2a\x04\x93\xbf\x7a\x82\xad\x11\x5a\xed\xe1\xed\xe8\x2a\x42\x65\x15\x81\xaf\x8d\x7d\x26\x67\x48\xa1\x9c\x20\xf1\xe9\x70\xf7\xc6\x87\xa9\xa3\xc8\xea\x74\x45\x86\x99\xa1\x95\x01\x95\x34\x28\x09\xb5\x1d\x8d\x82\x36\x3c\x24\x7c\xde\xde\x6e\x76\x87\x0d\x6a\xdd\x51\x21\x22\x65\x2f\xab\x27\xd9\x10\xbc\x6e\x8c\x0c\xa3\x23\x28\xaa\xb5\x21\x8f\x30\x0d\x14\x5d\x0d\xd1\x98\x09\xda\x34\xac\x12\xc8\xd5\x92\xcd\x48\xd6\xec\x89\x43\xa8\x13\xd3\x17\x62\xb8\x54\x4b\x3b\xb6\x0b\x4d\x91\xaf\x9c\x2e\xa3\x7a\x7b\xbe\x93\xa3\xb2\xdb\x45\xbe\x10\x71\xf9\x19\xcf\x07\x37\x56\x01\x3f\xc4\x6a\x27\x7b\x02\x7f\x78\xc2\x8e\xc4\x6a\xff\xd4\xec\x65\x68\x97\xfb\x9d\xad\x70\xfe\xbe\xe9\x4b\x52\x1e\x78\x78\x4c\x27\x80\xfd\xec\x2c\xfc\x40\x95\x96\x1d\xac\x53\x14\x81\x85\x58\x7d\x49\x71\x3c\x23\xe7\x53\x44\xde\xc7\xe7\xb9\xea\x9c\xd6\xf0\xfe\x42\xbc\xa4\x5c\xb3\xe2\xeb\x99\x28\x62\x14\xa9\xab\x70\x33\xf9\x9f\x83\xcd\x0e\xb2\xd3\xbf\xac\x35\x67\xc8\x06\x32\xf7\xda\x01\xae\x76\x9e\x26\x5b\xb3\x76\x8d\x8f\x93\x87\x47\x3e\x21\x7d\xbb\xc3\x18\x20\x5d\x33\xf6\xfc\x33\xf1\x62\x75\x3f\x86\x0c\x5a\x30\x3c\xba\x00\x6d\xcd\x21\x38\x92\x3d\xf0\x31\x62\x4e\x42\x7e\x1e\xff\x67\x87\xa0\xad\x91\xdd\xff\x49\x30\x83\x17\x6c\x16\xfc\x03\xf8\x28\x67\x7f\x71\xbb\x34\x13\x4e\x2d\x05\x7e\xc9\xbd\x45\x99\xd7\x4a\xe3\xab\x69\x3a\x5a\x0c\xe7\xca\x22\xed\xa2\xaf\xdf\xaa\xfa\x75\x39\x46\x70\x64\xd8\xf2\x3b\x31\x98\x37\xa6\x51\xfa\x47\x9f\xab\xbe\x88\x9f\x01\x00\x00\xff\xff\x7a\xf5\x7c\x0e\x29\x04\x00\x00")

func signatureSignatureVdlBytes() ([]byte, error) {
	return bindataRead(
		_signatureSignatureVdl,
		"signature/signature.vdl",
	)
}

func signatureSignatureVdl() (*asset, error) {
	bytes, err := signatureSignatureVdlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "signature/signature.vdl", size: 0, mode: os.FileMode(420), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _timeTimeVdl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x58\x4d\x73\x1b\xb9\x11\x3d\x4b\xbf\x02\xa5\x1c\xd6\xae\xd0\x24\xa5\x6c\x36\x91\xf7\xe4\xc8\x1f\x71\xca\xb1\x5d\x91\x9c\x54\xe5\xc2\x02\x67\x40\x0e\x4a\x18\x60\x02\x60\x48\xd1\xa9\xfc\xf7\xbc\x6e\x00\x33\x43\x5a\x76\x14\x97\xf6\x40\x12\xdd\xe8\x8f\xf7\x5e\x37\x76\xb1\x10\x37\xae\x3b\x78\xbd\x6d\xa2\xb8\x5a\x5e\xfe\x5e\xdc\x35\x4a\xfc\x5d\x5a\x59\xeb\xbe\x15\xaf\xfa\xd8\x38\x1f\xe6\xe2\x95\x31\x82\x0f\x05\xe1\x55\x50\x7e\xa7\xea\xf9\x39\x8c\xbf\x04\x25\xdc\x46\xc4\x46\x07\x11\x5c\xef\x2b\x25\x2a\x57\x2b\x81\x8f\x5b\xb7\x53\xde\xaa\x5a\xac\x0f\x42\x8a\x3f\xdd\xbe\x7e\x11\xe2\xc1\x28\xb2\x32\xba\x52\x16\x96\xb1\x91\x51\x54\xd2\x8a\xb5\x12\x1b\xd7\xdb\x5a\x68\x8b\x2f\x95\xf8\xf0\xfe\xe6\xcd\xc7\xdb\x37\x62\xa3\x8d\x9a\x9f\x93\xc9\x67\x59\xdd\xcb\x2d\x4c\x74\xab\x44\xad\x36\xda\x2a\xdc\x18\xa5\xad\xa5\xaf\x11\x53\x47\x61\xd9\x28\xa3\x76\x36\x50\x48\x72\x1d\x9c\xe9\xa3\x12\x38\x82\xdf\x0d\x7e\xd9\x25\xf3\x40\x91\x93\x4f\x4a\xf5\xd4\xb2\x56\xa1\xf2\x7a\x4d\x61\x2b\xe3\xf6\x42\x7a\x3a\xf3\xaf\x5e\x7b\x7c\x15\x9d\xe8\xbc\xdb\x69\x24\xb8\xc7\x17\xe4\xa3\x72\x6d\x07\xd3\xb5\x36\x3a\x1e\x60\x13\xf7\x4a\x59\x51\xeb\xcd\x46\x79\x78\xa5\xf3\x5b\x2f\xdb\x56\xdb\xad\x50\x76\xa7\xbd\xb3\x2d\xbe\x47\x49\xc5\x3b\x65\x95\x97\x11\x7e\xb9\x64\x1b\xe7\xc9\xe1\x68\x3a\x3d\x2e\xe2\xa1\xd3\x95\x34\xe6\x30\x44\x20\xfb\xe8\x5a\x5c\x5d\xc1\xdc\xa2\xd4\x81\xe3\xd7\x16\x41\x5a\x4e\x96\xbc\x9d\xa4\x37\xa3\x5b\x44\xd0\x6d\x67\x94\x17\xba\xd6\xd9\x43\x1f\x50\xdb\xf9\x79\x37\x29\x32\x57\xfd\x6f\xc5\x9c\xc2\xaf\x11\x6b\xe0\x72\x72\x15\xa9\xc7\x92\xf3\x47\x3b\x39\x8d\xe8\x10\x23\x12\xbb\x75\x6d\x46\x05\x01\x21\xf4\x2a\xbc\x24\x67\x97\xcf\xb9\xe2\x4a\xfa\xd8\xfc\x04\x1c\xc1\x86\x4e\x79\x97\x82\x23\x7f\xd6\x45\x84\xbc\xed\x8d\xf4\x0c\x2f\xfc\x6b\x62\xec\x5e\x2e\x16\xca\xce\xf7\xfa\x5e\x77\xaa\xd6\x72\xee\xfc\x76\x41\x9f\x16\x1f\x94\xec\x56\x41\xa1\x00\xf5\x53\x8e\xdf\x38\xe7\x6b\x6d\x29\xd8\xd5\x17\xab\xa9\x68\xd2\xac\xee\x28\xdb\x27\x58\xbf\xb7\x11\x80\xe6\x58\x61\xf5\x0a\xd5\xd7\xd5\x60\x7c\xc5\xc9\x01\x2c\x04\x98\xb1\x87\x05\xa1\x81\x0b\xcf\xb8\xa5\x52\xa2\x93\x8a\xbe\x0f\x4f\xca\x72\xb9\x7a\x76\x40\xd5\x9e\x3f\xe5\xec\x5f\x7a\xa3\xa5\x5d\x95\x0b\x9e\x62\xf2\x0e\x15\x77\xfe\xff\xb5\xfa\xec\x9d\x51\x1d\xc0\xb3\x7a\xd4\xbe\xf0\xab\x75\x21\x0a\xe0\xcd\x79\x54\x02\x64\x6f\x1c\xb8\x4f\xad\xde\x37\x0a\xf8\xf0\xc4\xa9\x01\xa4\x89\xdd\x32\xe1\xaa\xc7\x67\x02\x91\xae\xee\x03\x79\x0b\xda\x56\xc4\x66\xa1\x3a\x57\x35\xe2\x19\xfd\xc0\x06\xcf\x67\x02\xb5\x65\x2b\x82\xe8\x82\x9d\x50\xb9\xa5\xe8\x80\x35\x5d\x11\x9c\xc4\x34\xb7\x67\xe5\x43\xb2\x07\x64\xef\x8a\x33\xd1\xca\x2e\x10\x81\x7a\xcf\x6c\x43\x78\x0d\xfa\xb7\xa7\xb6\x56\xc6\x21\x96\x19\x45\x5f\x35\x40\x1e\x7e\x3c\xe2\xd8\x8c\xc9\x01\x33\xb7\x0f\xa0\x14\x35\x3a\x51\x4d\x84\x7e\x1d\xbd\xac\x18\xe6\x14\x19\xb1\xa6\x4f\xa4\xc2\x3d\x4c\x4d\x46\xc2\xcd\x34\x2e\xba\x67\xa4\x7d\xeb\x10\x41\x50\x2d\xaa\x58\xbe\x51\x92\xc0\xb4\xe9\x0d\x12\xb8\x99\x68\x40\x56\x21\x72\x38\x14\x89\x43\x3b\x4a\x9b\x91\x3a\xa5\x2f\x74\x9a\x18\x2b\xd7\x10\xee\xcc\xdb\xa2\x94\x3f\xe6\xc5\xed\xa7\xd5\x1f\x7f\x59\x5e\xfe\xcf\x83\xb7\x87\x10\x55\xbb\x1a\xd4\x85\xb8\x33\x56\x8f\xa4\x65\x54\xed\xce\x41\xc9\x78\x1c\xd0\xa1\xbd\x8e\x8d\xe8\xa9\xe0\x68\x8d\x75\x89\xf1\x50\x42\x55\x69\x4a\x79\x10\xf4\x5c\xb5\xc1\x27\xb2\x02\x2e\x28\xab\x52\x67\x14\x67\x43\x95\x24\x78\x6c\xc0\x67\x80\x64\xa3\x1f\x70\x8e\x51\x45\x48\xc0\xe1\xaf\xca\xbb\xc7\x02\x24\x47\x09\x7d\xcb\xe5\xf2\xf2\x05\xff\xdd\x2d\x97\x2f\xf9\x6f\xbe\x2c\xff\xfe\xc9\x6e\x34\x61\x40\xb1\x11\xf9\xea\x0a\x5f\xc4\xc0\x97\xa1\x1f\xbf\xb2\xe7\xa1\x3b\xbe\xa7\x11\x66\x19\xeb\x0f\x40\x8d\xf8\x79\xb9\x14\xa4\x00\xa2\x3a\x54\x34\x10\xe1\x8e\x94\x4f\xa4\x3a\x04\xee\xe4\x45\x00\x1e\x30\xa4\x2e\x66\x18\x1c\xa1\xf7\x04\x2e\x9e\xaf\xd6\x09\x33\x1e\x16\x51\xae\x0d\x17\xc9\xaa\x4a\x85\x20\xfd\x81\xdc\x11\x28\x35\xe9\x1b\x72\x4d\x72\x3c\x0e\x49\xcd\x52\x0f\x24\x6b\xe2\x11\x5a\xf0\xce\x71\x57\xe6\x54\x9e\x99\x58\xf7\x11\x98\xdf\xcb\x43\x28\xd3\xfb\xcb\xdd\x8d\x00\x55\x06\x37\x05\x15\x5b\x67\xa4\xdd\x32\x1e\xba\xfb\x2d\xf3\x74\xf1\x9b\x2c\xa0\xdf\xb9\x8a\x47\x9b\x4d\x92\x2b\x2e\x7a\xab\x1f\xf8\xea\x8b\x74\x2d\xc3\x62\x6c\x4a\x5a\x0b\xd0\xf2\x48\xde\xb8\x60\x97\x34\x66\x58\x66\x1a\x54\x33\x7d\x75\xfd\x87\x65\x69\x50\xe6\x6a\xcc\x3d\x4f\x0d\xc7\xb5\xd8\x47\xd0\x3b\x06\x8f\x24\x5f\x59\x0f\x04\xc1\xc0\x1f\x66\x59\x8b\x34\x00\x1a\xec\x4f\x48\x5f\xec\xa4\xd1\x69\x2e\x72\x29\xc1\x52\x1a\xd4\xc4\x78\x74\x55\xc8\x2e\x91\x6c\xe0\xf9\x0f\x69\x82\xc9\xf4\x90\x48\x02\xf6\xab\x14\xd3\xeb\x0c\x5f\xe6\x4d\xf9\xf0\x0d\x34\x0d\xb4\x0b\x51\x4f\xb0\x9e\xd6\x91\xb8\x77\x89\x50\xa1\x30\x6a\xc6\xb5\x23\x67\x3f\x62\x15\xdf\x3f\xdc\x16\xa2\xef\x01\xc6\x7f\x9f\x9f\xc1\xec\x36\x43\xef\x24\x84\x82\xc8\x8c\x84\x12\x49\xe6\x95\x47\xfb\x13\x41\x5d\xbf\x6d\xcc\x81\x3d\xfd\x76\xf1\xe2\xea\x7a\x29\xb0\x41\x19\xba\x85\x7a\x04\x8d\x45\xff\xb7\xa5\x6d\x9c\x5b\x40\xd8\x2c\x53\xb4\xa0\xe4\xe5\xa2\x4f\x33\x1c\x8c\x38\xbb\x1d\x2e\x8e\xbf\xfc\xcc\x7e\x3f\x52\x4a\xa7\xf1\x6d\xb2\x0a\xa7\x15\xb1\x70\x82\x58\x32\x16\x00\xe7\x49\x83\x52\xd8\x7f\xed\x43\x64\x77\x80\x44\x4e\x0a\xbd\x37\x50\xf7\x5d\xc9\xa7\x54\x19\x89\x5c\x5f\x5f\xcf\xf2\x7f\x73\xb2\x62\xcb\xf7\x16\x1c\xf4\x2d\x10\xf2\x15\xe1\x03\x1e\xed\x6c\x94\x7d\x70\x33\x84\x94\xa6\xb3\x6a\x08\xc8\xab\x23\x11\x63\xa0\x2f\x8f\x0a\x4f\x7a\x8e\x1b\x39\x4b\xc4\xf9\x96\xd6\x8b\xc1\xe9\xc4\x15\xa1\x11\x82\x37\x4b\xed\xd1\x5b\x4b\x99\xb3\x15\xbb\x6b\x91\x1f\xe0\x1a\x41\x9f\xec\x99\xa7\x29\xb2\x5d\x22\x83\x54\x43\xd4\xf4\x77\x57\xe7\xff\x61\xec\xfd\x03\x7b\xef\x6b\x25\x6b\x03\xa6\x9d\x16\xb7\x2e\xdf\xf3\xf0\xc5\x45\x9d\x4a\x01\xcd\x68\xda\x7b\xc5\x87\x86\x2f\x81\x03\x72\xa8\x1e\x3a\x55\xa5\xed\x51\xd0\x76\x14\x9a\x22\xd1\x53\x97\x19\x40\x24\x51\xb6\xc6\x61\x5e\x58\x09\x49\x69\xce\x57\x46\x23\x0a\x1e\x78\x0e\x89\x13\x23\x87\x60\x92\x90\x4e\x62\x09\xf2\xc0\x05\xc2\x4e\x4e\x93\x66\xe3\x5d\x2b\x2e\xac\xdb\x5f\xa4\xf9\x8d\x7c\xea\x22\xda\x83\x13\xb8\x25\xb4\xe0\xdd\xe3\x73\x28\xe9\x03\x85\xf0\x48\x06\xc7\x89\xa6\x7c\x38\xba\x69\x4a\x59\xf5\x3e\x59\x72\x0d\xb9\x36\xf4\xdb\x0e\xeb\xd1\x2c\x29\x4b\x5e\x1e\xd0\x9f\xa3\x1d\x69\x92\x9a\x3c\x9a\x99\x69\xde\xb7\xea\x57\xaa\x76\x82\x2a\x0b\x12\x52\x83\xb9\xc4\xca\x72\xdc\xa6\xd9\x71\xd3\x1a\xc9\xa9\xd0\x43\x87\x35\xea\xcf\x6e\xaf\x28\x43\x76\x46\x45\xa1\x89\x32\xb9\x7c\x78\xeb\x70\xcc\x21\x61\xb4\x73\x91\xe4\x1a\x9a\xc7\xcb\x92\x08\xf7\x6a\x4f\xe9\x90\x43\x4d\xa4\xc3\xcf\x69\x95\xf1\x6e\xdd\x9f\xa6\x76\x14\x4f\x5a\xe8\x8a\xf8\x8c\x5d\x4a\xf5\xe7\x8d\x90\xb0\x50\x96\x29\x75\x32\xe7\xd9\x40\x47\x7e\x53\xd0\x67\xa0\x3e\x37\x79\xdf\xe0\x55\xc9\x87\xa1\x74\x8a\x14\xa4\x3c\xe4\x06\x2f\xc3\x1a\x32\x42\xba\xb8\x73\x7b\x7b\xea\xf2\x68\x54\x1e\xbf\xb8\x44\xed\x54\x1a\x11\x55\xda\x68\x09\xaf\x58\x05\x3a\xb9\xcd\xbf\x43\xb4\x0f\x69\x9a\xd1\xd1\x34\xbb\x33\x56\xe4\x49\x45\x78\x24\xe5\x2d\xad\x84\x9e\x5e\x4d\xf4\xa8\x02\x05\x26\x7a\x59\x8c\xb8\xf0\x85\x35\xd9\x36\xb1\x05\x75\x84\x32\xf1\xa4\x42\xee\x2d\x09\x3c\x5e\xe5\xd2\x6b\x97\x6a\xf0\x4d\x94\x99\xb0\x01\x4a\x66\xd2\xbb\x37\xbf\x89\xf9\xf4\xa3\x8d\x6f\xe5\x7d\xda\x43\xf8\xad\x98\x97\x61\xe4\xca\xc4\xc7\x1b\xa9\xe2\x47\x39\xc6\xa3\x77\xc0\x67\xa9\xe3\x91\xc6\x8c\x1b\x70\xc3\x88\x48\x6f\xdb\xd3\x32\xd3\x09\x04\x33\x5a\x51\xf1\xe8\x52\xde\x82\x87\x76\xa6\x8d\x05\x00\x80\xdc\x0d\xef\xe7\xf4\xaa\x56\x9e\x94\xb9\x4c\x31\x06\x56\xfa\x3f\x07\x53\x88\x8c\x3b\xf6\x04\x8f\x69\x4c\x1e\x05\x7d\x34\x2a\xdf\xe2\xe8\x47\xe6\xe0\xe3\x6a\xf9\x5d\xa0\x9f\x9f\x15\xd3\x61\xfc\xf3\x60\x73\xc3\x3d\x1a\xac\xac\x64\x46\xad\x57\x19\x0c\xc5\x73\x5a\x2b\x25\x56\x27\xb7\x75\x7d\xc8\xdb\x0b\x43\x90\xf4\xed\x2c\x2d\x36\x54\xcd\xd1\xe1\xc9\x32\x44\x33\x60\xbc\x6e\xed\x9c\xc1\x1c\xf8\x6f\x00\x00\x00\xff\xff\xfb\x99\xa5\xf7\x35\x12\x00\x00")

func timeTimeVdlBytes() ([]byte, error) {
	return bindataRead(
		_timeTimeVdl,
		"time/time.vdl",
	)
}

func timeTimeVdl() (*asset, error) {
	bytes, err := timeTimeVdlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "time/time.vdl", size: 0, mode: os.FileMode(420), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _timeVdlConfig = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x53\x51\xcb\x9b\x30\x14\x7d\xd6\x5f\x71\xf1\x69\x83\x8f\x08\xdb\x9b\xb0\x87\x31\xe1\xe3\x1b\xc3\x0e\x2a\xdb\xf3\xc5\x44\x9b\x4d\x73\x25\x46\xcb\x28\xfd\xef\xcb\x8d\x5a\xda\xae\x6e\x0c\xbe\x42\xa3\xc9\x3d\x39\xe7\x78\x6e\x92\xa6\x50\x1e\x14\x4c\xb2\x15\x15\x99\x5a\x37\x50\xeb\x56\x41\x4d\x16\x9c\x5f\x1f\x1c\x1a\x89\x56\x82\xd3\x9d\x82\x1e\xab\x9f\xd8\x28\x98\x91\xa3\x55\x03\x68\xa9\xa9\x43\xa7\x2b\x30\x7e\x9c\x54\xec\x09\xdd\xaf\x9e\x2b\x06\x14\x56\x07\x68\x94\x51\x16\x9d\x92\xd0\xa2\x69\x46\xbf\x5f\xc4\x8b\xd4\x07\xd6\x75\x44\xad\xf8\x14\x16\x4e\x71\xf4\x4c\x19\xf8\x47\xf4\x5d\x5b\x55\x52\x11\x38\x4b\xe6\x9b\x97\x23\x4f\xff\x2d\xff\x12\x24\x82\x27\x91\x8f\x9e\x5c\x93\x01\x3d\x80\x55\xbd\xf7\xa4\x0c\x8b\xe1\x00\xcf\x74\x0b\x11\x4c\x90\xac\xb3\x64\x61\x8c\x98\x3e\x03\xff\x4b\x6e\xd0\xc9\x53\xa8\xbe\x74\x3d\x59\xc7\xf2\xa7\xaf\xe8\x0e\xd9\x8c\x4a\x9e\xa0\xc0\x4e\xad\xb3\xf3\x39\x80\xe7\xf1\x0f\x8b\x25\x67\xb7\x6d\x8f\xcb\xb3\x35\x7e\xdb\xb2\x15\x6a\xaf\x66\x89\xe3\xcd\x15\xca\x56\x9b\x47\xd6\x18\x3c\xf7\x73\x49\x70\x81\xce\x36\xaf\x37\x6f\xa6\xb8\xd6\xb7\x2c\x4f\x42\x53\x3a\xbd\x7b\x9f\xfa\x23\x60\x89\x5c\xfa\x8f\x6f\xe0\x81\xff\x9f\x71\xc2\xbf\x1f\x91\xeb\x0e\x27\x64\x1b\xf1\x83\x24\x8a\x07\xbd\x5d\xf3\xbe\x07\xf9\xc3\x7a\x49\x7b\x95\xdd\x1f\x75\xed\xfe\x43\xb7\xd8\x33\xc5\x8b\x0f\xd4\x4e\xd8\xde\xe9\x15\x7b\xd6\xb8\xe1\xe7\x7b\xb8\xcb\x77\x6f\x1c\x49\x79\x7c\x9b\xc1\x47\x29\x2f\x1d\xe0\xae\x0d\x63\xcf\x09\x86\x8b\xc9\x11\x0c\x95\xd5\xbd\x13\xf1\x39\xfe\x1d\x00\x00\xff\xff\x9f\x4d\xa5\xfd\xc2\x03\x00\x00")

func timeVdlConfigBytes() ([]byte, error) {
	return bindataRead(
		_timeVdlConfig,
		"time/vdl.config",
	)
}

func timeVdlConfig() (*asset, error) {
	bytes, err := timeVdlConfigBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "time/vdl.config", size: 0, mode: os.FileMode(420), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _vdltoolConfigVdl = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xe4\x59\xdf\x6f\x1c\xb7\x11\x7e\xb6\xfe\x0a\x42\x28\x50\x27\xb8\xdc\xb6\x29\xfa\xd2\x3e\xb9\x92\x2d\x28\x30\x14\xc3\x92\x93\x02\x46\x1e\x78\xbb\xbc\x3b\x5a\x7b\xcb\x0d\xc9\xbd\xd3\xa1\xc8\xff\xde\x6f\x66\xc8\x5d\xee\x49\xb6\x91\x36\x4f\xb6\x1f\x84\xbd\x5d\x72\x7e\x7e\xf3\xcd\x90\xae\x2a\x75\xe1\xfa\xa3\xb7\x9b\x6d\x54\xdf\xff\xe5\xaf\x7f\x57\x77\x5b\xa3\x7e\xd2\x9d\x6e\xec\xb0\x53\x2f\x86\xb8\x75\x3e\x2c\xd5\x8b\xb6\x55\xbc\x28\x28\x6f\x82\xf1\x7b\xd3\x2c\xcf\xb0\xf9\x5d\x30\xca\xad\x55\xdc\xda\xa0\x82\x1b\x7c\x6d\x54\xed\x1a\xa3\xf0\x73\xe3\xf6\xc6\x77\xa6\x51\xab\xa3\xd2\xea\x5f\xb7\x97\xdf\x85\x78\x6c\x0d\xed\x6a\x6d\x6d\x3a\xec\x8c\x5b\x1d\x55\xad\x3b\xb5\x32\x6a\xed\x86\xae\x51\xb6\xc3\x4b\xa3\x5e\x5f\x5f\xbc\xbc\xb9\x7d\xa9\xd6\xb6\x35\xcb\x33\xda\xf2\x46\xd7\xf7\x7a\x63\xd4\xbe\x69\xa3\x73\xad\x6a\xcc\xda\x76\x26\xa8\x78\xec\xf1\x77\x08\xa2\x87\xf6\x62\x85\xe2\x25\x36\x06\xd3\xae\x17\x90\x59\xb7\x43\x63\xbb\x0d\x7d\x26\x59\x6b\xe7\x77\x50\x0c\xbb\xb1\x76\x59\xbb\x6e\x6d\x37\xac\x2a\x2c\xcf\xfa\xb9\x1e\xd6\x7d\x21\x2b\x42\x6f\x6a\xbb\xb6\xa4\x74\x4b\x6e\xd2\xcb\xc1\xeb\x68\x5d\x47\x22\x67\xca\x97\x0a\x81\x44\x10\x2c\x5b\x68\x6b\xdd\xb6\x47\x12\xe5\x4d\x4f\xf1\xeb\xa2\x61\x5f\x5d\x4f\xbb\x75\xab\xce\x27\x4b\xce\xc5\x14\xfa\x6c\x74\xbd\x65\x91\x29\xb4\xc9\x38\x08\x7f\x89\x2f\x24\xef\xc4\x01\x65\x77\x3d\x82\x6b\x63\x7b\xa4\x47\xe7\x63\x90\xdc\x14\x3b\x97\x9b\xa5\x3a\xba\x41\xed\xf4\x11\xe6\xac\x0d\x0c\x77\x49\x14\x5b\x9e\xbc\x4d\x99\x78\x64\x98\x3a\x58\x60\x62\x88\xca\x3c\x9c\xa8\xa2\x08\x67\x21\x67\x94\x97\x31\x70\xd1\x0f\x75\x54\xff\x39\x7b\x06\x35\x57\xa6\x7b\xad\xbb\xcd\x00\x6b\x18\x4b\xd1\xdb\x3a\x4a\x48\x83\xe1\xa4\x30\x80\x36\xa6\x33\x29\xb6\x6d\x5e\x0e\xeb\xaf\xd7\xe3\x4a\x1b\x58\x9e\xd9\xf5\xf1\xb8\x50\x08\xb0\x0a\x43\x4f\x76\x20\xb4\xe3\x16\xa5\xbd\xa1\x6f\xee\x80\xb7\xd1\x11\xd0\x92\x64\x02\xf0\xb3\x99\x31\x10\xfa\xbe\x78\xf1\xcb\x19\xcb\xcf\x3f\xbf\x4b\xe9\xaf\xe7\x99\x0f\x24\xc5\xa9\xfc\xef\xca\x89\xcf\x67\xcf\x7e\xd0\x7b\x9d\x5e\xd2\x63\xf9\x3a\xd4\xde\xf6\x51\x4d\x8f\xf9\xe3\xed\xc1\xae\xa3\xec\xe1\xc7\xf4\xfe\x37\x46\x61\x61\x9a\x32\xdd\xb0\x63\x27\x24\x70\xf7\x9d\x3b\x74\x9f\x88\x9b\x64\xe3\x54\x00\x25\xe4\xca\x89\x49\xa5\x61\xc9\x8e\xac\xd6\x3d\x82\xff\xc6\xa9\xa7\x83\x91\x15\xb9\xa7\x12\xff\xb3\xf5\xe6\xce\xdd\x60\xe1\xde\xdc\x71\xd5\xce\x0b\x6a\xa7\xfb\x9e\x20\xb4\xf6\x6e\x07\xc2\xf8\xe9\xf2\x35\xa0\x86\xec\xb1\x48\xa4\x0e\xe5\xac\xc8\x5c\x88\xea\x58\x88\x7c\x19\x2b\x4a\x2c\x98\xea\xce\x23\xf5\xc0\x26\x53\x83\x06\xb5\x18\x1d\x8e\x24\x27\x5b\x6c\x58\x14\xc8\xc1\x79\x6f\x6a\xc0\xf8\x9f\x58\x4b\xb1\xc1\xde\x7a\xc0\xbb\x8e\xa0\x9d\x11\x2a\xf0\x49\x65\x14\x84\xb9\x08\x5b\x53\x15\xb0\xb8\xc3\xd6\x46\xd3\xda\x20\xf0\xaa\xaa\x8f\x78\x4e\x3b\x77\x46\x77\x91\x89\x23\x80\x0d\xb5\xb7\x2e\x60\xbb\x21\x8f\xf9\x2f\xcc\x00\x33\xda\xc6\x3a\x90\x15\x22\x9d\x7c\x67\xa7\xd9\x29\x54\x28\xea\xd8\x73\xde\x17\x6a\x85\x92\xa4\xb2\xee\x0c\xf9\x8b\xd0\xc3\x67\xed\x1b\x8e\xe3\x3c\x46\xac\x93\x42\xcb\xf2\x6a\xb7\xeb\xf1\x7a\x65\x5b\x1b\x8f\x99\x1f\x28\x1f\xb4\x31\xda\xdd\xc8\x3a\x23\xe5\x5e\x66\xd2\xa3\xa8\xde\xd1\x0a\x08\x14\xef\x29\x5f\x33\x81\x62\xd7\x01\xac\x41\xce\x92\xd8\xb1\xfc\x04\xaf\x08\xea\xc0\x9d\xc0\x4c\x26\x67\x4f\x0b\xe5\x53\x30\xa9\x3f\xdd\x9b\xa3\x74\x1d\x46\x0d\x93\x2c\x1e\x3b\xbd\x33\xf9\x35\x1b\x4f\x91\x7a\xae\xef\xb5\x24\x00\xbf\xbe\x59\x50\x82\xc0\xa9\xbb\x21\x44\x96\xb6\xca\x6e\x8d\xad\x87\xe8\x36\x7b\xac\x43\x70\xb5\x65\x63\x89\xf5\xf2\xf7\x92\x71\xe7\x86\x95\x25\x88\x20\x63\x3f\xea\x54\xac\x33\x0f\x84\x8a\xae\x66\x13\x35\x54\x58\x2f\x64\xd7\xa1\x4d\x06\x4e\xcb\xd0\xd5\x4c\x29\x29\x2f\xf4\x81\x49\x75\x65\xe2\xc1\x18\x31\x8f\x43\x4c\x81\x2f\x6a\x20\x2c\xf8\xcd\xc1\x82\x03\xf5\x10\x05\x2f\xd4\x71\x14\xfd\x65\x69\x64\xf5\x5b\xb3\x21\x13\xbc\x00\x71\xf4\x08\xd1\xcf\x9a\x39\x84\x61\x72\xe9\x05\xd9\x9f\x1a\xe7\x2c\xbc\x39\xa0\x14\xfa\x57\xce\xfd\x83\x57\x2b\x96\x03\x30\xb8\x0c\xf6\xe7\x0f\xf4\x75\xa1\x3a\xf5\xad\xbc\xf8\x46\x19\xef\x13\x58\xa6\xe5\xaf\x50\xf1\xe3\x86\x6f\xd3\x8e\x93\x0d\x8f\x6b\x08\x99\x7f\x4f\xb5\xd9\x6d\x7e\xb9\x72\xf4\x6a\x24\x2c\xb6\xac\x31\xc4\x66\xab\x14\x7d\x50\x34\xc3\xc1\x76\xd2\xfc\x19\xbe\x27\xd9\xd5\x23\x6a\x78\xb4\xb9\x35\x48\xf6\xd2\xba\xea\xa1\x42\x9b\xac\x5a\xbb\xaa\x10\xc5\x0a\x9c\x1b\x1b\x1d\x75\x95\x12\x40\xc5\x64\x1e\x34\xfa\xee\x44\xb4\x62\xc1\x8c\xfd\x72\xb4\x4a\x63\x12\xf6\x01\xbc\x79\x51\xd0\xc8\x82\x44\xe9\xe6\x14\xcd\xdc\x00\xa5\x36\x0a\x31\xde\xfc\x3a\x20\x3a\xa0\x8b\xa6\xb1\x69\x9e\x48\xcd\x7f\x91\x38\x56\x26\xa3\x44\x1d\x79\x12\x22\x39\x63\xcd\xb5\x0e\x58\x19\x81\xcf\xb9\x26\x16\x12\x64\xe9\x36\xb8\x99\x24\x11\x3f\x2e\xb7\x1d\x0b\xbb\x16\xa5\xc0\x4f\xf6\x1f\xaa\xca\x2f\xcc\x7b\xc9\xf4\x71\x3c\xf9\x68\x10\x92\x5f\xe3\x60\x77\xc7\x99\x79\x96\x65\xbd\x47\xda\xe5\x79\x4c\xbc\xfc\x2c\x52\x3f\xea\x29\x13\x3f\x66\x29\x2d\x9f\xe5\xe9\x8d\x06\x12\x52\x9e\xb2\x7b\xbd\xe6\x4a\x01\xe3\x0f\x9d\xfd\x75\xa0\xae\x62\x1b\xb0\xe9\xd4\xbb\x44\x09\x4c\x9d\xe8\x8a\x05\x15\x21\xb8\xa1\x90\x3e\xc1\x54\x63\x0c\xb3\x44\xf6\x97\x76\x23\xdb\x97\x03\xa3\xe4\xca\x09\x1d\x74\x4c\x0f\x0b\x69\x5c\x71\x36\x5c\xaa\x0f\xa0\x34\x16\xb8\xd2\x60\xfa\xa4\x80\xc4\x08\x05\xd3\xb4\xb7\x92\xc1\x09\x02\x83\xdb\x19\xcc\x85\xc9\xb4\xc6\xae\x31\x06\x42\xba\xb2\xeb\x27\xdd\x51\x8d\x33\xa1\xfb\x33\x75\x2b\x1a\xa5\x4e\xec\x81\xb3\xec\x5c\x72\x56\x92\x31\xcd\x3c\x45\x9b\xff\x40\x33\xd1\x27\x47\x87\x72\xdb\x1f\x3d\x3c\xc8\x9c\xf3\xb5\x8e\x0f\xa3\xf7\x5f\xee\x00\xe1\xfc\x66\xf9\xc1\x35\x7a\x49\x5a\x59\xde\x17\x32\x3d\xe8\x98\x8f\x9c\x8f\x66\x05\xe9\xfa\x2b\x02\xb2\x74\x77\xd3\x24\x60\x4a\xb5\x15\x06\x2d\x3f\xd3\x45\x53\xfd\x4e\x98\xc3\x82\xb7\x4c\x25\xbf\xab\xda\x38\x90\x52\x72\x2c\x8a\x0f\x42\x65\xc9\xd1\x82\x13\x74\x17\x9a\x3e\x8b\xed\x49\x1d\x6d\xc8\xb3\xd2\xba\xe5\x63\x24\xdc\x26\x6e\x03\x5a\x8e\x53\xd0\x4b\x0b\x58\xc9\x42\x19\x80\x74\x91\x4c\xbf\xc6\x69\x7c\x63\xfc\x54\x1c\xb5\x1b\xda\x86\x62\x4a\x8b\x51\x00\x69\x01\x1b\x54\xb7\x30\x07\x38\x9f\xec\xdf\x1a\x3a\x7a\xed\x56\x0c\x03\xd6\xf9\x28\xca\x0b\x39\x84\xaf\x8d\x8e\x43\x3e\x8f\xd2\xa5\x05\x85\x49\xc7\x48\x67\x79\x12\x35\x25\x15\xef\x33\x06\xe9\xd4\xfb\x6a\x9a\x31\x16\x54\x0b\x72\x74\xe7\x40\xbf\xa8\x6b\x13\xc2\x6b\xa4\x7e\xdc\x91\xf2\x0f\x19\x64\x48\xb1\x80\xca\x2d\x92\xb9\x04\xfb\x93\x6f\x58\x4d\x54\x70\x9a\x2c\x19\x03\xa7\x65\x52\x00\xb9\x90\x27\x83\x5d\x37\xa6\x86\x86\xa3\xff\xa5\xe0\x46\x04\x95\x65\x86\x2c\x48\x8b\xfa\x7f\xcb\xec\x14\x66\x8f\x71\x3f\xf5\xad\xf2\x50\x7e\xd2\xbd\xd2\xd1\xfd\xb3\x3d\x6c\x2e\x22\x77\x32\x51\x51\x1c\xed\x0b\xe9\x81\xcf\xfe\x4f\x0b\x4e\xd7\x4b\xc5\x3d\x0e\xc9\xb9\x71\x31\x5d\xa1\x61\xe0\xe9\x6d\x94\xea\x28\xa5\xcb\xf5\x52\xe0\xed\x5a\x6d\x90\xd4\x6e\x0c\xdb\x73\x09\x72\xd8\x26\xb0\xf3\x15\x90\xf1\x47\x6e\x7c\x14\xe7\xde\x6b\x24\xb7\x66\xda\xa3\xe6\x4e\x3c\xc3\xbd\x01\x50\xa1\x0b\x87\x47\x49\x14\x0f\x76\xae\x19\xe4\x96\x2f\xf1\xd6\x64\x35\x30\xdb\xca\x9d\x85\xe3\x6e\xe8\x5d\x6f\x3c\xf5\xd8\xae\x01\xad\x51\xbf\xc9\xd3\xda\x8a\x2e\x03\x51\x68\x58\x9b\x0e\x3f\x24\x10\x1b\x3e\xa0\xd5\x86\x6a\xed\xa1\xf6\xe0\xfc\x7d\xa8\x44\x5d\xa0\x80\xd0\x92\x9f\x69\x56\x11\xa5\x98\xa2\x18\x35\x44\x54\x5a\xae\xae\x68\x52\x82\x03\xe7\x6c\xa9\xec\x3c\x4f\x97\x90\x0e\xbd\x0d\x53\xb7\xfa\xe1\xdd\xed\x5d\xbe\x27\x2c\x9d\xbb\x2d\x9c\x53\x89\x8f\xbd\x73\x7c\x61\xc5\x4d\x94\x20\x9c\xfb\xfb\x72\x56\xb1\x24\xca\xf2\x2a\xb5\xd5\xfb\x89\xc3\xe4\x9a\x8f\x72\xc3\x02\xfe\xcd\xf4\x9f\x7c\xac\xa2\xf6\x1b\x13\xb3\xc5\xef\x56\xc6\x43\xe4\x85\x06\xa7\x42\x1a\xf4\x57\xef\x02\x62\x56\x69\xed\x5d\x57\x0d\xf8\x0c\x39\x35\x3e\xd3\x19\x65\x21\x55\x5e\x7b\xf0\x0d\x3b\xf2\xa9\xc5\x15\xb8\x6b\x59\xbe\x2b\x82\xc3\x8c\xc1\x36\x63\xda\xe4\x01\x33\xc5\x89\x84\x9e\x17\x46\x9d\x2f\x29\xf2\xac\x95\xfb\x51\x24\xd5\xd8\x7d\x2c\x1c\x4d\x5b\x73\x11\x13\x6c\x2d\x4d\x4e\x0e\x98\x83\x1e\xf6\x0b\x1b\xc2\xb0\xca\xef\x29\xfd\x9a\xd0\xe3\x63\x4e\x43\xa1\x73\x96\x92\x85\x1a\x5a\x74\x7d\xf8\x0b\x3c\xb5\x26\xd2\xb9\xf9\x2c\x9d\x93\x68\x9e\x80\x05\xfe\x63\x87\x64\x06\x8c\x91\xeb\x6d\xc5\x53\x31\xa5\xcb\xd1\x18\x15\x32\x20\x39\x43\x65\xf1\x5d\x4b\x42\x1b\x47\x63\x71\x86\x1c\x07\xa0\x73\x2b\xd7\x1c\xc7\xbe\xac\x57\xad\xb4\xc3\x42\xd0\xc8\xed\x14\x0a\x76\x63\x21\xee\x37\x72\x33\xcb\x96\x18\xfc\x1a\x7a\xe1\x34\xf3\x10\xbd\xc6\x19\x0d\xa6\xa1\x01\x85\x50\xf5\xf7\x1b\x69\x65\xea\xf9\x85\xdb\x15\xe9\xbb\x35\x7e\x8f\xa2\x0d\x6f\xbc\x5b\xdb\xc8\xd0\x9b\xce\x92\xf3\x8f\x0c\xbd\x3f\xc1\x96\xb7\x3f\xfe\x78\xf7\x18\x06\x69\x6d\xd5\xf3\xe2\x6f\x72\x85\x25\xc7\x89\x24\x18\x60\x14\xae\x1d\x05\x1f\x50\x9f\xa5\x64\x4e\x3b\x59\x8f\xc4\x88\xb1\xd4\xb7\xba\x66\x78\x96\x88\x13\xac\xa4\x02\x6b\xdd\x86\x72\x54\xd0\x41\xaa\xac\xa9\x15\xe6\xd0\x93\x2e\x3e\xad\xef\xbf\xff\x1b\x27\x9e\xef\x7a\x31\x5e\xcb\x41\x26\x4a\x8e\xf3\x7f\x6c\x5c\x38\x98\x3f\xb2\x88\xcc\x98\x86\xd8\x4f\xd2\xcf\x84\x34\x8a\x1b\x43\x21\xff\x75\xb1\x97\xb4\x95\xe2\x72\x5c\x27\x91\xa9\x15\xcc\xa8\xfe\x8f\x3e\xcf\xc8\x2d\xed\x57\x7b\xa0\x99\xdc\xff\x32\x4f\x34\x37\xb7\x97\x78\x87\x43\x0d\x9e\x48\x24\x4d\xa1\x7e\xaf\xdb\xaf\xf2\x2c\x23\xc4\xf2\xfb\x0f\x33\xbf\x9d\xfd\x37\x00\x00\xff\xff\xa4\xc2\x9a\xf1\xe2\x1c\x00\x00")

func vdltoolConfigVdlBytes() ([]byte, error) {
	return bindataRead(
		_vdltoolConfigVdl,
		"vdltool/config.vdl",
	)
}

func vdltoolConfigVdl() (*asset, error) {
	bytes, err := vdltoolConfigVdlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "vdltool/config.vdl", size: 0, mode: os.FileMode(420), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"math/math.vdl":           mathMathVdl,
	"math/vdl.config":         mathVdlConfig,
	"signature/signature.vdl": signatureSignatureVdl,
	"time/time.vdl":           timeTimeVdl,
	"time/vdl.config":         timeVdlConfig,
	"vdltool/config.vdl":      vdltoolConfigVdl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"math": &bintree{nil, map[string]*bintree{
		"math.vdl":   &bintree{mathMathVdl, map[string]*bintree{}},
		"vdl.config": &bintree{mathVdlConfig, map[string]*bintree{}},
	}},
	"signature": &bintree{nil, map[string]*bintree{
		"signature.vdl": &bintree{signatureSignatureVdl, map[string]*bintree{}},
	}},
	"time": &bintree{nil, map[string]*bintree{
		"time.vdl":   &bintree{timeTimeVdl, map[string]*bintree{}},
		"vdl.config": &bintree{timeVdlConfig, map[string]*bintree{}},
	}},
	"vdltool": &bintree{nil, map[string]*bintree{
		"config.vdl": &bintree{vdltoolConfigVdl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
