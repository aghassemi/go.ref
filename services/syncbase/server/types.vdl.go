// Copyright 2015 The Vanadium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// This file was auto-generated by the vanadium vdl tool.
// Source: types.vdl

package server

import (
	// VDL system imports
	"v.io/v23/vdl"

	// VDL user imports
	"v.io/v23/security/access"
)

// serviceData represents the persistent state of a Service.
type serviceData struct {
	Universes map[string]struct{}
	Version   uint64 // covers the fields below
	Acl       access.Permissions
}

func (serviceData) __VDLReflect(struct {
	Name string "v.io/syncbase/x/ref/services/syncbase/server.serviceData"
}) {
}

// universeData represents the persistent state of a Universe.
type universeData struct {
	Name      string
	Databases map[string]struct{}
	Version   uint64 // covers the fields below
	Acl       access.Permissions
}

func (universeData) __VDLReflect(struct {
	Name string "v.io/syncbase/x/ref/services/syncbase/server.universeData"
}) {
}

// databaseData represents the persistent state of a Database.
type databaseData struct {
	Name    string
	Version uint64 // covers the fields below
	Acl     access.Permissions
}

func (databaseData) __VDLReflect(struct {
	Name string "v.io/syncbase/x/ref/services/syncbase/server.databaseData"
}) {
}

func init() {
	vdl.Register((*serviceData)(nil))
	vdl.Register((*universeData)(nil))
	vdl.Register((*databaseData)(nil))
}
