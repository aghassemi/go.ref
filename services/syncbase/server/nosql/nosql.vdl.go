// Copyright 2015 The Vanadium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// This file was auto-generated by the vanadium vdl tool.
// Package: nosql

package nosql

import (
	"fmt"
	"v.io/v23/security/access"
	"v.io/v23/services/syncbase/nosql"
	"v.io/v23/vdl"
)

// DatabaseData represents the persistent state of a Database.
type DatabaseData struct {
	Name           string
	Version        uint64 // covers the Perms field below
	Perms          access.Permissions
	SchemaMetadata *nosql.SchemaMetadata
}

func (DatabaseData) __VDLReflect(struct {
	Name string `vdl:"v.io/x/ref/services/syncbase/server/nosql.DatabaseData"`
}) {
}

func (m *DatabaseData) FillVDLTarget(t vdl.Target, tt *vdl.Type) error {
	if __VDLType_v_io_x_ref_services_syncbase_server_nosql_DatabaseData == nil || __VDLType0 == nil {
		panic("Initialization order error: types generated for FillVDLTarget not initialized. Consider moving caller to an init() block.")
	}
	fieldsTarget1, err := t.StartFields(tt)
	if err != nil {
		return err
	}

	keyTarget2, fieldTarget3, err := fieldsTarget1.StartField("Name")
	if err != vdl.ErrFieldNoExist && err != nil {
		return err
	}
	if err != vdl.ErrFieldNoExist {
		if err := fieldTarget3.FromString(string(m.Name), vdl.StringType); err != nil {
			return err
		}
		if err := fieldsTarget1.FinishField(keyTarget2, fieldTarget3); err != nil {
			return err
		}
	}
	keyTarget4, fieldTarget5, err := fieldsTarget1.StartField("Version")
	if err != vdl.ErrFieldNoExist && err != nil {
		return err
	}
	if err != vdl.ErrFieldNoExist {
		if err := fieldTarget5.FromUint(uint64(m.Version), vdl.Uint64Type); err != nil {
			return err
		}
		if err := fieldsTarget1.FinishField(keyTarget4, fieldTarget5); err != nil {
			return err
		}
	}
	keyTarget6, fieldTarget7, err := fieldsTarget1.StartField("Perms")
	if err != vdl.ErrFieldNoExist && err != nil {
		return err
	}
	if err != vdl.ErrFieldNoExist {

		if err := m.Perms.FillVDLTarget(fieldTarget7, __VDLType_v_io_v23_security_access_Permissions); err != nil {
			return err
		}
		if err := fieldsTarget1.FinishField(keyTarget6, fieldTarget7); err != nil {
			return err
		}
	}
	keyTarget8, fieldTarget9, err := fieldsTarget1.StartField("SchemaMetadata")
	if err != vdl.ErrFieldNoExist && err != nil {
		return err
	}
	if err != vdl.ErrFieldNoExist {

		if m.SchemaMetadata == nil {
			if err := fieldTarget9.FromNil(__VDLType1); err != nil {
				return err
			}
		} else {
			if err := m.SchemaMetadata.FillVDLTarget(fieldTarget9, __VDLType_v_io_v23_services_syncbase_nosql_SchemaMetadata); err != nil {
				return err
			}
		}
		if err := fieldsTarget1.FinishField(keyTarget8, fieldTarget9); err != nil {
			return err
		}
	}
	if err := t.FinishFields(fieldsTarget1); err != nil {
		return err
	}
	return nil
}

func (m *DatabaseData) MakeVDLTarget() vdl.Target {
	return &DatabaseDataTarget{Value: m}
}

type DatabaseDataTarget struct {
	Value *DatabaseData
	vdl.TargetBase
	vdl.FieldsTargetBase
}

func (t *DatabaseDataTarget) StartFields(tt *vdl.Type) (vdl.FieldsTarget, error) {
	if !vdl.Compatible(tt, __VDLType_v_io_x_ref_services_syncbase_server_nosql_DatabaseData) {
		return nil, fmt.Errorf("type %v incompatible with %v", tt, __VDLType_v_io_x_ref_services_syncbase_server_nosql_DatabaseData)
	}
	return t, nil
}
func (t *DatabaseDataTarget) StartField(name string) (key, field vdl.Target, _ error) {
	switch name {
	case "Name":
		val, err := &vdl.StringTarget{Value: &t.Value.Name}, error(nil)
		return nil, val, err
	case "Version":
		val, err := &vdl.Uint64Target{Value: &t.Value.Version}, error(nil)
		return nil, val, err
	case "Perms":
		val, err := &access.PermissionsTarget{Value: &t.Value.Perms}, error(nil)
		return nil, val, err
	case "SchemaMetadata":
		val, err := &unnamed_3f762e696f2f7632332f73657276696365732f73796e63626173652f6e6f73716c2e536368656d614d65746164617461207374727563747b56657273696f6e20696e7433323b506f6c69637920762e696f2f7632332f73657276696365732f73796e63626173652f6e6f73716c2e4372506f6c696379207374727563747b52756c6573205b5d762e696f2f7632332f73657276696365732f73796e63626173652f6e6f73716c2e437252756c65207374727563747b5461626c654e616d6520737472696e673b4b657950726566697820737472696e673b5479706520737472696e673b5265736f6c76657220762e696f2f7632332f73657276696365732f73796e63626173652f6e6f73716c2e5265736f6c7665725479706520656e756d7b4c61737457696e733b4170705265736f6c7665733b44656665727d7d7d7d_Target{Value: &t.Value.SchemaMetadata}, error(nil)
		return nil, val, err
	default:
		return nil, nil, fmt.Errorf("field %s not in struct %v", name, __VDLType_v_io_x_ref_services_syncbase_server_nosql_DatabaseData)
	}
}
func (t *DatabaseDataTarget) FinishField(_, _ vdl.Target) error {
	return nil
}
func (t *DatabaseDataTarget) FinishFields(_ vdl.FieldsTarget) error {

	return nil
}

type unnamed_3f762e696f2f7632332f73657276696365732f73796e63626173652f6e6f73716c2e536368656d614d65746164617461207374727563747b56657273696f6e20696e7433323b506f6c69637920762e696f2f7632332f73657276696365732f73796e63626173652f6e6f73716c2e4372506f6c696379207374727563747b52756c6573205b5d762e696f2f7632332f73657276696365732f73796e63626173652f6e6f73716c2e437252756c65207374727563747b5461626c654e616d6520737472696e673b4b657950726566697820737472696e673b5479706520737472696e673b5265736f6c76657220762e696f2f7632332f73657276696365732f73796e63626173652f6e6f73716c2e5265736f6c7665725479706520656e756d7b4c61737457696e733b4170705265736f6c7665733b44656665727d7d7d7d_Target struct {
	Value **nosql.SchemaMetadata
	vdl.TargetBase
	vdl.FieldsTargetBase
}

func (t *unnamed_3f762e696f2f7632332f73657276696365732f73796e63626173652f6e6f73716c2e536368656d614d65746164617461207374727563747b56657273696f6e20696e7433323b506f6c69637920762e696f2f7632332f73657276696365732f73796e63626173652f6e6f73716c2e4372506f6c696379207374727563747b52756c6573205b5d762e696f2f7632332f73657276696365732f73796e63626173652f6e6f73716c2e437252756c65207374727563747b5461626c654e616d6520737472696e673b4b657950726566697820737472696e673b5479706520737472696e673b5265736f6c76657220762e696f2f7632332f73657276696365732f73796e63626173652f6e6f73716c2e5265736f6c7665725479706520656e756d7b4c61737457696e733b4170705265736f6c7665733b44656665727d7d7d7d_Target) StartFields(tt *vdl.Type) (vdl.FieldsTarget, error) {
	if *t.Value == nil {
		*t.Value = &nosql.SchemaMetadata{}
	}
	target, err := &nosql.SchemaMetadataTarget{Value: *t.Value}, error(nil)
	if err != nil {
		return nil, err
	}
	return target.StartFields(tt)
}
func (t *unnamed_3f762e696f2f7632332f73657276696365732f73796e63626173652f6e6f73716c2e536368656d614d65746164617461207374727563747b56657273696f6e20696e7433323b506f6c69637920762e696f2f7632332f73657276696365732f73796e63626173652f6e6f73716c2e4372506f6c696379207374727563747b52756c6573205b5d762e696f2f7632332f73657276696365732f73796e63626173652f6e6f73716c2e437252756c65207374727563747b5461626c654e616d6520737472696e673b4b657950726566697820737472696e673b5479706520737472696e673b5265736f6c76657220762e696f2f7632332f73657276696365732f73796e63626173652f6e6f73716c2e5265736f6c7665725479706520656e756d7b4c61737457696e733b4170705265736f6c7665733b44656665727d7d7d7d_Target) FinishFields(_ vdl.FieldsTarget) error {

	return nil
}
func (t *unnamed_3f762e696f2f7632332f73657276696365732f73796e63626173652f6e6f73716c2e536368656d614d65746164617461207374727563747b56657273696f6e20696e7433323b506f6c69637920762e696f2f7632332f73657276696365732f73796e63626173652f6e6f73716c2e4372506f6c696379207374727563747b52756c6573205b5d762e696f2f7632332f73657276696365732f73796e63626173652f6e6f73716c2e437252756c65207374727563747b5461626c654e616d6520737472696e673b4b657950726566697820737472696e673b5479706520737472696e673b5265736f6c76657220762e696f2f7632332f73657276696365732f73796e63626173652f6e6f73716c2e5265736f6c7665725479706520656e756d7b4c61737457696e733b4170705265736f6c7665733b44656665727d7d7d7d_Target) FromNil(tt *vdl.Type) error {
	*t.Value = nil

	return nil
}

// TableData represents the persistent state of a Table.
type TableData struct {
	Name  string
	Perms access.Permissions
}

func (TableData) __VDLReflect(struct {
	Name string `vdl:"v.io/x/ref/services/syncbase/server/nosql.TableData"`
}) {
}

func (m *TableData) FillVDLTarget(t vdl.Target, tt *vdl.Type) error {
	if __VDLType_v_io_x_ref_services_syncbase_server_nosql_TableData == nil || __VDLType2 == nil {
		panic("Initialization order error: types generated for FillVDLTarget not initialized. Consider moving caller to an init() block.")
	}
	fieldsTarget1, err := t.StartFields(tt)
	if err != nil {
		return err
	}

	keyTarget2, fieldTarget3, err := fieldsTarget1.StartField("Name")
	if err != vdl.ErrFieldNoExist && err != nil {
		return err
	}
	if err != vdl.ErrFieldNoExist {
		if err := fieldTarget3.FromString(string(m.Name), vdl.StringType); err != nil {
			return err
		}
		if err := fieldsTarget1.FinishField(keyTarget2, fieldTarget3); err != nil {
			return err
		}
	}
	keyTarget4, fieldTarget5, err := fieldsTarget1.StartField("Perms")
	if err != vdl.ErrFieldNoExist && err != nil {
		return err
	}
	if err != vdl.ErrFieldNoExist {

		if err := m.Perms.FillVDLTarget(fieldTarget5, __VDLType_v_io_v23_security_access_Permissions); err != nil {
			return err
		}
		if err := fieldsTarget1.FinishField(keyTarget4, fieldTarget5); err != nil {
			return err
		}
	}
	if err := t.FinishFields(fieldsTarget1); err != nil {
		return err
	}
	return nil
}

func (m *TableData) MakeVDLTarget() vdl.Target {
	return &TableDataTarget{Value: m}
}

type TableDataTarget struct {
	Value *TableData
	vdl.TargetBase
	vdl.FieldsTargetBase
}

func (t *TableDataTarget) StartFields(tt *vdl.Type) (vdl.FieldsTarget, error) {
	if !vdl.Compatible(tt, __VDLType_v_io_x_ref_services_syncbase_server_nosql_TableData) {
		return nil, fmt.Errorf("type %v incompatible with %v", tt, __VDLType_v_io_x_ref_services_syncbase_server_nosql_TableData)
	}
	return t, nil
}
func (t *TableDataTarget) StartField(name string) (key, field vdl.Target, _ error) {
	switch name {
	case "Name":
		val, err := &vdl.StringTarget{Value: &t.Value.Name}, error(nil)
		return nil, val, err
	case "Perms":
		val, err := &access.PermissionsTarget{Value: &t.Value.Perms}, error(nil)
		return nil, val, err
	default:
		return nil, nil, fmt.Errorf("field %s not in struct %v", name, __VDLType_v_io_x_ref_services_syncbase_server_nosql_TableData)
	}
}
func (t *TableDataTarget) FinishField(_, _ vdl.Target) error {
	return nil
}
func (t *TableDataTarget) FinishFields(_ vdl.FieldsTarget) error {

	return nil
}

func init() {
	vdl.Register((*DatabaseData)(nil))
	vdl.Register((*TableData)(nil))
}

var __VDLType1 *vdl.Type = vdl.TypeOf((*nosql.SchemaMetadata)(nil))
var __VDLType0 *vdl.Type = vdl.TypeOf((*DatabaseData)(nil))
var __VDLType2 *vdl.Type = vdl.TypeOf((*TableData)(nil))
var __VDLType_v_io_v23_security_access_Permissions *vdl.Type = vdl.TypeOf(access.Permissions(nil))
var __VDLType_v_io_v23_services_syncbase_nosql_SchemaMetadata *vdl.Type = vdl.TypeOf(nosql.SchemaMetadata{})
var __VDLType_v_io_x_ref_services_syncbase_server_nosql_DatabaseData *vdl.Type = vdl.TypeOf(DatabaseData{})
var __VDLType_v_io_x_ref_services_syncbase_server_nosql_TableData *vdl.Type = vdl.TypeOf(TableData{})

func __VDLEnsureNativeBuilt() {
}
