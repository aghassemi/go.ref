// This file was auto-generated by the veyron vdl tool.
// Source: channel.vdl

package channel

import (
	// The non-user imports are prefixed with "__" to prevent collisions.
	__vdl "veyron.io/veyron/veyron2/vdl"
	__vdlutil "veyron.io/veyron/veyron2/vdl/vdlutil"
)

type Request struct {
	Type string
	Seq  uint64
	Body __vdlutil.Any
}

func (Request) __VDLReflect(struct {
	Name string "veyron.io/wspr/veyron/services/wsprd/channel.Request"
}) {
}

type Response struct {
	ReqSeq uint64
	Err    string // TODO(bprosnitz) change this back to error when it is possible to do so. (issue 368)
	Body   __vdlutil.Any
}

func (Response) __VDLReflect(struct {
	Name string "veyron.io/wspr/veyron/services/wsprd/channel.Response"
}) {
}

type (
	// Message represents any single field of the Message union type.
	Message interface {
		// Index returns the field index.
		Index() int
		// Interface returns the field value as an interface.
		Interface() interface{}
		// Name returns the field name.
		Name() string
		// __VDLReflect describes the Message union type.
		__VDLReflect(__MessageReflect)
	}
	// MessageRequest represents field Request of the Message union type.
	MessageRequest struct{ Value Request }
	// MessageResponse represents field Response of the Message union type.
	MessageResponse struct{ Value Response }
	// __MessageReflect describes the Message union type.
	__MessageReflect struct {
		Name  string "veyron.io/wspr/veyron/services/wsprd/channel.Message"
		Type  Message
		Union struct {
			Request  MessageRequest
			Response MessageResponse
		}
	}
)

func (x MessageRequest) Index() int                    { return 0 }
func (x MessageRequest) Interface() interface{}        { return x.Value }
func (x MessageRequest) Name() string                  { return "Request" }
func (x MessageRequest) __VDLReflect(__MessageReflect) {}

func (x MessageResponse) Index() int                    { return 1 }
func (x MessageResponse) Interface() interface{}        { return x.Value }
func (x MessageResponse) Name() string                  { return "Response" }
func (x MessageResponse) __VDLReflect(__MessageReflect) {}

func init() {
	__vdl.Register(Request{})
	__vdl.Register(Response{})
	__vdl.Register(Message(MessageRequest{Request{}}))
}
