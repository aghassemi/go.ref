// This file was auto-generated by the veyron vdl tool.
// Source: channel.vdl

package channel

import (
	// The non-user imports are prefixed with "__" to prevent collisions.
	__vdlutil "veyron.io/veyron/veyron2/vdl/vdlutil"
)

type Request struct {
	Type string
	Seq  uint64
	Body __vdlutil.Any
}

type Response struct {
	ReqSeq uint64
	Err    string // TODO(bprosnitz) change this back to error when it is possible to do so. (issue 368)
	Body   __vdlutil.Any
}

type Message struct{ oneof interface{} }

// MakeMessage creates a Message.
// Returns true iff the oneof value has a valid type.
func MakeMessage(oneof interface{}) (x Message, ok bool) {
	ok = x.Assign(oneof)
	return
}

// Assign assigns oneof to x.
// Returns true iff the oneof value has a valid type.
func (x *Message) Assign(oneof interface{}) bool {
	switch oneof.(type) {
	case Request, Response:
		x.oneof = oneof
		return true
	}
	x.oneof = nil
	return false
}

// OneOf returns the underlying typed value of x.
func (x Message) OneOf() interface{} {
	return x.oneof
}

// vdlOneOfTypes identifies Message as a oneof.
func (Message) vdlOneOfTypes(_ Request, _ Response) {}
