// Copyright 2015 The Vanadium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// This file was auto-generated by the vanadium vdl tool.
// Source: browspr.vdl

package browspr

import (
	// VDL system imports
	"v.io/v23/vdl"

	// VDL user imports
	"v.io/x/ref/services/identity"
	"v.io/x/ref/services/wspr/internal/account"
)

type StartMessage struct {
	CleanupBlessings      bool
	Identityd             string
	IdentitydBlessingRoot identity.BlessingRootResponse
	Proxy                 string
	NamespaceRoot         string
	LogLevel              int32
	LogModule             string
}

func (StartMessage) __VDLReflect(struct {
	Name string `vdl:"v.io/x/ref/services/wspr/internal/browspr.StartMessage"`
}) {
}

func (m *StartMessage) FillVDLTarget(t vdl.Target, tt *vdl.Type) error {

	if __VDLType_browspr_v_io_x_ref_services_wspr_internal_browspr_StartMessage == nil || __VDLTypebrowspr0 == nil {
		panic("Initialization order error: types generated for FillVDLTarget not initialized. Consider moving caller to an init() block.")
	}
	fieldsTarget1, err := t.StartFields(tt)
	if err != nil {
		return err
	}

	var2 := (m.CleanupBlessings == false)
	if !var2 {
		keyTarget3, fieldTarget4, err := fieldsTarget1.StartField("CleanupBlessings")
		if err != vdl.ErrFieldNoExist && err != nil {
			return err
		}
		if err != vdl.ErrFieldNoExist {
			if err := fieldTarget4.FromBool(bool(m.CleanupBlessings), vdl.BoolType); err != nil {
				return err
			}
			if err := fieldsTarget1.FinishField(keyTarget3, fieldTarget4); err != nil {
				return err
			}
		}
	}
	var5 := (m.Identityd == "")
	if !var5 {
		keyTarget6, fieldTarget7, err := fieldsTarget1.StartField("Identityd")
		if err != vdl.ErrFieldNoExist && err != nil {
			return err
		}
		if err != vdl.ErrFieldNoExist {
			if err := fieldTarget7.FromString(string(m.Identityd), vdl.StringType); err != nil {
				return err
			}
			if err := fieldsTarget1.FinishField(keyTarget6, fieldTarget7); err != nil {
				return err
			}
		}
	}
	var8 := m.IdentitydBlessingRoot.IsZero()
	if !var8 {
		keyTarget9, fieldTarget10, err := fieldsTarget1.StartField("IdentitydBlessingRoot")
		if err != vdl.ErrFieldNoExist && err != nil {
			return err
		}
		if err != vdl.ErrFieldNoExist {

			if err := m.IdentitydBlessingRoot.FillVDLTarget(fieldTarget10, __VDLType_browspr_v_io_x_ref_services_identity_BlessingRootResponse); err != nil {
				return err
			}
			if err := fieldsTarget1.FinishField(keyTarget9, fieldTarget10); err != nil {
				return err
			}
		}
	}
	var11 := (m.Proxy == "")
	if !var11 {
		keyTarget12, fieldTarget13, err := fieldsTarget1.StartField("Proxy")
		if err != vdl.ErrFieldNoExist && err != nil {
			return err
		}
		if err != vdl.ErrFieldNoExist {
			if err := fieldTarget13.FromString(string(m.Proxy), vdl.StringType); err != nil {
				return err
			}
			if err := fieldsTarget1.FinishField(keyTarget12, fieldTarget13); err != nil {
				return err
			}
		}
	}
	var14 := (m.NamespaceRoot == "")
	if !var14 {
		keyTarget15, fieldTarget16, err := fieldsTarget1.StartField("NamespaceRoot")
		if err != vdl.ErrFieldNoExist && err != nil {
			return err
		}
		if err != vdl.ErrFieldNoExist {
			if err := fieldTarget16.FromString(string(m.NamespaceRoot), vdl.StringType); err != nil {
				return err
			}
			if err := fieldsTarget1.FinishField(keyTarget15, fieldTarget16); err != nil {
				return err
			}
		}
	}
	var17 := (m.LogLevel == int32(0))
	if !var17 {
		keyTarget18, fieldTarget19, err := fieldsTarget1.StartField("LogLevel")
		if err != vdl.ErrFieldNoExist && err != nil {
			return err
		}
		if err != vdl.ErrFieldNoExist {
			if err := fieldTarget19.FromInt(int64(m.LogLevel), vdl.Int32Type); err != nil {
				return err
			}
			if err := fieldsTarget1.FinishField(keyTarget18, fieldTarget19); err != nil {
				return err
			}
		}
	}
	var20 := (m.LogModule == "")
	if !var20 {
		keyTarget21, fieldTarget22, err := fieldsTarget1.StartField("LogModule")
		if err != vdl.ErrFieldNoExist && err != nil {
			return err
		}
		if err != vdl.ErrFieldNoExist {
			if err := fieldTarget22.FromString(string(m.LogModule), vdl.StringType); err != nil {
				return err
			}
			if err := fieldsTarget1.FinishField(keyTarget21, fieldTarget22); err != nil {
				return err
			}
		}
	}
	if err := t.FinishFields(fieldsTarget1); err != nil {
		return err
	}
	return nil
}

func (m *StartMessage) MakeVDLTarget() vdl.Target {
	return nil
}

func (m *StartMessage) IsZero() bool {

	var1 := true
	var2 := (m.CleanupBlessings == false)
	var1 = var1 && var2
	var3 := (m.Identityd == "")
	var1 = var1 && var3
	var4 := m.IdentitydBlessingRoot.IsZero()
	var1 = var1 && var4
	var5 := (m.Proxy == "")
	var1 = var1 && var5
	var6 := (m.NamespaceRoot == "")
	var1 = var1 && var6
	var7 := (m.LogLevel == int32(0))
	var1 = var1 && var7
	var8 := (m.LogModule == "")
	var1 = var1 && var8
	return var1
}

type AssociateAccountMessage struct {
	Account string
	Origin  string
	Caveats []account.Caveat
}

func (AssociateAccountMessage) __VDLReflect(struct {
	Name string `vdl:"v.io/x/ref/services/wspr/internal/browspr.AssociateAccountMessage"`
}) {
}

func (m *AssociateAccountMessage) FillVDLTarget(t vdl.Target, tt *vdl.Type) error {

	if __VDLType_browspr_v_io_x_ref_services_wspr_internal_browspr_AssociateAccountMessage == nil || __VDLTypebrowspr1 == nil {
		panic("Initialization order error: types generated for FillVDLTarget not initialized. Consider moving caller to an init() block.")
	}
	fieldsTarget1, err := t.StartFields(tt)
	if err != nil {
		return err
	}

	var2 := (m.Account == "")
	if !var2 {
		keyTarget3, fieldTarget4, err := fieldsTarget1.StartField("Account")
		if err != vdl.ErrFieldNoExist && err != nil {
			return err
		}
		if err != vdl.ErrFieldNoExist {
			if err := fieldTarget4.FromString(string(m.Account), vdl.StringType); err != nil {
				return err
			}
			if err := fieldsTarget1.FinishField(keyTarget3, fieldTarget4); err != nil {
				return err
			}
		}
	}
	var5 := (m.Origin == "")
	if !var5 {
		keyTarget6, fieldTarget7, err := fieldsTarget1.StartField("Origin")
		if err != vdl.ErrFieldNoExist && err != nil {
			return err
		}
		if err != vdl.ErrFieldNoExist {
			if err := fieldTarget7.FromString(string(m.Origin), vdl.StringType); err != nil {
				return err
			}
			if err := fieldsTarget1.FinishField(keyTarget6, fieldTarget7); err != nil {
				return err
			}
		}
	}
	var var8 bool
	if len(m.Caveats) == 0 {
		var8 = true
	}
	if !var8 {
		keyTarget9, fieldTarget10, err := fieldsTarget1.StartField("Caveats")
		if err != vdl.ErrFieldNoExist && err != nil {
			return err
		}
		if err != vdl.ErrFieldNoExist {

			listTarget11, err := fieldTarget10.StartList(__VDLTypebrowspr2, len(m.Caveats))
			if err != nil {
				return err
			}
			for i, elem13 := range m.Caveats {
				elemTarget12, err := listTarget11.StartElem(i)
				if err != nil {
					return err
				}

				if err := elem13.FillVDLTarget(elemTarget12, __VDLType_browspr_v_io_x_ref_services_wspr_internal_account_Caveat); err != nil {
					return err
				}
				if err := listTarget11.FinishElem(elemTarget12); err != nil {
					return err
				}
			}
			if err := fieldTarget10.FinishList(listTarget11); err != nil {
				return err
			}
			if err := fieldsTarget1.FinishField(keyTarget9, fieldTarget10); err != nil {
				return err
			}
		}
	}
	if err := t.FinishFields(fieldsTarget1); err != nil {
		return err
	}
	return nil
}

func (m *AssociateAccountMessage) MakeVDLTarget() vdl.Target {
	return nil
}

func (m *AssociateAccountMessage) IsZero() bool {

	var1 := true
	var2 := (m.Account == "")
	var1 = var1 && var2
	var3 := (m.Origin == "")
	var1 = var1 && var3
	var var4 bool
	if len(m.Caveats) == 0 {
		var4 = true
	}
	var1 = var1 && var4
	return var1
}

type CreateAccountMessage struct {
	Token string
}

func (CreateAccountMessage) __VDLReflect(struct {
	Name string `vdl:"v.io/x/ref/services/wspr/internal/browspr.CreateAccountMessage"`
}) {
}

func (m *CreateAccountMessage) FillVDLTarget(t vdl.Target, tt *vdl.Type) error {

	if __VDLType_browspr_v_io_x_ref_services_wspr_internal_browspr_CreateAccountMessage == nil || __VDLTypebrowspr3 == nil {
		panic("Initialization order error: types generated for FillVDLTarget not initialized. Consider moving caller to an init() block.")
	}
	fieldsTarget1, err := t.StartFields(tt)
	if err != nil {
		return err
	}

	var2 := (m.Token == "")
	if !var2 {
		keyTarget3, fieldTarget4, err := fieldsTarget1.StartField("Token")
		if err != vdl.ErrFieldNoExist && err != nil {
			return err
		}
		if err != vdl.ErrFieldNoExist {
			if err := fieldTarget4.FromString(string(m.Token), vdl.StringType); err != nil {
				return err
			}
			if err := fieldsTarget1.FinishField(keyTarget3, fieldTarget4); err != nil {
				return err
			}
		}
	}
	if err := t.FinishFields(fieldsTarget1); err != nil {
		return err
	}
	return nil
}

func (m *CreateAccountMessage) MakeVDLTarget() vdl.Target {
	return nil
}

func (m *CreateAccountMessage) IsZero() bool {

	var1 := (*m == CreateAccountMessage{})
	return var1
}

type CleanupMessage struct {
	InstanceId int32
}

func (CleanupMessage) __VDLReflect(struct {
	Name string `vdl:"v.io/x/ref/services/wspr/internal/browspr.CleanupMessage"`
}) {
}

func (m *CleanupMessage) FillVDLTarget(t vdl.Target, tt *vdl.Type) error {

	if __VDLType_browspr_v_io_x_ref_services_wspr_internal_browspr_CleanupMessage == nil || __VDLTypebrowspr4 == nil {
		panic("Initialization order error: types generated for FillVDLTarget not initialized. Consider moving caller to an init() block.")
	}
	fieldsTarget1, err := t.StartFields(tt)
	if err != nil {
		return err
	}

	var2 := (m.InstanceId == int32(0))
	if !var2 {
		keyTarget3, fieldTarget4, err := fieldsTarget1.StartField("InstanceId")
		if err != vdl.ErrFieldNoExist && err != nil {
			return err
		}
		if err != vdl.ErrFieldNoExist {
			if err := fieldTarget4.FromInt(int64(m.InstanceId), vdl.Int32Type); err != nil {
				return err
			}
			if err := fieldsTarget1.FinishField(keyTarget3, fieldTarget4); err != nil {
				return err
			}
		}
	}
	if err := t.FinishFields(fieldsTarget1); err != nil {
		return err
	}
	return nil
}

func (m *CleanupMessage) MakeVDLTarget() vdl.Target {
	return nil
}

func (m *CleanupMessage) IsZero() bool {

	var1 := (*m == CleanupMessage{})
	return var1
}

type OriginHasAccountMessage struct {
	Origin string
}

func (OriginHasAccountMessage) __VDLReflect(struct {
	Name string `vdl:"v.io/x/ref/services/wspr/internal/browspr.OriginHasAccountMessage"`
}) {
}

func (m *OriginHasAccountMessage) FillVDLTarget(t vdl.Target, tt *vdl.Type) error {

	if __VDLType_browspr_v_io_x_ref_services_wspr_internal_browspr_OriginHasAccountMessage == nil || __VDLTypebrowspr5 == nil {
		panic("Initialization order error: types generated for FillVDLTarget not initialized. Consider moving caller to an init() block.")
	}
	fieldsTarget1, err := t.StartFields(tt)
	if err != nil {
		return err
	}

	var2 := (m.Origin == "")
	if !var2 {
		keyTarget3, fieldTarget4, err := fieldsTarget1.StartField("Origin")
		if err != vdl.ErrFieldNoExist && err != nil {
			return err
		}
		if err != vdl.ErrFieldNoExist {
			if err := fieldTarget4.FromString(string(m.Origin), vdl.StringType); err != nil {
				return err
			}
			if err := fieldsTarget1.FinishField(keyTarget3, fieldTarget4); err != nil {
				return err
			}
		}
	}
	if err := t.FinishFields(fieldsTarget1); err != nil {
		return err
	}
	return nil
}

func (m *OriginHasAccountMessage) MakeVDLTarget() vdl.Target {
	return nil
}

func (m *OriginHasAccountMessage) IsZero() bool {

	var1 := (*m == OriginHasAccountMessage{})
	return var1
}

type GetAccountsMessage struct {
}

func (GetAccountsMessage) __VDLReflect(struct {
	Name string `vdl:"v.io/x/ref/services/wspr/internal/browspr.GetAccountsMessage"`
}) {
}

func (m *GetAccountsMessage) FillVDLTarget(t vdl.Target, tt *vdl.Type) error {

	if __VDLType_browspr_v_io_x_ref_services_wspr_internal_browspr_GetAccountsMessage == nil || __VDLTypebrowspr6 == nil {
		panic("Initialization order error: types generated for FillVDLTarget not initialized. Consider moving caller to an init() block.")
	}
	fieldsTarget1, err := t.StartFields(tt)
	if err != nil {
		return err
	}

	if err := t.FinishFields(fieldsTarget1); err != nil {
		return err
	}
	return nil
}

func (m *GetAccountsMessage) MakeVDLTarget() vdl.Target {
	return nil
}

func (m *GetAccountsMessage) IsZero() bool {

	var1 := (*m == GetAccountsMessage{})
	return var1
}

type CreateInstanceMessage struct {
	InstanceId     int32
	Origin         string
	NamespaceRoots []string
	Proxy          string
}

func (CreateInstanceMessage) __VDLReflect(struct {
	Name string `vdl:"v.io/x/ref/services/wspr/internal/browspr.CreateInstanceMessage"`
}) {
}

func (m *CreateInstanceMessage) FillVDLTarget(t vdl.Target, tt *vdl.Type) error {

	if __VDLType_browspr_v_io_x_ref_services_wspr_internal_browspr_CreateInstanceMessage == nil || __VDLTypebrowspr7 == nil {
		panic("Initialization order error: types generated for FillVDLTarget not initialized. Consider moving caller to an init() block.")
	}
	fieldsTarget1, err := t.StartFields(tt)
	if err != nil {
		return err
	}

	var2 := (m.InstanceId == int32(0))
	if !var2 {
		keyTarget3, fieldTarget4, err := fieldsTarget1.StartField("InstanceId")
		if err != vdl.ErrFieldNoExist && err != nil {
			return err
		}
		if err != vdl.ErrFieldNoExist {
			if err := fieldTarget4.FromInt(int64(m.InstanceId), vdl.Int32Type); err != nil {
				return err
			}
			if err := fieldsTarget1.FinishField(keyTarget3, fieldTarget4); err != nil {
				return err
			}
		}
	}
	var5 := (m.Origin == "")
	if !var5 {
		keyTarget6, fieldTarget7, err := fieldsTarget1.StartField("Origin")
		if err != vdl.ErrFieldNoExist && err != nil {
			return err
		}
		if err != vdl.ErrFieldNoExist {
			if err := fieldTarget7.FromString(string(m.Origin), vdl.StringType); err != nil {
				return err
			}
			if err := fieldsTarget1.FinishField(keyTarget6, fieldTarget7); err != nil {
				return err
			}
		}
	}
	var var8 bool
	if len(m.NamespaceRoots) == 0 {
		var8 = true
	}
	if !var8 {
		keyTarget9, fieldTarget10, err := fieldsTarget1.StartField("NamespaceRoots")
		if err != vdl.ErrFieldNoExist && err != nil {
			return err
		}
		if err != vdl.ErrFieldNoExist {

			listTarget11, err := fieldTarget10.StartList(__VDLTypebrowspr8, len(m.NamespaceRoots))
			if err != nil {
				return err
			}
			for i, elem13 := range m.NamespaceRoots {
				elemTarget12, err := listTarget11.StartElem(i)
				if err != nil {
					return err
				}
				if err := elemTarget12.FromString(string(elem13), vdl.StringType); err != nil {
					return err
				}
				if err := listTarget11.FinishElem(elemTarget12); err != nil {
					return err
				}
			}
			if err := fieldTarget10.FinishList(listTarget11); err != nil {
				return err
			}
			if err := fieldsTarget1.FinishField(keyTarget9, fieldTarget10); err != nil {
				return err
			}
		}
	}
	var14 := (m.Proxy == "")
	if !var14 {
		keyTarget15, fieldTarget16, err := fieldsTarget1.StartField("Proxy")
		if err != vdl.ErrFieldNoExist && err != nil {
			return err
		}
		if err != vdl.ErrFieldNoExist {
			if err := fieldTarget16.FromString(string(m.Proxy), vdl.StringType); err != nil {
				return err
			}
			if err := fieldsTarget1.FinishField(keyTarget15, fieldTarget16); err != nil {
				return err
			}
		}
	}
	if err := t.FinishFields(fieldsTarget1); err != nil {
		return err
	}
	return nil
}

func (m *CreateInstanceMessage) MakeVDLTarget() vdl.Target {
	return nil
}

func (m *CreateInstanceMessage) IsZero() bool {

	var1 := true
	var2 := (m.InstanceId == int32(0))
	var1 = var1 && var2
	var3 := (m.Origin == "")
	var1 = var1 && var3
	var var4 bool
	if len(m.NamespaceRoots) == 0 {
		var4 = true
	}
	var1 = var1 && var4
	var5 := (m.Proxy == "")
	var1 = var1 && var5
	return var1
}

func init() {
	vdl.Register((*StartMessage)(nil))
	vdl.Register((*AssociateAccountMessage)(nil))
	vdl.Register((*CreateAccountMessage)(nil))
	vdl.Register((*CleanupMessage)(nil))
	vdl.Register((*OriginHasAccountMessage)(nil))
	vdl.Register((*GetAccountsMessage)(nil))
	vdl.Register((*CreateInstanceMessage)(nil))
}

var __VDLTypebrowspr1 *vdl.Type = vdl.TypeOf((*AssociateAccountMessage)(nil))
var __VDLTypebrowspr4 *vdl.Type = vdl.TypeOf((*CleanupMessage)(nil))
var __VDLTypebrowspr3 *vdl.Type = vdl.TypeOf((*CreateAccountMessage)(nil))
var __VDLTypebrowspr7 *vdl.Type = vdl.TypeOf((*CreateInstanceMessage)(nil))
var __VDLTypebrowspr6 *vdl.Type = vdl.TypeOf((*GetAccountsMessage)(nil))
var __VDLTypebrowspr5 *vdl.Type = vdl.TypeOf((*OriginHasAccountMessage)(nil))
var __VDLTypebrowspr0 *vdl.Type = vdl.TypeOf((*StartMessage)(nil))
var __VDLTypebrowspr8 *vdl.Type = vdl.TypeOf([]string(nil))
var __VDLTypebrowspr2 *vdl.Type = vdl.TypeOf([]account.Caveat(nil))
var __VDLType_browspr_v_io_x_ref_services_identity_BlessingRootResponse *vdl.Type = vdl.TypeOf(identity.BlessingRootResponse{})
var __VDLType_browspr_v_io_x_ref_services_wspr_internal_account_Caveat *vdl.Type = vdl.TypeOf(account.Caveat{})
var __VDLType_browspr_v_io_x_ref_services_wspr_internal_browspr_AssociateAccountMessage *vdl.Type = vdl.TypeOf(AssociateAccountMessage{})
var __VDLType_browspr_v_io_x_ref_services_wspr_internal_browspr_CleanupMessage *vdl.Type = vdl.TypeOf(CleanupMessage{})
var __VDLType_browspr_v_io_x_ref_services_wspr_internal_browspr_CreateAccountMessage *vdl.Type = vdl.TypeOf(CreateAccountMessage{})
var __VDLType_browspr_v_io_x_ref_services_wspr_internal_browspr_CreateInstanceMessage *vdl.Type = vdl.TypeOf(CreateInstanceMessage{})
var __VDLType_browspr_v_io_x_ref_services_wspr_internal_browspr_GetAccountsMessage *vdl.Type = vdl.TypeOf(GetAccountsMessage{})
var __VDLType_browspr_v_io_x_ref_services_wspr_internal_browspr_OriginHasAccountMessage *vdl.Type = vdl.TypeOf(OriginHasAccountMessage{})
var __VDLType_browspr_v_io_x_ref_services_wspr_internal_browspr_StartMessage *vdl.Type = vdl.TypeOf(StartMessage{})

func __VDLEnsureNativeBuilt_browspr() {
}
